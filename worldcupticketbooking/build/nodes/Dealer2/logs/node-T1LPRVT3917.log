[INFO ] 2020-06-26T09:38:35,677Z [main] cliutils.CliWrapperBase. - Application Args: generate-node-info
[INFO ] 2020-06-26T09:38:40,043Z [main] manifests.Manifests. - 129 attributes loaded from 165 stream(s) in 488ms, 129 saved, 2603 ignored: ["ActiveMQ-Version", "Agent-Class", "Ant-Version", "Application-Class", "Application-ID", "Application-Library-Allowable-Codebase", "Application-Name", "Application-Version", "Apr-Version", "Archiver-Version", "Automatic-Module-Name", "Bnd-LastModified", "BoringSSL-Branch", "BoringSSL-Revision", "Branch", "Build-Date", "Build-Host", "Build-Id", "Build-Java-Version", "Build-Jdk", "Build-Jdk-Spec", "Build-Job", "Build-Number", "Build-Time", "Build-Timestamp", "Build-Version", "Built-By", "Built-OS", "Built-Status", "Bundle-Activator", "Bundle-Category", "Bundle-ClassPath", "Bundle-Description", "Bundle-DocURL", "Bundle-License", "Bundle-ManifestVersion", "Bundle-Name", "Bundle-NativeCode", "Bundle-RequiredExecutionEnvironment", "Bundle-SymbolicName", "Bundle-Vendor", "Bundle-Version", "Caller-Allowable-Codebase", "Can-Redefine-Classes", "Can-Retransform-Classes", "Can-Set-Native-Method-Prefix", "Caplets", "Change", "Class-Path", "Codebase", "Corda-DJVM-Dependencies", "Corda-Deterministic-Classpath", "Corda-Deterministic-Runtime", "Corda-Platform-Version", "Corda-Release-Version", "Corda-Revision", "Corda-Vendor", "Created-By", "DynamicImport-Package", "Eclipse-BuddyPolicy", "Eclipse-LazyStart", "Export-Package", "Extension-Name", "Fragment-Host", "Git-Revision", "Git-Url", "Gradle-Version", "Hibernate-JpaVersion", "Hibernate-VersionFamily", "Implementation-Build", "Implementation-Build-Date", "Implementation-Build-Id", "Implementation-Title", "Implementation-URL", "Implementation-Url", "Implementation-Vendor", "Implementation-Vendor-Id", "Implementation-Version", "Import-Package", "Include-Resource", "JCabi-Build", "JCabi-Date", "JCabi-Version", "JVM-Args", "Java-Agents", "Java-Vendor", "Java-Version", "Kotlin-Runtime-Component", "Kotlin-Version", "Liquibase-Package", "Log4jReleaseKey", "Log4jReleaseManager", "Log4jReleaseVersion", "Main-Class", "Main-class", "Major-Version", "Manifest-Version", "Min-Java-Version", "Min-Update-Version", "Module-Email", "Module-Origin", "Module-Owner", "Module-Source", "Multi-Release", "Originally-Created-By", "Os-Arch", "Os-Name", "Os-Version", "Permissions", "Premain-Class", "Private-Package", "Provide-Capability", "Require-Capability", "SCM-Revision", "SCM-url", "Scm-Connection", "Scm-Revision", "Scm-Url", "Sealed", "Service-Component", "Specification-Title", "Specification-Vendor", "Specification-Version", "System-Properties", "Tool", "Trusted-Library", "URL", "X-Compile-Source-JDK", "X-Compile-Target-JDK"]
[INFO ] 2020-06-26T09:38:40,413Z [main] BasicInfo. - Logs can be found in                    : C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\Dealer2\logs
[INFO ] 2020-06-26T09:38:44,782Z [main] subcommands.ValidateConfigurationCli. - Actual configuration:
{
    "additionalNodeInfoPollingFrequencyMsec" : 5000,
    "additionalP2PAddresses" : [],
    "attachmentCacheBound" : 1024,
    "baseDirectory" : "C:\\Users\\is96869\\Desktop\\corda\\samples-kotlin\\Accounts\\worldcupticketbooking\\build\\nodes\\Dealer2",
    "blacklistedAttachmentSigningKeys" : [],
    "certificateChainCheckPolicies" : [],
    "cordappSignerKeyFingerprintBlacklist" : [
        "56CA54E803CB87C8472EBD3FBC6A2F1876E814CEEBF74860BD46997F40729367",
        "83088052AF16700457AE2C978A7D8AC38DD6A7C713539D00B897CD03A5E5D31D",
        "6F6696296C3F58B55FB6CA865A025A3A6CC27AD17C4AFABA1E8EF062E0A82739"
    ],
    "crlCheckSoftFail" : true,
    "dataSourceProperties" : "*****",
    "database" : {
        "exportHibernateJMXStatistics" : false,
        "initialiseAppSchema" : "UPDATE",
        "initialiseSchema" : true,
        "mappedSchemaCacheSize" : 100,
        "transactionIsolationLevel" : "REPEATABLE_READ"
    },
    "detectPublicIp" : false,
    "devMode" : true,
    "emailAddress" : "admin@company.com",
    "extraNetworkMapKeys" : [],
    "flowExternalOperationThreadPoolSize" : 8,
    "flowMonitorPeriodMillis" : {
        "nanos" : 0,
        "seconds" : 60
    },
    "flowMonitorSuspensionLoggingThresholdMillis" : {
        "nanos" : 0,
        "seconds" : 60
    },
    "flowTimeout" : {
        "backoffBase" : 1.8,
        "maxRestartCount" : 6,
        "timeout" : {
            "nanos" : 0,
            "seconds" : 30
        }
    },
    "h2Settings" : {
        "address" : "localhost:20093"
    },
    "jarDirs" : [],
    "jmxReporterType" : "JOLOKIA",
    "keyStorePassword" : "*****",
    "lazyBridgeStart" : true,
    "localShellAllowExitInSafeMode" : true,
    "localShellUnsafe" : false,
    "myLegalName" : "O=Dealer2,L=Delhi,C=IN",
    "networkParameterAcceptanceSettings" : {
        "autoAcceptEnabled" : true,
        "excludedAutoAcceptableParameters" : []
    },
    "noLocalShell" : false,
    "p2pAddress" : "localhost:10090",
    "rpcSettings" : {
        "address" : "localhost:10091",
        "adminAddress" : "localhost:10092",
        "standAloneBroker" : false,
        "useSsl" : false
    },
    "rpcUsers" : [],
    "security" : {
        "authService" : {
            "dataSource" : {
                "passwordEncryption" : "NONE",
                "type" : "INMEMORY",
                "users" : [
                    {
                        "ignoresFallbacks" : false,
                        "resolved" : true,
                        "value" : {
                            "loadFactor" : 0.75,
                            "modCount" : 3,
                            "size" : 3,
                            "table" : {},
                            "threshold" : 3
                        }
                    }
                ]
            }
        }
    },
    "trustStorePassword" : "*****",
    "useTestClock" : false,
    "verifierType" : "InMemory"
}

[INFO ] 2020-06-26T09:38:44,929Z [main] internal.Node. - Vendor: Corda Open Source
[INFO ] 2020-06-26T09:38:44,929Z [main] internal.Node. - Release: 4.4
[INFO ] 2020-06-26T09:38:44,929Z [main] internal.Node. - Platform Version: 6
[INFO ] 2020-06-26T09:38:44,934Z [main] internal.Node. - Revision: 21e8c4ffb11ef68433e5087b1c2982bdcf3f37f0
[INFO ] 2020-06-26T09:38:44,937Z [main] internal.Node. - PID: 22956
[INFO ] 2020-06-26T09:38:44,937Z [main] internal.Node. - Main class: /C:/Users/is96869/Desktop/corda/samples-kotlin/Accounts/worldcupticketbooking/build/nodes/.cache/apps/net.corda.node.Corda_4.4/corda-node-4.4.jar
[INFO ] 2020-06-26T09:38:44,937Z [main] internal.Node. - CommandLine Args: -Xmx512m -XX:+UseG1GC -XX:+HeapDumpOnOutOfMemoryError -XX:+CrashOnOutOfMemoryError -javaagent:C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\quasar-core-0.7.12_r3-jdk8.jar=x(antlr**;bftsmart**;co.paralleluniverse**;com.codahale**;com.esotericsoftware**;com.fasterxml**;com.google**;com.ibm**;com.intellij**;com.jcabi**;com.nhaarman**;com.opengamma**;com.typesafe**;com.zaxxer**;de.javakaffee**;groovy**;groovyjarjarantlr**;groovyjarjarasm**;io.atomix**;io.github**;io.netty**;jdk**;kotlin**;net.corda.djvm**;djvm**;net.bytebuddy**;net.i2p**;org.apache**;org.bouncycastle**;org.codehaus**;org.crsh**;org.dom4j**;org.fusesource**;org.h2**;org.hibernate**;org.jboss**;org.jcp**;org.joda**;org.objectweb**;org.objenesis**;org.slf4j**;org.w3c**;org.xml**;org.yaml**;reflectasm**;rx**;org.jolokia**;com.lmax**;picocli**;liquibase**;com.github.benmanes**;org.json**;org.postgresql**;nonapi.io.github.classgraph**)l(net.corda.djvm.**) -javaagent:C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\Dealer2\corda.jar -Dcapsule.address=0.0.0.0 -Dvisualvm.display.name=Corda -Djava.library.path=C:\Program Files\Java\jdk1.8.0_251\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\IBM\RationalSDLC\common;C:\Oracle\product\12.2.0\client_1\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0;C:\Windows\System32\OpenSSH;C:\Program Files (x86)\Sennheiser\SoftphoneSDK;C:\PROGRA~2\IBM\SQLLIB\BIN;C:\PROGRA~2\IBM\SQLLIB\FUNCTION;C:\PROGRA~2\IBM\SQLLIB\SAMPLES\REPL;C:\Program Files (x86)\IBM\Personal Communications;C:\Program Files (x86)\IBM\Trace Facility;C:\Program Files (x86)\IBM\gsk8\lib;C:\Program Files (x86)\IBM\gsk8\bin;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn;C:\Program Files\Git\cmd;C:\Users\is96869\AppData\Local\Microsoft\WindowsApps;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4 -Dcapsule.log=1 -Dcapsule.app=net.corda.node.Corda_4.4 -Dcapsule.port=53815 -Dcapsule.dir=C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4 -Dcapsule.jar=C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\Dealer2\corda.jar
[INFO ] 2020-06-26T09:38:44,937Z [main] internal.Node. - bootclasspath: C:\Program Files\Java\jdk1.8.0_251\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_251\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_251\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_251\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_251\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_251\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_251\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_251\jre\classes
[INFO ] 2020-06-26T09:38:44,937Z [main] internal.Node. - classpath: C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\Dealer2\corda.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\tools.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\corda-shell-4.4.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\corda-rpc-4.4.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\corda-node-api-4.4.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\corda-tools-cliutils-4.4.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\corda-common-configuration-parsing-4.4.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\corda-common-validation-4.4.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\corda-common-logging-4.4.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\corda-confidential-identities-4.4.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\log4j-slf4j-impl-2.11.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\log4j-web-2.11.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\jul-to-slf4j-1.7.26.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\corda-serialization-djvm-4.4.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\corda-djvm-1.0.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\corda-jackson-4.4.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\corda-serialization-4.4.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\corda-core-4.4.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\kotlin-stdlib-jdk8-1.2.71.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\jackson-module-kotlin-2.9.7.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\kotlin-reflect-1.2.71.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\quasar-core-0.7.12_r3-jdk8.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\kryo-serializers-0.43.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\kryo-4.0.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\metrics-new-relic-1.1.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\guava-28.0-jre.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\caffeine-2.7.0.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\disruptor-3.4.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\commons-collections4-4.3.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\artemis-amqp-protocol-2.6.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\artemis-server-2.6.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\artemis-jdbc-store-2.6.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\artemis-journal-2.6.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\artemis-jms-client-2.6.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\artemis-core-client-2.6.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\artemis-commons-2.6.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\shiro-core-1.4.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\shiro-config-ogdl-1.4.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\commons-beanutils-1.9.3.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\jcabi-manifests-1.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\metrics-jmx-4.1.0.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\config-1.3.4.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\corda-node-djvm-4.4.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\h2-1.4.199.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\HikariCP-3.3.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\hibernate-java8-5.4.3.Final.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\hibernate-core-5.4.3.Final.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\okhttp-3.14.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\picocli-3.9.6.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\library-master-v1.1-beta-g6215ec8-87.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\commons-codec-1.13.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\copycat-client-1.2.3.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\copycat-server-1.2.3.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\catalyst-netty-1.1.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\jolokia-jvm-1.6.1-agent.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\netty-tcnative-boringssl-static-2.0.14.Final.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\kotlin-stdlib-jre8-1.2.71.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\proton-j-0.33.0.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\classgraph-4.8.58.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\liquibase-core-3.6.3.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\jackson-datatype-jsr310-2.9.7.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\jackson-databind-2.9.7.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\liquibase-slf4j-2.0.0.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\crash.connectors.ssh-1.7.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\crash.shell-1.7.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\jansi-1.18.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\log4j-core-2.11.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\commons-io-2.6.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\jcabi-log-0.14.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\metrics-core-4.1.0.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\shiro-cache-1.4.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\shiro-crypto-hash-1.4.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\shiro-crypto-cipher-1.4.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\shiro-config-core-1.4.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\shiro-event-1.4.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\shiro-crypto-core-1.4.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\shiro-lang-1.4.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\copycat-protocol-1.2.3.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\catalyst-transport-1.1.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\jcl-over-slf4j-1.7.26.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\mina-core-2.0.16.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\catalyst-concurrent-1.1.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\sshd-pam-0.11.0.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\sshd-core-2.3.0.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\sshd-common-2.3.0.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\catalyst-serializer-1.1.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\catalyst-buffer-1.1.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\catalyst-common-1.1.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\slf4j-api-1.7.26.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\log4j-api-2.11.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\kotlin-stdlib-jdk7-1.2.71.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\kotlin-stdlib-jre7-1.2.71.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\kotlin-stdlib-1.2.71.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\reflectasm-1.11.3.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\minlog-1.3.0.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\objenesis-2.5.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\failureaccess-1.0.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\jsr305-3.0.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\checker-qual-2.8.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\error_prone_annotations-2.3.3.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\j2objc-annotations-1.3.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\animal-sniffer-annotations-1.17.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\commons-collections-3.2.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\artemis-native-2.6.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\jboss-logging-3.3.2.Final.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\artemis-selector-2.6.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\netty-handler-4.1.29.Final.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\netty-codec-http-4.1.29.Final.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\netty-codec-4.1.29.Final.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\netty-transport-native-kqueue-4.1.29.Final-osx-x86_64.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\netty-transport-native-epoll-4.1.29.Final-linux-x86_64.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\netty-transport-native-unix-common-4.1.29.Final.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\netty-transport-4.1.29.Final.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\netty-buffer-4.1.29.Final.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\netty-resolver-4.1.29.Final.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\netty-common-4.1.29.Final.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\geronimo-json_1.0_spec-1.0-alpha-1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\jgroups-3.6.13.Final.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\johnzon-core-0.9.5.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\corda-deserializers-djvm-4.4.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\javax.persistence-api-2.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\javassist-3.24.0-GA.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\byte-buddy-1.9.10.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\antlr-2.7.7.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\jandex-2.0.5.Final.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\classmate-1.3.4.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\jaxb-runtime-2.3.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\jaxb-api-2.3.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\javax.activation-api-1.2.0.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\dom4j-2.1.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\okio-1.17.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\jolokia-core-1.6.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\json-simple-1.1.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\newrelic-api-3.10.0.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\LatencyUtils-2.0.3.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\HdrHistogram-2.1.9.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\asm-analysis-5.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\asm-commons-5.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\asm-util-5.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\asm-tree-5.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\asm-7.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\rxjava-1.3.8.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\commons-lang3-3.9.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\eddsa-0.3.0.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\bcpkix-jdk15on-1.60.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\bcprov-jdk15on-1.60.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\snappy-0.4.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\jackson-dataformat-yaml-2.9.7.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\snakeyaml-1.23.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\jackson-annotations-2.9.0.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\jackson-core-2.9.7.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\crash.cli-1.7.2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\groovy-all-1.8.9.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\kotlin-stdlib-common-1.2.71.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\annotations-13.0.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\txw2-2.3.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\istack-commons-runtime-3.0.7.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\stax-ex-1.8.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\FastInfoset-1.2.15.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\geronimo-jms_2.0_spec-1.0-alpha-2.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\jpam-1.1.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\corda-node-4.4.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\.cache\apps\net.corda.node.Corda_4.4\quasar-core-0.7.12_r3-jdk8.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\Dealer2\corda.jar
[INFO ] 2020-06-26T09:38:44,937Z [main] internal.Node. - VM Java HotSpot(TM) 64-Bit Server VM Oracle Corporation 25.251-b08
[INFO ] 2020-06-26T09:38:44,938Z [main] internal.Node. - Machine: T1LPRVT3917
[INFO ] 2020-06-26T09:38:44,938Z [main] internal.Node. - Working Directory: C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\Dealer2
[WARN ] 2020-06-26T09:38:45,102Z [main] internal.Node. - Unable to determine whether agent is running: sun.tools.attach.LinuxVirtualMachine.isLinuxThreads()Z.
You may need to pass in -Djdk.attach.allowAttachSelf=true if running on a Java 9 or later VM
[INFO ] 2020-06-26T09:38:45,102Z [main] internal.Node. - Starting as node on localhost:10090
[INFO ] 2020-06-26T09:38:45,644Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\Dealer2\cordapps]
[INFO ] 2020-06-26T09:38:45,752Z [main] cordapp.JarScanningCordappLoader. - No CorDapp paths provided
[INFO ] 2020-06-26T09:38:49,883Z [main] internal.Node. - Flow external operation executor has a max of 8 threads
[INFO ] 2020-06-26T09:38:50,582Z [main] internal.Node. - Generating nodeInfo ...
[INFO ] 2020-06-26T09:38:51,926Z [main] BasicInfo. - Database connection url is              : jdbc:h2:tcp://localhost:20093/node
[INFO ] 2020-06-26T09:38:51,951Z [main] hikari.HikariDataSource. - HikariPool-1 - Starting...
[INFO ] 2020-06-26T09:38:52,073Z [main] hikari.HikariDataSource. - HikariPool-1 - Start completed.
[INFO ] 2020-06-26T09:39:01,059Z [main] changelog.StandardChangeLogHistoryService. - Creating database history table with name: PUBLIC.DATABASECHANGELOG
[INFO ] 2020-06-26T09:39:01,063Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.DATABASECHANGELOG (ID VARCHAR(255) NOT NULL, AUTHOR VARCHAR(255) NOT NULL, FILENAME VARCHAR(255) NOT NULL, DATEEXECUTED TIMESTAMP NOT NULL, ORDEREXECUTED INT NOT NULL, EXECTYPE VARCHAR(10) NOT NULL, MD5SUM VARCHAR(35), DESCRIPTION VARCHAR(255), COMMENTS VARCHAR(255), TAG VARCHAR(255), LIQUIBASE VARCHAR(20), CONTEXTS VARCHAR(255), LABELS VARCHAR(255), DEPLOYMENT_ID VARCHAR(10))
[INFO ] 2020-06-26T09:39:01,074Z [main] jvm.JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOG
[INFO ] 2020-06-26T09:39:01,077Z [main] changelog.StandardChangeLogHistoryService. - Reading from PUBLIC.DATABASECHANGELOG
[INFO ] 2020-06-26T09:39:01,078Z [main] jvm.JdbcExecutor. - SELECT * FROM PUBLIC.DATABASECHANGELOG ORDER BY DATEEXECUTED ASC, ORDEREXECUTED ASC
[INFO ] 2020-06-26T09:39:01,188Z [main] jvm.JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 2020-06-26T09:39:01,195Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.DATABASECHANGELOGLOCK (ID INT NOT NULL, LOCKED BOOLEAN NOT NULL, LOCKGRANTED TIMESTAMP, LOCKEDBY VARCHAR(255), CONSTRAINT PK_DATABASECHANGELOGLOCK PRIMARY KEY (ID))
[INFO ] 2020-06-26T09:39:01,200Z [main] jvm.JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 2020-06-26T09:39:01,201Z [main] jvm.JdbcExecutor. - DELETE FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 2020-06-26T09:39:01,202Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOGLOCK (ID, LOCKED) VALUES (1, FALSE)
[INFO ] 2020-06-26T09:39:01,369Z [main] visitor.ValidatingVisitor. - Skipping change set migration/vault-schema.changelog-pkey.xml::non-clustered_pk-11::R3.Corda due to validation error(s): clustered is not allowed on h2 {changeSet=migration/vault-schema.changelog-pkey.xml::non-clustered_pk-11::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:01,371Z [main] visitor.ValidatingVisitor. - Skipping change set migration/vault-schema.changelog-pkey.xml::non-clustered_pk-12::R3.Corda due to validation error(s): clustered is not allowed on h2 {changeSet=migration/vault-schema.changelog-pkey.xml::non-clustered_pk-12::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:01,372Z [main] visitor.ValidatingVisitor. - Skipping change set migration/vault-schema.changelog-pkey.xml::non-clustered_pk-13::R3.Corda due to validation error(s): clustered is not allowed on h2 {changeSet=migration/vault-schema.changelog-pkey.xml::non-clustered_pk-13::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:01,764Z [main] visitor.ValidatingVisitor. - Skipping change set migration/node-core.changelog-pkey.xml::non-clustered_pk-1::R3.Corda due to validation error(s): clustered is not allowed on h2 {changeSet=migration/node-core.changelog-pkey.xml::non-clustered_pk-1::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:01,765Z [main] visitor.ValidatingVisitor. - Skipping change set migration/node-core.changelog-pkey.xml::non-clustered_pk-2::R3.Corda due to validation error(s): clustered is not allowed on h2 {changeSet=migration/node-core.changelog-pkey.xml::non-clustered_pk-2::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:01,766Z [main] visitor.ValidatingVisitor. - Skipping change set migration/node-core.changelog-pkey.xml::non-clustered_pk-3::R3.Corda due to validation error(s): clustered is not allowed on h2 {changeSet=migration/node-core.changelog-pkey.xml::non-clustered_pk-3::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:01,767Z [main] visitor.ValidatingVisitor. - Skipping change set migration/node-core.changelog-pkey.xml::non-clustered_pk-4::R3.Corda due to validation error(s): clustered is not allowed on h2 {changeSet=migration/node-core.changelog-pkey.xml::non-clustered_pk-4::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:01,767Z [main] visitor.ValidatingVisitor. - Skipping change set migration/node-core.changelog-pkey.xml::non-clustered_pk-5::R3.Corda due to validation error(s): clustered is not allowed on h2 {changeSet=migration/node-core.changelog-pkey.xml::non-clustered_pk-5::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:01,768Z [main] visitor.ValidatingVisitor. - Skipping change set migration/node-core.changelog-pkey.xml::non-clustered_pk-6::R3.Corda due to validation error(s): clustered is not allowed on h2 {changeSet=migration/node-core.changelog-pkey.xml::non-clustered_pk-6::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:01,769Z [main] visitor.ValidatingVisitor. - Skipping change set migration/node-core.changelog-pkey.xml::non-clustered_pk-7::R3.Corda due to validation error(s): clustered is not allowed on h2 {changeSet=migration/node-core.changelog-pkey.xml::non-clustered_pk-7::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:01,916Z [main] jvm.JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 2020-06-26T09:39:01,918Z [main] jvm.JdbcExecutor. - SELECT LOCKED FROM PUBLIC.DATABASECHANGELOGLOCK WHERE ID=1
[INFO ] 2020-06-26T09:39:01,930Z [main] lockservice.StandardLockService. - Successfully acquired change log lock
[INFO ] 2020-06-26T09:39:01,943Z [main] visitor.ValidatingVisitor. - Skipping change set migration/vault-schema.changelog-pkey.xml::non-clustered_pk-11::R3.Corda due to validation error(s): clustered is not allowed on h2 {changeSet=migration/vault-schema.changelog-pkey.xml::non-clustered_pk-11::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:01,947Z [main] visitor.ValidatingVisitor. - Skipping change set migration/vault-schema.changelog-pkey.xml::non-clustered_pk-12::R3.Corda due to validation error(s): clustered is not allowed on h2 {changeSet=migration/vault-schema.changelog-pkey.xml::non-clustered_pk-12::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:01,947Z [main] visitor.ValidatingVisitor. - Skipping change set migration/vault-schema.changelog-pkey.xml::non-clustered_pk-13::R3.Corda due to validation error(s): clustered is not allowed on h2 {changeSet=migration/vault-schema.changelog-pkey.xml::non-clustered_pk-13::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,073Z [main] visitor.ValidatingVisitor. - Skipping change set migration/node-core.changelog-pkey.xml::non-clustered_pk-1::R3.Corda due to validation error(s): clustered is not allowed on h2 {changeSet=migration/node-core.changelog-pkey.xml::non-clustered_pk-1::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,073Z [main] visitor.ValidatingVisitor. - Skipping change set migration/node-core.changelog-pkey.xml::non-clustered_pk-2::R3.Corda due to validation error(s): clustered is not allowed on h2 {changeSet=migration/node-core.changelog-pkey.xml::non-clustered_pk-2::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,073Z [main] visitor.ValidatingVisitor. - Skipping change set migration/node-core.changelog-pkey.xml::non-clustered_pk-3::R3.Corda due to validation error(s): clustered is not allowed on h2 {changeSet=migration/node-core.changelog-pkey.xml::non-clustered_pk-3::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,074Z [main] visitor.ValidatingVisitor. - Skipping change set migration/node-core.changelog-pkey.xml::non-clustered_pk-4::R3.Corda due to validation error(s): clustered is not allowed on h2 {changeSet=migration/node-core.changelog-pkey.xml::non-clustered_pk-4::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,074Z [main] visitor.ValidatingVisitor. - Skipping change set migration/node-core.changelog-pkey.xml::non-clustered_pk-5::R3.Corda due to validation error(s): clustered is not allowed on h2 {changeSet=migration/node-core.changelog-pkey.xml::non-clustered_pk-5::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,074Z [main] visitor.ValidatingVisitor. - Skipping change set migration/node-core.changelog-pkey.xml::non-clustered_pk-6::R3.Corda due to validation error(s): clustered is not allowed on h2 {changeSet=migration/node-core.changelog-pkey.xml::non-clustered_pk-6::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,074Z [main] visitor.ValidatingVisitor. - Skipping change set migration/node-core.changelog-pkey.xml::non-clustered_pk-7::R3.Corda due to validation error(s): clustered is not allowed on h2 {changeSet=migration/node-core.changelog-pkey.xml::non-clustered_pk-7::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,080Z [main] jvm.JdbcExecutor. - SELECT SEQUENCE_NAME FROM INFORMATION_SCHEMA.SEQUENCES WHERE SEQUENCE_SCHEMA = 'null' AND IS_GENERATED=FALSE {changeSet=migration/common.changelog-init.xml::1511451595465-1.1::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,098Z [main] jvm.JdbcExecutor. - SELECT SEQUENCE_NAME FROM INFORMATION_SCHEMA.SEQUENCES WHERE SEQUENCE_SCHEMA = 'PUBLIC' AND IS_GENERATED=FALSE {changeSet=migration/common.changelog-init.xml::1511451595465-1.1::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,099Z [main] jvm.JdbcExecutor. - CREATE SEQUENCE PUBLIC.hibernate_sequence {changeSet=migration/common.changelog-init.xml::1511451595465-1.1::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,105Z [main] changelog.ChangeSet. - Sequence hibernate_sequence created {changeSet=migration/common.changelog-init.xml::1511451595465-1.1::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,105Z [main] changelog.ChangeSet. - ChangeSet migration/common.changelog-init.xml::1511451595465-1.1::R3.Corda ran successfully in 26ms {changeSet=migration/common.changelog-init.xml::1511451595465-1.1::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,106Z [main] jvm.JdbcExecutor. - SELECT MAX(ORDEREXECUTED) FROM PUBLIC.DATABASECHANGELOG {changeSet=migration/common.changelog-init.xml::1511451595465-1.1::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,279Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-1.1', 'R3.Corda', 'migration/common.changelog-init.xml', NOW(), 1, '8:9df4ee4464a4a10dfcf2717c73a52620', 'createSequence sequenceName=hibernate_sequence', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/common.changelog-init.xml::1511451595465-1.1::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,306Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.vault_fungible_states (output_index INT NOT NULL, transaction_id NVARCHAR(64) NOT NULL, issuer_name NVARCHAR(255), issuer_ref VARBINARY(512), owner_name NVARCHAR(255), quantity BIGINT) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-22::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,313Z [main] changelog.ChangeSet. - Table vault_fungible_states created {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-22::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,314Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-init.xml::1511451595465-22::R3.Corda ran successfully in 10ms {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-22::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,316Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-22', 'R3.Corda', 'migration/vault-schema.changelog-init.xml', NOW(), 2, '8:4ae481f11ac84744a4392bbfd533fa75', 'createTable tableName=vault_fungible_states', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-22::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,320Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.vault_fungible_states_parts (output_index INT NOT NULL, transaction_id NVARCHAR(64) NOT NULL, participants NVARCHAR(255)) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-23::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,324Z [main] changelog.ChangeSet. - Table vault_fungible_states_parts created {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-23::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,325Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-init.xml::1511451595465-23::R3.Corda ran successfully in 6ms {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-23::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,330Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-23', 'R3.Corda', 'migration/vault-schema.changelog-init.xml', NOW(), 3, '8:3222255d3b2e04b9dfad42d9acab103e', 'createTable tableName=vault_fungible_states_parts', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-23::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,345Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.vault_linear_states (output_index INT NOT NULL, transaction_id NVARCHAR(64) NOT NULL, external_id NVARCHAR(255), uuid VARCHAR(255) NOT NULL) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-24::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,347Z [main] changelog.ChangeSet. - Table vault_linear_states created {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-24::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,347Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-init.xml::1511451595465-24::R3.Corda ran successfully in 3ms {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-24::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,348Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-24', 'R3.Corda', 'migration/vault-schema.changelog-init.xml', NOW(), 4, '8:fb2c5b52213239424320d137dc22059b', 'createTable tableName=vault_linear_states', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-24::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,351Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.vault_linear_states_parts (output_index INT NOT NULL, transaction_id NVARCHAR(64) NOT NULL, participants NVARCHAR(255)) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-25::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,356Z [main] changelog.ChangeSet. - Table vault_linear_states_parts created {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-25::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,356Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-init.xml::1511451595465-25::R3.Corda ran successfully in 6ms {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-25::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,357Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-25', 'R3.Corda', 'migration/vault-schema.changelog-init.xml', NOW(), 5, '8:ccb2ca1b37c0eeb2ac12506f17bc8ee0', 'createTable tableName=vault_linear_states_parts', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-25::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,432Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.vault_states (output_index INT NOT NULL, transaction_id NVARCHAR(64) NOT NULL, consumed_timestamp TIMESTAMP, contract_state_class_name NVARCHAR(255), lock_id NVARCHAR(255), lock_timestamp TIMESTAMP, notary_name NVARCHAR(255), recorded_timestamp TIMESTAMP, state_status INT) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-26::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,439Z [main] changelog.ChangeSet. - Table vault_states created {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-26::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,439Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-init.xml::1511451595465-26::R3.Corda ran successfully in 8ms {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-26::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,441Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-26', 'R3.Corda', 'migration/vault-schema.changelog-init.xml', NOW(), 6, '8:971edadc2af9e847ed490f418530d40b', 'createTable tableName=vault_states', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-26::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,443Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.vault_transaction_notes (seq_no INT NOT NULL, note NVARCHAR(255), transaction_id NVARCHAR(64)) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-27::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,446Z [main] changelog.ChangeSet. - Table vault_transaction_notes created {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-27::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,447Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-init.xml::1511451595465-27::R3.Corda ran successfully in 4ms {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-27::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,448Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-27', 'R3.Corda', 'migration/vault-schema.changelog-init.xml', NOW(), 7, '8:7a8064e58d100a02ed56e538122296e4', 'createTable tableName=vault_transaction_notes', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-27::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,450Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.vault_fungible_states ADD CONSTRAINT vault_fungible_states_pkey PRIMARY KEY (output_index, transaction_id) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-47::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,460Z [main] changelog.ChangeSet. - Primary key added to vault_fungible_states (output_index, transaction_id) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-47::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,460Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-init.xml::1511451595465-47::R3.Corda ran successfully in 11ms {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-47::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,461Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-47', 'R3.Corda', 'migration/vault-schema.changelog-init.xml', NOW(), 8, '8:4eddd48de14b69bdd265a4b0c438f070', 'addPrimaryKey constraintName=vault_fungible_states_pkey, tableName=vault_fungible_states', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-47::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,474Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.vault_linear_states ADD CONSTRAINT vault_linear_states_pkey PRIMARY KEY (output_index, transaction_id) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-48::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,477Z [main] changelog.ChangeSet. - Primary key added to vault_linear_states (output_index, transaction_id) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-48::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,477Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-init.xml::1511451595465-48::R3.Corda ran successfully in 3ms {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-48::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,479Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-48', 'R3.Corda', 'migration/vault-schema.changelog-init.xml', NOW(), 9, '8:3695c44ddebef2dde359dec253a5969a', 'addPrimaryKey constraintName=vault_linear_states_pkey, tableName=vault_linear_states', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-48::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,483Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.vault_states ADD CONSTRAINT vault_states_pkey PRIMARY KEY (output_index, transaction_id) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-49::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,485Z [main] changelog.ChangeSet. - Primary key added to vault_states (output_index, transaction_id) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-49::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,486Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-init.xml::1511451595465-49::R3.Corda ran successfully in 3ms {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-49::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,488Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-49', 'R3.Corda', 'migration/vault-schema.changelog-init.xml', NOW(), 10, '8:5d21dc3c09051ea30475250d25178892', 'addPrimaryKey constraintName=vault_states_pkey, tableName=vault_states', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-49::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,617Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.vault_transaction_notes ADD CONSTRAINT vault_transaction_notes_pkey PRIMARY KEY (seq_no) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-50::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,621Z [main] changelog.ChangeSet. - Primary key added to vault_transaction_notes (seq_no) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-50::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,621Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-init.xml::1511451595465-50::R3.Corda ran successfully in 6ms {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-50::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,623Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-50', 'R3.Corda', 'migration/vault-schema.changelog-init.xml', NOW(), 11, '8:2bf545e5d7593a3456708426c3686ebb', 'addPrimaryKey constraintName=vault_transaction_notes_pkey, tableName=vault_transaction_notes', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-50::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,626Z [main] jvm.JdbcExecutor. - CREATE INDEX PUBLIC.external_id_index ON PUBLIC.vault_linear_states(external_id) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-53::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,628Z [main] changelog.ChangeSet. - Index external_id_index created {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-53::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,628Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-init.xml::1511451595465-53::R3.Corda ran successfully in 3ms {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-53::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,629Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-53', 'R3.Corda', 'migration/vault-schema.changelog-init.xml', NOW(), 12, '8:b1272090dcd2325b0382f829ce13a1ff', 'createIndex indexName=external_id_index, tableName=vault_linear_states', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-53::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,631Z [main] jvm.JdbcExecutor. - CREATE INDEX PUBLIC.lock_id_idx ON PUBLIC.vault_states(lock_id, state_status) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-55::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,632Z [main] changelog.ChangeSet. - Index lock_id_idx created {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-55::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,633Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-init.xml::1511451595465-55::R3.Corda ran successfully in 1ms {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-55::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,634Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-55', 'R3.Corda', 'migration/vault-schema.changelog-init.xml', NOW(), 13, '8:0b77fbedaccc2eed4b8efd6fddf6581b', 'createIndex indexName=lock_id_idx, tableName=vault_states', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-55::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,636Z [main] jvm.JdbcExecutor. - CREATE INDEX PUBLIC.state_status_idx ON PUBLIC.vault_states(state_status) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-58::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,637Z [main] changelog.ChangeSet. - Index state_status_idx created {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-58::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,637Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-init.xml::1511451595465-58::R3.Corda ran successfully in 2ms {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-58::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,638Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-58', 'R3.Corda', 'migration/vault-schema.changelog-init.xml', NOW(), 14, '8:7a1bbb20835907728df143e4cc1bfc04', 'createIndex indexName=state_status_idx, tableName=vault_states', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-58::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,640Z [main] jvm.JdbcExecutor. - CREATE INDEX PUBLIC.transaction_id_index ON PUBLIC.vault_transaction_notes(transaction_id) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-59::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,642Z [main] changelog.ChangeSet. - Index transaction_id_index created {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-59::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,642Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-init.xml::1511451595465-59::R3.Corda ran successfully in 2ms {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-59::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,643Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-59', 'R3.Corda', 'migration/vault-schema.changelog-init.xml', NOW(), 15, '8:2bfe64cedfc8120dc219d42dc19d49f6', 'createIndex indexName=transaction_id_index, tableName=vault_transaction_notes', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-59::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,645Z [main] jvm.JdbcExecutor. - CREATE INDEX PUBLIC.uuid_index ON PUBLIC.vault_linear_states(uuid) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-60::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,647Z [main] changelog.ChangeSet. - Index uuid_index created {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-60::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,647Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-init.xml::1511451595465-60::R3.Corda ran successfully in 2ms {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-60::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,648Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-60', 'R3.Corda', 'migration/vault-schema.changelog-init.xml', NOW(), 16, '8:4cffb289ce33d922274cc829175a2a55', 'createIndex indexName=uuid_index, tableName=vault_linear_states', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-60::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,668Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.vault_fungible_states_parts ADD CONSTRAINT FK__fung_st_parts__fung_st FOREIGN KEY (output_index, transaction_id) REFERENCES PUBLIC.vault_fungible_states (output_index, transaction_id) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-64::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,709Z [main] changelog.ChangeSet. - Foreign key constraint added to vault_fungible_states_parts (output_index,transaction_id) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-64::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,710Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-init.xml::1511451595465-64::R3.Corda ran successfully in 58ms {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-64::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,713Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-64', 'R3.Corda', 'migration/vault-schema.changelog-init.xml', NOW(), 17, '8:1bde72346badbbe52e74b189ce1d079c', 'addForeignKeyConstraint baseTableName=vault_fungible_states_parts, constraintName=FK__fung_st_parts__fung_st, referencedTableName=vault_fungible_states', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-64::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,719Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.vault_linear_states_parts ADD CONSTRAINT FK__lin_stat_parts__lin_stat FOREIGN KEY (output_index, transaction_id) REFERENCES PUBLIC.vault_linear_states (output_index, transaction_id) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-65::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,727Z [main] changelog.ChangeSet. - Foreign key constraint added to vault_linear_states_parts (output_index,transaction_id) {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-65::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,727Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-init.xml::1511451595465-65::R3.Corda ran successfully in 8ms {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-65::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,728Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-65', 'R3.Corda', 'migration/vault-schema.changelog-init.xml', NOW(), 18, '8:9a5d0106c45f631cb60a3e2f9542d2c2', 'addForeignKeyConstraint baseTableName=vault_linear_states_parts, constraintName=FK__lin_stat_parts__lin_stat, referencedTableName=vault_linear_states', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-init.xml::1511451595465-65::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,730Z [main] jvm.JdbcExecutor. - DELETE FROM PUBLIC.vault_fungible_states_parts {changeSet=migration/vault-schema.changelog-v3.xml::clean_vault::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,731Z [main] changelog.ChangeSet. - Data deleted from vault_fungible_states_parts {changeSet=migration/vault-schema.changelog-v3.xml::clean_vault::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,731Z [main] jvm.JdbcExecutor. - DELETE FROM PUBLIC.vault_fungible_states {changeSet=migration/vault-schema.changelog-v3.xml::clean_vault::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,731Z [main] changelog.ChangeSet. - Data deleted from vault_fungible_states {changeSet=migration/vault-schema.changelog-v3.xml::clean_vault::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,731Z [main] jvm.JdbcExecutor. - DELETE FROM PUBLIC.vault_linear_states_parts {changeSet=migration/vault-schema.changelog-v3.xml::clean_vault::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,732Z [main] changelog.ChangeSet. - Data deleted from vault_linear_states_parts {changeSet=migration/vault-schema.changelog-v3.xml::clean_vault::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,732Z [main] jvm.JdbcExecutor. - DELETE FROM PUBLIC.vault_linear_states {changeSet=migration/vault-schema.changelog-v3.xml::clean_vault::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,732Z [main] changelog.ChangeSet. - Data deleted from vault_linear_states {changeSet=migration/vault-schema.changelog-v3.xml::clean_vault::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,732Z [main] jvm.JdbcExecutor. - DELETE FROM PUBLIC.vault_states {changeSet=migration/vault-schema.changelog-v3.xml::clean_vault::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,732Z [main] changelog.ChangeSet. - Data deleted from vault_states {changeSet=migration/vault-schema.changelog-v3.xml::clean_vault::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,732Z [main] jvm.JdbcExecutor. - DELETE FROM PUBLIC.vault_transaction_notes {changeSet=migration/vault-schema.changelog-v3.xml::clean_vault::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,732Z [main] changelog.ChangeSet. - Data deleted from vault_transaction_notes {changeSet=migration/vault-schema.changelog-v3.xml::clean_vault::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,733Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-v3.xml::clean_vault::R3.Corda ran successfully in 3ms {changeSet=migration/vault-schema.changelog-v3.xml::clean_vault::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,736Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('clean_vault', 'R3.Corda', 'migration/vault-schema.changelog-v3.xml', NOW(), 19, '8:0701d37bf9b322ada2323cea6db9393c', 'delete tableName=vault_fungible_states_parts; delete tableName=vault_fungible_states; delete tableName=vault_linear_states_parts; delete tableName=vault_linear_states; delete tableName=vault_states; delete tableName=vault_transaction_notes', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-v3.xml::clean_vault::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,738Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.vault_fungible_states ALTER COLUMN quantity SET NOT NULL {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,741Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to vault_fungible_states.quantity {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,741Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.vault_states ALTER COLUMN contract_state_class_name SET NOT NULL {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,743Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to vault_states.contract_state_class_name {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,743Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.vault_states ALTER COLUMN notary_name SET NOT NULL {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,745Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to vault_states.notary_name {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,745Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.vault_states ALTER COLUMN recorded_timestamp SET NOT NULL {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,834Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to vault_states.recorded_timestamp {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,834Z [main] jvm.JdbcExecutor. - DROP INDEX PUBLIC.state_status_idx {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,838Z [main] changelog.ChangeSet. - Index state_status_idx dropped from table vault_states {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,838Z [main] jvm.JdbcExecutor. - DROP INDEX PUBLIC.lock_id_idx {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,841Z [main] changelog.ChangeSet. - Index lock_id_idx dropped from table vault_states {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,842Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.vault_states ALTER COLUMN state_status SET NOT NULL {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,843Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to vault_states.state_status {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,843Z [main] jvm.JdbcExecutor. - CREATE INDEX PUBLIC.state_status_idx ON PUBLIC.vault_states(state_status) {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,845Z [main] changelog.ChangeSet. - Index state_status_idx created {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,845Z [main] jvm.JdbcExecutor. - CREATE INDEX PUBLIC.lock_id_idx ON PUBLIC.vault_states(lock_id, state_status) {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,846Z [main] changelog.ChangeSet. - Index lock_id_idx created {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,847Z [main] jvm.JdbcExecutor. - DROP INDEX PUBLIC.transaction_id_index {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,848Z [main] changelog.ChangeSet. - Index transaction_id_index dropped from table vault_transaction_notes {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,851Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.vault_transaction_notes ALTER COLUMN note SET NOT NULL {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,852Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to vault_transaction_notes.note {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,853Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.vault_transaction_notes ALTER COLUMN transaction_id SET NOT NULL {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,855Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to vault_transaction_notes.transaction_id {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,855Z [main] jvm.JdbcExecutor. - CREATE INDEX PUBLIC.transaction_id_index ON PUBLIC.vault_transaction_notes(transaction_id) {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,856Z [main] changelog.ChangeSet. - Index transaction_id_index created {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,856Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-v4.xml::nullability::R3.Corda ran successfully in 118ms {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,858Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('nullability', 'R3.Corda', 'migration/vault-schema.changelog-v4.xml', NOW(), 20, '8:853fd1e24b974ff22712322ebb2860bf', 'addNotNullConstraint columnName=quantity, tableName=vault_fungible_states; addNotNullConstraint columnName=contract_state_class_name, tableName=vault_states; addNotNullConstraint columnName=notary_name, tableName=vault_states; addNotNullConstraint...', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,862Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('non-clustered_pk-11', 'R3.Corda', 'migration/vault-schema.changelog-pkey.xml', NOW(), 21, '8:7fca5375330f0b3b62de65b84274dd6e', 'dropForeignKeyConstraint baseTableName=vault_fungible_states_parts, constraintName=FK__fung_st_parts__fung_st; dropPrimaryKey constraintName=vault_fungible_states_pkey, tableName=vault_fungible_states; addPrimaryKey constraintName=vault_fungible_s...', '', 'MARK_RAN', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-pkey.xml::non-clustered_pk-11::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,865Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('non-clustered_pk-12', 'R3.Corda', 'migration/vault-schema.changelog-pkey.xml', NOW(), 22, '8:8469058af292b08d108fcf1b3eb8fca4', 'dropForeignKeyConstraint baseTableName=vault_linear_states_parts, constraintName=FK__lin_stat_parts__lin_stat; dropPrimaryKey constraintName=vault_linear_states_pkey, tableName=vault_linear_states; addPrimaryKey constraintName=vault_linear_states_...', '', 'MARK_RAN', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-pkey.xml::non-clustered_pk-12::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,868Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('non-clustered_pk-13', 'R3.Corda', 'migration/vault-schema.changelog-pkey.xml', NOW(), 23, '8:e0ccce8941c28a45870d60f5bf54cd50', 'dropPrimaryKey constraintName=vault_states_pkey, tableName=vault_states; addPrimaryKey constraintName=vault_states_pkey, tableName=vault_states', '', 'MARK_RAN', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-pkey.xml::non-clustered_pk-13::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,912Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.vault_states ADD relevancy_status INT {changeSet=migration/vault-schema.changelog-v5.xml::add_relevancy_status_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,931Z [main] changelog.ChangeSet. - Columns relevancy_status(INT) added to vault_states {changeSet=migration/vault-schema.changelog-v5.xml::add_relevancy_status_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,931Z [main] jvm.JdbcExecutor. - UPDATE PUBLIC.vault_states SET relevancy_status = 0 {changeSet=migration/vault-schema.changelog-v5.xml::add_relevancy_status_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,931Z [main] changelog.ChangeSet. - Data updated in vault_states {changeSet=migration/vault-schema.changelog-v5.xml::add_relevancy_status_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,932Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.vault_states ALTER COLUMN relevancy_status SET NOT NULL {changeSet=migration/vault-schema.changelog-v5.xml::add_relevancy_status_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,933Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to vault_states.relevancy_status {changeSet=migration/vault-schema.changelog-v5.xml::add_relevancy_status_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,933Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-v5.xml::add_relevancy_status_column::R3.Corda ran successfully in 63ms {changeSet=migration/vault-schema.changelog-v5.xml::add_relevancy_status_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,934Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_relevancy_status_column', 'R3.Corda', 'migration/vault-schema.changelog-v5.xml', NOW(), 24, '8:93c5dcaf00387d4d643def4355a54b56', 'addColumn tableName=vault_states; update tableName=vault_states; addNotNullConstraint columnName=relevancy_status, tableName=vault_states', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-v5.xml::add_relevancy_status_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:02,937Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.vault_states ADD constraint_type INT DEFAULT '0' NOT NULL {changeSet=migration/vault-schema.changelog-v6.xml::add_is_constraint_information_columns::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,008Z [main] changelog.ChangeSet. - Columns constraint_type(INT) added to vault_states {changeSet=migration/vault-schema.changelog-v6.xml::add_is_constraint_information_columns::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,008Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.vault_states ADD constraint_data VARBINARY(563) {changeSet=migration/vault-schema.changelog-v6.xml::add_is_constraint_information_columns::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,057Z [main] changelog.ChangeSet. - Columns constraint_data(varbinary(563)) added to vault_states {changeSet=migration/vault-schema.changelog-v6.xml::add_is_constraint_information_columns::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,057Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-v6.xml::add_is_constraint_information_columns::R3.Corda ran successfully in 121ms {changeSet=migration/vault-schema.changelog-v6.xml::add_is_constraint_information_columns::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,058Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_is_constraint_information_columns', 'R3.Corda', 'migration/vault-schema.changelog-v6.xml', NOW(), 25, '8:acf60bd84f648e157d402de8f8e22f3a', 'addColumn tableName=vault_states; addColumn tableName=vault_states', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-v6.xml::add_is_constraint_information_columns::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,062Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.vault_fungible_states ALTER COLUMN issuer_ref SET NULL {changeSet=migration/vault-schema.changelog-v7.xml::make_issuer_ref_nullable::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,063Z [main] changelog.ChangeSet. - Null constraint dropped from vault_fungible_states.issuer_ref {changeSet=migration/vault-schema.changelog-v7.xml::make_issuer_ref_nullable::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,063Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-v7.xml::make_issuer_ref_nullable::R3.Corda ran successfully in 1ms {changeSet=migration/vault-schema.changelog-v7.xml::make_issuer_ref_nullable::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,066Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('make_issuer_ref_nullable', 'R3.Corda', 'migration/vault-schema.changelog-v7.xml', NOW(), 26, '8:58039722b4808e90a7711d3c82e5fc95', 'dropNotNullConstraint columnName=issuer_ref, tableName=vault_fungible_states', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-v7.xml::make_issuer_ref_nullable::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,068Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.state_party (output_index INT, transaction_id NVARCHAR(64), public_key_hash NVARCHAR(255) NOT NULL, x500_name NVARCHAR(255)) {changeSet=migration/vault-schema.changelog-v8.xml::create-external-id-to-state-party-view::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,069Z [main] changelog.ChangeSet. - Table state_party created {changeSet=migration/vault-schema.changelog-v8.xml::create-external-id-to-state-party-view::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,069Z [main] jvm.JdbcExecutor. - CREATE INDEX PUBLIC.state_pk_hash_idx ON PUBLIC.state_party(public_key_hash) {changeSet=migration/vault-schema.changelog-v8.xml::create-external-id-to-state-party-view::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,070Z [main] changelog.ChangeSet. - Index state_pk_hash_idx created {changeSet=migration/vault-schema.changelog-v8.xml::create-external-id-to-state-party-view::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,070Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.pk_hash_to_ext_id_map (id BIGINT NOT NULL, external_id VARCHAR(255) NOT NULL, public_key_hash NVARCHAR(255) NOT NULL) {changeSet=migration/vault-schema.changelog-v8.xml::create-external-id-to-state-party-view::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,071Z [main] changelog.ChangeSet. - Table pk_hash_to_ext_id_map created {changeSet=migration/vault-schema.changelog-v8.xml::create-external-id-to-state-party-view::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,072Z [main] jvm.JdbcExecutor. - CREATE INDEX PUBLIC.pk_hash_to_xid_idx ON PUBLIC.pk_hash_to_ext_id_map(public_key_hash) {changeSet=migration/vault-schema.changelog-v8.xml::create-external-id-to-state-party-view::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,073Z [main] changelog.ChangeSet. - Index pk_hash_to_xid_idx created {changeSet=migration/vault-schema.changelog-v8.xml::create-external-id-to-state-party-view::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,076Z [main] jvm.JdbcExecutor. - CREATE VIEW PUBLIC.v_pkey_hash_ex_id_map AS select
                state_party.public_key_hash,
                state_party.transaction_id,
                state_party.output_index,
                pk_hash_to_ext_id_map.external_id
            from state_party
            join pk_hash_to_ext_id_map
            on state_party.public_key_hash = pk_hash_to_ext_id_map.public_key_hash {changeSet=migration/vault-schema.changelog-v8.xml::create-external-id-to-state-party-view::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,078Z [main] changelog.ChangeSet. - View v_pkey_hash_ex_id_map created {changeSet=migration/vault-schema.changelog-v8.xml::create-external-id-to-state-party-view::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,078Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-v8.xml::create-external-id-to-state-party-view::R3.Corda ran successfully in 11ms {changeSet=migration/vault-schema.changelog-v8.xml::create-external-id-to-state-party-view::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,080Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('create-external-id-to-state-party-view', 'R3.Corda', 'migration/vault-schema.changelog-v8.xml', NOW(), 27, '8:9a5b20f7b7367bb3b86f600bccaa423b', 'createTable tableName=state_party; createIndex indexName=state_pk_hash_idx, tableName=state_party; createTable tableName=pk_hash_to_ext_id_map; createIndex indexName=pk_hash_to_xid_idx, tableName=pk_hash_to_ext_id_map; createView viewName=v_pkey_h...', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-v8.xml::create-external-id-to-state-party-view::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,158Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.vault_states ALTER COLUMN constraint_data VARBINARY(20000) {changeSet=migration/vault-schema.changelog-v11.xml::expand_constraint_data_size::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,171Z [main] changelog.ChangeSet. - vault_states.constraint_data datatype was changed to varbinary(20000) {changeSet=migration/vault-schema.changelog-v11.xml::expand_constraint_data_size::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,171Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-v11.xml::expand_constraint_data_size::R3.Corda ran successfully in 14ms {changeSet=migration/vault-schema.changelog-v11.xml::expand_constraint_data_size::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,172Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('expand_constraint_data_size', 'R3.Corda', 'migration/vault-schema.changelog-v11.xml', NOW(), 28, '8:0bd51f3d930d4b03d7b1075454bb2d70', 'modifyDataType columnName=constraint_data, tableName=vault_states', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-v11.xml::expand_constraint_data_size::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,175Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.node_link_nodeinfo_party (node_info_id INT NOT NULL, party_name NVARCHAR(255) NOT NULL) {changeSet=migration/node-info.changelog-init.xml::1511451595465-4::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,176Z [main] changelog.ChangeSet. - Table node_link_nodeinfo_party created {changeSet=migration/node-info.changelog-init.xml::1511451595465-4::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,176Z [main] changelog.ChangeSet. - ChangeSet migration/node-info.changelog-init.xml::1511451595465-4::R3.Corda ran successfully in 2ms {changeSet=migration/node-info.changelog-init.xml::1511451595465-4::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,177Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-4', 'R3.Corda', 'migration/node-info.changelog-init.xml', NOW(), 29, '8:cbf3edf78266c3bd22738eaf20c7c111', 'createTable tableName=node_link_nodeinfo_party', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-info.changelog-init.xml::1511451595465-4::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,179Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.node_info_hosts (host NVARCHAR(255) NOT NULL, port INT NOT NULL, node_info_id INT) {changeSet=migration/node-info.changelog-init.xml::1511451595465-10::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,180Z [main] changelog.ChangeSet. - Table node_info_hosts created {changeSet=migration/node-info.changelog-init.xml::1511451595465-10::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,180Z [main] changelog.ChangeSet. - ChangeSet migration/node-info.changelog-init.xml::1511451595465-10::R3.Corda ran successfully in 1ms {changeSet=migration/node-info.changelog-init.xml::1511451595465-10::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,182Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-10', 'R3.Corda', 'migration/node-info.changelog-init.xml', NOW(), 30, '8:f0b2c5a77ffde6aaa3c417095fc220a9', 'createTable tableName=node_info_hosts', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-info.changelog-init.xml::1511451595465-10::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,183Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.node_info_party_cert (party_name NVARCHAR(255) NOT NULL, ismain BOOLEAN NOT NULL, owning_key_hash NVARCHAR(130), party_cert_binary BLOB) {changeSet=migration/node-info.changelog-init.xml::1511451595465-11::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,185Z [main] changelog.ChangeSet. - Table node_info_party_cert created {changeSet=migration/node-info.changelog-init.xml::1511451595465-11::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,185Z [main] changelog.ChangeSet. - ChangeSet migration/node-info.changelog-init.xml::1511451595465-11::R3.Corda ran successfully in 2ms {changeSet=migration/node-info.changelog-init.xml::1511451595465-11::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,187Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-11', 'R3.Corda', 'migration/node-info.changelog-init.xml', NOW(), 31, '8:5eacbf7ce0d85376219f1903b55f5e18', 'createTable tableName=node_info_party_cert', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-info.changelog-init.xml::1511451595465-11::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,190Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.node_infos (node_info_id INT NOT NULL, node_info_hash NVARCHAR(64), platform_version INT, serial BIGINT) {changeSet=migration/node-info.changelog-init.xml::1511451595465-12::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,192Z [main] changelog.ChangeSet. - Table node_infos created {changeSet=migration/node-info.changelog-init.xml::1511451595465-12::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,192Z [main] changelog.ChangeSet. - ChangeSet migration/node-info.changelog-init.xml::1511451595465-12::R3.Corda ran successfully in 3ms {changeSet=migration/node-info.changelog-init.xml::1511451595465-12::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,193Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-12', 'R3.Corda', 'migration/node-info.changelog-init.xml', NOW(), 32, '8:7e30f20cf268860d637ecfb8635f45a3', 'createTable tableName=node_infos', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-info.changelog-init.xml::1511451595465-12::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,195Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_info_hosts ADD CONSTRAINT node_info_hosts_pkey PRIMARY KEY (host, port) {changeSet=migration/node-info.changelog-init.xml::1511451595465-35::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,348Z [main] changelog.ChangeSet. - Primary key added to node_info_hosts (host, port) {changeSet=migration/node-info.changelog-init.xml::1511451595465-35::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,348Z [main] changelog.ChangeSet. - ChangeSet migration/node-info.changelog-init.xml::1511451595465-35::R3.Corda ran successfully in 153ms {changeSet=migration/node-info.changelog-init.xml::1511451595465-35::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,354Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-35', 'R3.Corda', 'migration/node-info.changelog-init.xml', NOW(), 33, '8:0d1a734e7350a8278808f540d992fedf', 'addPrimaryKey constraintName=node_info_hosts_pkey, tableName=node_info_hosts', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-info.changelog-init.xml::1511451595465-35::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,358Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_info_party_cert ADD CONSTRAINT node_info_party_cert_pkey PRIMARY KEY (party_name) {changeSet=migration/node-info.changelog-init.xml::1511451595465-36::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,363Z [main] changelog.ChangeSet. - Primary key added to node_info_party_cert (party_name) {changeSet=migration/node-info.changelog-init.xml::1511451595465-36::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,363Z [main] changelog.ChangeSet. - ChangeSet migration/node-info.changelog-init.xml::1511451595465-36::R3.Corda ran successfully in 5ms {changeSet=migration/node-info.changelog-init.xml::1511451595465-36::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,365Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-36', 'R3.Corda', 'migration/node-info.changelog-init.xml', NOW(), 34, '8:dc78ba227ce869f406d2645c2064e8dc', 'addPrimaryKey constraintName=node_info_party_cert_pkey, tableName=node_info_party_cert', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-info.changelog-init.xml::1511451595465-36::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,367Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_infos ADD CONSTRAINT node_infos_pkey PRIMARY KEY (node_info_id) {changeSet=migration/node-info.changelog-init.xml::1511451595465-37::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,372Z [main] changelog.ChangeSet. - Primary key added to node_infos (node_info_id) {changeSet=migration/node-info.changelog-init.xml::1511451595465-37::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,372Z [main] changelog.ChangeSet. - ChangeSet migration/node-info.changelog-init.xml::1511451595465-37::R3.Corda ran successfully in 5ms {changeSet=migration/node-info.changelog-init.xml::1511451595465-37::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,373Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-37', 'R3.Corda', 'migration/node-info.changelog-init.xml', NOW(), 35, '8:c07cbda2d04c6d77539ac802c66df023', 'addPrimaryKey constraintName=node_infos_pkey, tableName=node_infos', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-info.changelog-init.xml::1511451595465-37::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,375Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_link_nodeinfo_party ADD CONSTRAINT FK__link_nodeinfo_party__infos FOREIGN KEY (node_info_id) REFERENCES PUBLIC.node_infos (node_info_id) {changeSet=migration/node-info.changelog-init.xml::1511451595465-62::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,431Z [main] changelog.ChangeSet. - Foreign key constraint added to node_link_nodeinfo_party (node_info_id) {changeSet=migration/node-info.changelog-init.xml::1511451595465-62::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,431Z [main] changelog.ChangeSet. - ChangeSet migration/node-info.changelog-init.xml::1511451595465-62::R3.Corda ran successfully in 56ms {changeSet=migration/node-info.changelog-init.xml::1511451595465-62::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,433Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-62', 'R3.Corda', 'migration/node-info.changelog-init.xml', NOW(), 36, '8:073bbdb8865055a19cde67340a2063e2', 'addForeignKeyConstraint baseTableName=node_link_nodeinfo_party, constraintName=FK__link_nodeinfo_party__infos, referencedTableName=node_infos', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-info.changelog-init.xml::1511451595465-62::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,461Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_info_hosts ADD CONSTRAINT FK__info_hosts__infos FOREIGN KEY (node_info_id) REFERENCES PUBLIC.node_infos (node_info_id) {changeSet=migration/node-info.changelog-init.xml::1511451595465-63::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,476Z [main] changelog.ChangeSet. - Foreign key constraint added to node_info_hosts (node_info_id) {changeSet=migration/node-info.changelog-init.xml::1511451595465-63::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,476Z [main] changelog.ChangeSet. - ChangeSet migration/node-info.changelog-init.xml::1511451595465-63::R3.Corda ran successfully in 15ms {changeSet=migration/node-info.changelog-init.xml::1511451595465-63::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,478Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-63', 'R3.Corda', 'migration/node-info.changelog-init.xml', NOW(), 37, '8:fa5ee007de41334ad2ac991b32969076', 'addForeignKeyConstraint baseTableName=node_info_hosts, constraintName=FK__info_hosts__infos, referencedTableName=node_infos', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-info.changelog-init.xml::1511451595465-63::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,479Z [main] jvm.JdbcExecutor. - DELETE FROM PUBLIC.node_infos {changeSet=migration/node-info.changelog-init.xml::remove_host_port_pk::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,480Z [main] changelog.ChangeSet. - Data deleted from node_infos {changeSet=migration/node-info.changelog-init.xml::remove_host_port_pk::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,480Z [main] jvm.JdbcExecutor. - DELETE FROM PUBLIC.node_link_nodeinfo_party {changeSet=migration/node-info.changelog-init.xml::remove_host_port_pk::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,480Z [main] changelog.ChangeSet. - Data deleted from node_link_nodeinfo_party {changeSet=migration/node-info.changelog-init.xml::remove_host_port_pk::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,480Z [main] jvm.JdbcExecutor. - DELETE FROM PUBLIC.node_info_hosts {changeSet=migration/node-info.changelog-init.xml::remove_host_port_pk::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,480Z [main] changelog.ChangeSet. - Data deleted from node_info_hosts {changeSet=migration/node-info.changelog-init.xml::remove_host_port_pk::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,480Z [main] jvm.JdbcExecutor. - DELETE FROM PUBLIC.node_info_party_cert {changeSet=migration/node-info.changelog-init.xml::remove_host_port_pk::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,480Z [main] changelog.ChangeSet. - Data deleted from node_info_party_cert {changeSet=migration/node-info.changelog-init.xml::remove_host_port_pk::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,481Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_info_hosts DROP PRIMARY KEY {changeSet=migration/node-info.changelog-init.xml::remove_host_port_pk::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,482Z [main] changelog.ChangeSet. - Primary key dropped from node_info_hosts {changeSet=migration/node-info.changelog-init.xml::remove_host_port_pk::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,482Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_info_hosts ADD hosts_id INT NOT NULL {changeSet=migration/node-info.changelog-init.xml::remove_host_port_pk::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,676Z [main] changelog.ChangeSet. - Columns hosts_id(INT) added to node_info_hosts {changeSet=migration/node-info.changelog-init.xml::remove_host_port_pk::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,676Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_info_hosts ADD CONSTRAINT node_info_hosts_pkey_id PRIMARY KEY (hosts_id) {changeSet=migration/node-info.changelog-init.xml::remove_host_port_pk::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,678Z [main] changelog.ChangeSet. - Primary key added to node_info_hosts (hosts_id) {changeSet=migration/node-info.changelog-init.xml::remove_host_port_pk::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,678Z [main] changelog.ChangeSet. - ChangeSet migration/node-info.changelog-init.xml::remove_host_port_pk::R3.Corda ran successfully in 199ms {changeSet=migration/node-info.changelog-init.xml::remove_host_port_pk::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,680Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('remove_host_port_pk', 'R3.Corda', 'migration/node-info.changelog-init.xml', NOW(), 38, '8:50fa65c10fd9bb3d89e0ad75d29a0e4d', 'delete tableName=node_infos; delete tableName=node_link_nodeinfo_party; delete tableName=node_info_hosts; delete tableName=node_info_party_cert; dropPrimaryKey constraintName=node_info_hosts_pkey, tableName=node_info_hosts; addColumn tableName=nod...', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-info.changelog-init.xml::remove_host_port_pk::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,682Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.node_properties (property_key NVARCHAR(255) NOT NULL, property_value NVARCHAR(255)) {changeSet=migration/node-info.changelog-v1.xml::key/value node properties table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,683Z [main] changelog.ChangeSet. - Table node_properties created {changeSet=migration/node-info.changelog-v1.xml::key/value node properties table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,683Z [main] changelog.ChangeSet. - ChangeSet migration/node-info.changelog-v1.xml::key/value node properties table::R3.Corda ran successfully in 2ms {changeSet=migration/node-info.changelog-v1.xml::key/value node properties table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,685Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('key/value node properties table', 'R3.Corda', 'migration/node-info.changelog-v1.xml', NOW(), 39, '8:39e4c897aa5e893e79a0434af2948a91', 'createTable tableName=node_properties', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-info.changelog-v1.xml::key/value node properties table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,687Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_infos ALTER COLUMN node_info_hash SET NOT NULL {changeSet=migration/node-info.changelog-v2.xml::1525962920::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,698Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to node_infos.node_info_hash {changeSet=migration/node-info.changelog-v2.xml::1525962920::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,698Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_infos ALTER COLUMN platform_version SET NOT NULL {changeSet=migration/node-info.changelog-v2.xml::1525962920::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,699Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to node_infos.platform_version {changeSet=migration/node-info.changelog-v2.xml::1525962920::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,700Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_infos ALTER COLUMN serial SET NOT NULL {changeSet=migration/node-info.changelog-v2.xml::1525962920::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,702Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to node_infos.serial {changeSet=migration/node-info.changelog-v2.xml::1525962920::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,702Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_info_hosts ALTER COLUMN host SET NULL {changeSet=migration/node-info.changelog-v2.xml::1525962920::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,703Z [main] changelog.ChangeSet. - Null constraint dropped from node_info_hosts.host {changeSet=migration/node-info.changelog-v2.xml::1525962920::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,703Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_info_hosts ALTER COLUMN port SET NULL {changeSet=migration/node-info.changelog-v2.xml::1525962920::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,704Z [main] changelog.ChangeSet. - Null constraint dropped from node_info_hosts.port {changeSet=migration/node-info.changelog-v2.xml::1525962920::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,705Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_info_party_cert ALTER COLUMN owning_key_hash SET NOT NULL {changeSet=migration/node-info.changelog-v2.xml::1525962920::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,706Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to node_info_party_cert.owning_key_hash {changeSet=migration/node-info.changelog-v2.xml::1525962920::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,706Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_info_party_cert ALTER COLUMN party_cert_binary SET NOT NULL {changeSet=migration/node-info.changelog-v2.xml::1525962920::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,707Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to node_info_party_cert.party_cert_binary {changeSet=migration/node-info.changelog-v2.xml::1525962920::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,707Z [main] changelog.ChangeSet. - ChangeSet migration/node-info.changelog-v2.xml::1525962920::R3.Corda ran successfully in 21ms {changeSet=migration/node-info.changelog-v2.xml::1525962920::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,708Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1525962920', 'R3.Corda', 'migration/node-info.changelog-v2.xml', NOW(), 40, '8:cc835e848ed6cc1f4b2a2e8e31fa92f1', 'addNotNullConstraint columnName=node_info_hash, tableName=node_infos; addNotNullConstraint columnName=platform_version, tableName=node_infos; addNotNullConstraint columnName=serial, tableName=node_infos; dropNotNullConstraint columnName=host, tabl...', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-info.changelog-v2.xml::1525962920::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,710Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_info_hosts ALTER COLUMN host RENAME TO host_name {changeSet=migration/node-info.changelog-v3.xml::column_host_name::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,712Z [main] changelog.ChangeSet. - Column node_info_hosts.host renamed to host_name {changeSet=migration/node-info.changelog-v3.xml::column_host_name::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,712Z [main] changelog.ChangeSet. - ChangeSet migration/node-info.changelog-v3.xml::column_host_name::R3.Corda ran successfully in 2ms {changeSet=migration/node-info.changelog-v3.xml::column_host_name::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,713Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('column_host_name', 'R3.Corda', 'migration/node-info.changelog-v3.xml', NOW(), 41, '8:e5fb9380221a91515f45ee44c9c30053', 'renameColumn newColumnName=host_name, oldColumnName=host, tableName=node_info_hosts', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-info.changelog-v3.xml::column_host_name::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,715Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.node_attachments (att_id NVARCHAR(255) NOT NULL, content BLOB, filename NVARCHAR(255), insertion_date TIMESTAMP NOT NULL, uploader NVARCHAR(255)) {changeSet=migration/node-services.changelog-init.xml::1511451595465-5::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,717Z [main] changelog.ChangeSet. - Table node_attachments created {changeSet=migration/node-services.changelog-init.xml::1511451595465-5::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,717Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-5::R3.Corda ran successfully in 2ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-5::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,718Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-5', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 42, '8:380e64788d9896c1166e4c22336d01e4', 'createTable tableName=node_attachments', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-5::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,889Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.node_checkpoints (checkpoint_id NVARCHAR(64) NOT NULL, checkpoint_value BLOB) {changeSet=migration/node-services.changelog-init.xml::1511451595465-7::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,890Z [main] changelog.ChangeSet. - Table node_checkpoints created {changeSet=migration/node-services.changelog-init.xml::1511451595465-7::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,891Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-7::R3.Corda ran successfully in 171ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-7::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,931Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-7', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 43, '8:8aefa1967ed80f8f98b69247c70c9f24', 'createTable tableName=node_checkpoints', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-7::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,942Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.node_contract_upgrades (state_ref NVARCHAR(96) NOT NULL, contract_class_name NVARCHAR(255)) {changeSet=migration/node-services.changelog-init.xml::1511451595465-8::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,944Z [main] changelog.ChangeSet. - Table node_contract_upgrades created {changeSet=migration/node-services.changelog-init.xml::1511451595465-8::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,944Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-8::R3.Corda ran successfully in 11ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-8::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,945Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-8', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 44, '8:6b06fe4c0ef085967f4dbd00dca08533', 'createTable tableName=node_contract_upgrades', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-8::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,948Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.node_identities (pk_hash NVARCHAR(130) NOT NULL, identity_value BLOB) {changeSet=migration/node-services.changelog-init.xml::1511451595465-9::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,949Z [main] changelog.ChangeSet. - Table node_identities created {changeSet=migration/node-services.changelog-init.xml::1511451595465-9::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,949Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-9::R3.Corda ran successfully in 1ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-9::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,950Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-9', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 45, '8:293963c9989772e272e1397c8ae9dfb1', 'createTable tableName=node_identities', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-9::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,952Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.node_message_ids (message_id NVARCHAR(64) NOT NULL, insertion_time TIMESTAMP) {changeSet=migration/node-services.changelog-init.xml::1511451595465-13::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,953Z [main] changelog.ChangeSet. - Table node_message_ids created {changeSet=migration/node-services.changelog-init.xml::1511451595465-13::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,953Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-13::R3.Corda ran successfully in 1ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-13::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,954Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-13', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 46, '8:421bb9432660d6cdf67a18c6f0acdeb4', 'createTable tableName=node_message_ids', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-13::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,956Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.node_message_retry (message_id BIGINT NOT NULL, message BLOB, recipients BLOB) {changeSet=migration/node-services.changelog-init.xml::1511451595465-14::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,957Z [main] changelog.ChangeSet. - Table node_message_retry created {changeSet=migration/node-services.changelog-init.xml::1511451595465-14::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,957Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-14::R3.Corda ran successfully in 1ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-14::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,959Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-14', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 47, '8:ba7acbbe63086c3c9fb627ea948864b2', 'createTable tableName=node_message_retry', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-14::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,962Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.node_named_identities (name NVARCHAR(128) NOT NULL, pk_hash NVARCHAR(130)) {changeSet=migration/node-services.changelog-init.xml::1511451595465-15::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,963Z [main] changelog.ChangeSet. - Table node_named_identities created {changeSet=migration/node-services.changelog-init.xml::1511451595465-15::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,963Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-15::R3.Corda ran successfully in 1ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-15::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,965Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-15', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 48, '8:bf6ca4e45e140b225f6f934935dd2f34', 'createTable tableName=node_named_identities', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-15::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,966Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.node_our_key_pairs (public_key_hash NVARCHAR(130) NOT NULL, private_key BLOB, public_key BLOB) {changeSet=migration/node-services.changelog-init.xml::1511451595465-17::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,967Z [main] changelog.ChangeSet. - Table node_our_key_pairs created {changeSet=migration/node-services.changelog-init.xml::1511451595465-17::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,967Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-17::R3.Corda ran successfully in 1ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-17::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,968Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-17', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 49, '8:e91eb86cb57176d4605d948f694d8441', 'createTable tableName=node_our_key_pairs', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-17::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,970Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.node_scheduled_states (output_index INT NOT NULL, transaction_id NVARCHAR(64) NOT NULL, scheduled_at TIMESTAMP NOT NULL) {changeSet=migration/node-services.changelog-init.xml::1511451595465-19::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,971Z [main] changelog.ChangeSet. - Table node_scheduled_states created {changeSet=migration/node-services.changelog-init.xml::1511451595465-19::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,971Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-19::R3.Corda ran successfully in 1ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-19::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,973Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-19', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 50, '8:55282f9fbfc1cb8f7583a90173e3ff4c', 'createTable tableName=node_scheduled_states', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-19::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:03,974Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.node_transaction_mappings (tx_id NVARCHAR(64) NOT NULL, state_machine_run_id NVARCHAR(36)) {changeSet=migration/node-services.changelog-init.xml::1511451595465-20::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,136Z [main] changelog.ChangeSet. - Table node_transaction_mappings created {changeSet=migration/node-services.changelog-init.xml::1511451595465-20::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,136Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-20::R3.Corda ran successfully in 162ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-20::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,138Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-20', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 51, '8:cc085b3d33f3d53b75c8866522653f98', 'createTable tableName=node_transaction_mappings', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-20::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,140Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.node_transactions (tx_id NVARCHAR(64) NOT NULL, transaction_value BLOB) {changeSet=migration/node-services.changelog-init.xml::1511451595465-21::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,147Z [main] changelog.ChangeSet. - Table node_transactions created {changeSet=migration/node-services.changelog-init.xml::1511451595465-21::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,147Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-21::R3.Corda ran successfully in 7ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-21::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,148Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-21', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 52, '8:69feb7582f3b77828510a56cb111cfd8', 'createTable tableName=node_transactions', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-21::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,175Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_attachments ADD CONSTRAINT node_attachments_pkey PRIMARY KEY (att_id) {changeSet=migration/node-services.changelog-init.xml::1511451595465-30::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,196Z [main] changelog.ChangeSet. - Primary key added to node_attachments (att_id) {changeSet=migration/node-services.changelog-init.xml::1511451595465-30::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,197Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-30::R3.Corda ran successfully in 47ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-30::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,201Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-30', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 53, '8:97c42d4eac368e79f47df345a072b237', 'addPrimaryKey constraintName=node_attachments_pkey, tableName=node_attachments', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-30::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,204Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_checkpoints ADD CONSTRAINT node_checkpoints_pkey PRIMARY KEY (checkpoint_id) {changeSet=migration/node-services.changelog-init.xml::1511451595465-32::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,206Z [main] changelog.ChangeSet. - Primary key added to node_checkpoints (checkpoint_id) {changeSet=migration/node-services.changelog-init.xml::1511451595465-32::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,206Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-32::R3.Corda ran successfully in 2ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-32::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,208Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-32', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 54, '8:7224c32660081d3e820e52e2b70b365f', 'addPrimaryKey constraintName=node_checkpoints_pkey, tableName=node_checkpoints', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-32::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,214Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_contract_upgrades ADD CONSTRAINT node_contract_upgrades_pkey PRIMARY KEY (state_ref) {changeSet=migration/node-services.changelog-init.xml::1511451595465-33::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,215Z [main] changelog.ChangeSet. - Primary key added to node_contract_upgrades (state_ref) {changeSet=migration/node-services.changelog-init.xml::1511451595465-33::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,215Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-33::R3.Corda ran successfully in 2ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-33::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,217Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-33', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 55, '8:85bcae037a29317065e3b922e0563902', 'addPrimaryKey constraintName=node_contract_upgrades_pkey, tableName=node_contract_upgrades', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-33::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,220Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_identities ADD CONSTRAINT node_identities_pkey PRIMARY KEY (pk_hash) {changeSet=migration/node-services.changelog-init.xml::1511451595465-34::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,249Z [main] changelog.ChangeSet. - Primary key added to node_identities (pk_hash) {changeSet=migration/node-services.changelog-init.xml::1511451595465-34::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,249Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-34::R3.Corda ran successfully in 30ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-34::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,251Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-34', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 56, '8:308ffe9985df3029fc05bd41c60010a9', 'addPrimaryKey constraintName=node_identities_pkey, tableName=node_identities', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-34::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,254Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_message_ids ADD CONSTRAINT node_message_ids_pkey PRIMARY KEY (message_id) {changeSet=migration/node-services.changelog-init.xml::1511451595465-38::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,255Z [main] changelog.ChangeSet. - Primary key added to node_message_ids (message_id) {changeSet=migration/node-services.changelog-init.xml::1511451595465-38::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,255Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-38::R3.Corda ran successfully in 1ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-38::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,256Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-38', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 57, '8:18b1b83ce2a778af1a8a8c9c56bb9651', 'addPrimaryKey constraintName=node_message_ids_pkey, tableName=node_message_ids', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-38::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,274Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_message_retry ADD CONSTRAINT node_message_retry_pkey PRIMARY KEY (message_id) {changeSet=migration/node-services.changelog-init.xml::1511451595465-39::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,277Z [main] changelog.ChangeSet. - Primary key added to node_message_retry (message_id) {changeSet=migration/node-services.changelog-init.xml::1511451595465-39::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,277Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-39::R3.Corda ran successfully in 4ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-39::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,535Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-39', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 58, '8:0359c73c9db723c73ee0171620ff4ac6', 'addPrimaryKey constraintName=node_message_retry_pkey, tableName=node_message_retry', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-39::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,541Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_named_identities ADD CONSTRAINT node_named_identities_pkey PRIMARY KEY (name) {changeSet=migration/node-services.changelog-init.xml::1511451595465-40::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,542Z [main] changelog.ChangeSet. - Primary key added to node_named_identities (name) {changeSet=migration/node-services.changelog-init.xml::1511451595465-40::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,542Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-40::R3.Corda ran successfully in 6ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-40::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,544Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-40', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 59, '8:ef3ab101a3e4c5820f575d5adcb85c08', 'addPrimaryKey constraintName=node_named_identities_pkey, tableName=node_named_identities', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-40::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,546Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_our_key_pairs ADD CONSTRAINT node_our_key_pairs_pkey PRIMARY KEY (public_key_hash) {changeSet=migration/node-services.changelog-init.xml::1511451595465-42::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,547Z [main] changelog.ChangeSet. - Primary key added to node_our_key_pairs (public_key_hash) {changeSet=migration/node-services.changelog-init.xml::1511451595465-42::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,549Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-42::R3.Corda ran successfully in 2ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-42::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,550Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-42', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 60, '8:d742088fd258d00e0a1fbffcf2e27c61', 'addPrimaryKey constraintName=node_our_key_pairs_pkey, tableName=node_our_key_pairs', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-42::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,561Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_scheduled_states ADD CONSTRAINT node_scheduled_states_pkey PRIMARY KEY (output_index, transaction_id) {changeSet=migration/node-services.changelog-init.xml::1511451595465-44::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,563Z [main] changelog.ChangeSet. - Primary key added to node_scheduled_states (output_index, transaction_id) {changeSet=migration/node-services.changelog-init.xml::1511451595465-44::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,563Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-44::R3.Corda ran successfully in 10ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-44::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,564Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-44', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 61, '8:dc8b980de5154038877f6d2e43b97ad1', 'addPrimaryKey constraintName=node_scheduled_states_pkey, tableName=node_scheduled_states', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-44::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,570Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_transaction_mappings ADD CONSTRAINT node_transaction_mappings_pkey PRIMARY KEY (tx_id) {changeSet=migration/node-services.changelog-init.xml::1511451595465-45::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,572Z [main] changelog.ChangeSet. - Primary key added to node_transaction_mappings (tx_id) {changeSet=migration/node-services.changelog-init.xml::1511451595465-45::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,574Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-45::R3.Corda ran successfully in 4ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-45::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,575Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-45', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 62, '8:2ae0fa18530e20aa3bcd6109b7d95247', 'addPrimaryKey constraintName=node_transaction_mappings_pkey, tableName=node_transaction_mappings', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-45::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,579Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_transactions ADD CONSTRAINT node_transactions_pkey PRIMARY KEY (tx_id) {changeSet=migration/node-services.changelog-init.xml::1511451595465-46::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,581Z [main] changelog.ChangeSet. - Primary key added to node_transactions (tx_id) {changeSet=migration/node-services.changelog-init.xml::1511451595465-46::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,581Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-46::R3.Corda ran successfully in 2ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-46::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,584Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-46', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 63, '8:d5e4dd3dba8e89f77b6eeff0fc5b7a49', 'addPrimaryKey constraintName=node_transactions_pkey, tableName=node_transactions', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-46::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,586Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_link_nodeinfo_party ADD CONSTRAINT FK__link_ni_p__info_p_cert FOREIGN KEY (party_name) REFERENCES PUBLIC.node_info_party_cert (party_name) {changeSet=migration/node-services.changelog-init.xml::1511451595465-61::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,588Z [main] changelog.ChangeSet. - Foreign key constraint added to node_link_nodeinfo_party (party_name) {changeSet=migration/node-services.changelog-init.xml::1511451595465-61::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,588Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::1511451595465-61::R3.Corda ran successfully in 3ms {changeSet=migration/node-services.changelog-init.xml::1511451595465-61::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,590Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('1511451595465-61', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 64, '8:1d4e406a8056aa782ccbd978771f1fb9', 'addForeignKeyConstraint baseTableName=node_link_nodeinfo_party, constraintName=FK__link_ni_p__info_p_cert, referencedTableName=node_info_party_cert', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::1511451595465-61::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,592Z [main] jvm.JdbcExecutor. - CREATE INDEX PUBLIC.att_id_idx ON PUBLIC.node_attachments(att_id) {changeSet=migration/node-services.changelog-init.xml::add index att_id::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,593Z [main] changelog.ChangeSet. - Index att_id_idx created {changeSet=migration/node-services.changelog-init.xml::add index att_id::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,593Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add index att_id::R3.Corda ran successfully in 2ms {changeSet=migration/node-services.changelog-init.xml::add index att_id::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,594Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add index att_id', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 65, '8:ccf9b08f32d685dc60d6e34a3013bffc', 'createIndex indexName=att_id_idx, tableName=node_attachments', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::add index att_id::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,798Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.node_attchments_contracts (att_id NVARCHAR(255) NOT NULL, contract_class_name NVARCHAR(255)) {changeSet=migration/node-services.changelog-init.xml::add_contract_attachment::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,807Z [main] changelog.ChangeSet. - Table node_attchments_contracts created {changeSet=migration/node-services.changelog-init.xml::add_contract_attachment::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,807Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_attchments_contracts ADD CONSTRAINT FK__ctr_class__attachments FOREIGN KEY (att_id) REFERENCES PUBLIC.node_attachments (att_id) {changeSet=migration/node-services.changelog-init.xml::add_contract_attachment::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,811Z [main] changelog.ChangeSet. - Foreign key constraint added to node_attchments_contracts (att_id) {changeSet=migration/node-services.changelog-init.xml::add_contract_attachment::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,811Z [main] jvm.JdbcExecutor. - DELETE FROM PUBLIC.node_attachments {changeSet=migration/node-services.changelog-init.xml::add_contract_attachment::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,811Z [main] changelog.ChangeSet. - Data deleted from node_attachments {changeSet=migration/node-services.changelog-init.xml::add_contract_attachment::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,811Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_contract_attachment::R3.Corda ran successfully in 13ms {changeSet=migration/node-services.changelog-init.xml::add_contract_attachment::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,813Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_contract_attachment', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 66, '8:8898557cf18644883f6f3b0c5e784c0b', 'createTable tableName=node_attchments_contracts; addForeignKeyConstraint baseTableName=node_attchments_contracts, constraintName=FK__ctr_class__attachments, referencedTableName=node_attachments; delete tableName=node_attachments', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::add_contract_attachment::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,815Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_message_ids ADD sender NVARCHAR(64) {changeSet=migration/node-services.changelog-init.xml::add_dedup_columns::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,822Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_message_ids ADD sequence_number BIGINT {changeSet=migration/node-services.changelog-init.xml::add_dedup_columns::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,828Z [main] changelog.ChangeSet. - Columns sender(NVARCHAR(64)),sequence_number(BIGINT) added to node_message_ids {changeSet=migration/node-services.changelog-init.xml::add_dedup_columns::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,829Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_dedup_columns::R3.Corda ran successfully in 15ms {changeSet=migration/node-services.changelog-init.xml::add_dedup_columns::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,830Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_dedup_columns', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 67, '8:5924ebdacff695e1f30aa3e0173eccdf', 'addColumn tableName=node_message_ids', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::add_dedup_columns::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,832Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_attchments_contracts RENAME TO node_attachments_contracts {changeSet=migration/node-core.changelog-v4.xml::attchments_rename::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,833Z [main] changelog.ChangeSet. - Table node_attchments_contracts renamed to node_attachments_contracts {changeSet=migration/node-core.changelog-v4.xml::attchments_rename::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,833Z [main] changelog.ChangeSet. - ChangeSet migration/node-core.changelog-v4.xml::attchments_rename::R3.Corda ran successfully in 2ms {changeSet=migration/node-core.changelog-v4.xml::attchments_rename::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,834Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('attchments_rename', 'R3.Corda', 'migration/node-core.changelog-v4.xml', NOW(), 68, '8:94816d7657264059f2b8da4e97d4b15d', 'renameTable newTableName=node_attachments_contracts, oldTableName=node_attchments_contracts', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-core.changelog-v4.xml::attchments_rename::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,836Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_identities ALTER COLUMN identity_value SET NOT NULL {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,837Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to node_identities.identity_value {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,838Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_attachments ALTER COLUMN content SET NOT NULL {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,839Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to node_attachments.content {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,839Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_attachments_contracts ALTER COLUMN contract_class_name SET NOT NULL {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,840Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to node_attachments_contracts.contract_class_name {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:04,841Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_checkpoints ALTER COLUMN checkpoint_value SET NOT NULL {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,022Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to node_checkpoints.checkpoint_value {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,023Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_contract_upgrades ALTER COLUMN contract_class_name SET NOT NULL {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,025Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to node_contract_upgrades.contract_class_name {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,025Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_message_ids ALTER COLUMN insertion_time SET NOT NULL {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,026Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to node_message_ids.insertion_time {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,027Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_message_retry ALTER COLUMN message SET NOT NULL {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,032Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to node_message_retry.message {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,033Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_message_retry ALTER COLUMN recipients SET NOT NULL {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,036Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to node_message_retry.recipients {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,036Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_named_identities ALTER COLUMN pk_hash SET NOT NULL {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,037Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to node_named_identities.pk_hash {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,038Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_our_key_pairs ALTER COLUMN private_key SET NOT NULL {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,039Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to node_our_key_pairs.private_key {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,039Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_our_key_pairs ALTER COLUMN public_key SET NOT NULL {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,040Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to node_our_key_pairs.public_key {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,040Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_transaction_mappings ALTER COLUMN state_machine_run_id SET NOT NULL {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,042Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to node_transaction_mappings.state_machine_run_id {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,043Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_transactions ALTER COLUMN transaction_value SET NOT NULL {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,044Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to node_transactions.transaction_value {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,044Z [main] changelog.ChangeSet. - ChangeSet migration/node-core.changelog-v4.xml::nullability::R3.Corda ran successfully in 208ms {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,049Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('nullability', 'R3.Corda', 'migration/node-core.changelog-v4.xml', NOW(), 69, '8:62ddcf64aece5dc383fa400ac8ccc392', 'addNotNullConstraint columnName=identity_value, tableName=node_identities; addNotNullConstraint columnName=content, tableName=node_attachments; addNotNullConstraint columnName=contract_class_name, tableName=node_attachments_contracts; addNotNullCo...', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-core.changelog-v4.xml::nullability::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,052Z [main] jvm.JdbcExecutor. - DROP TABLE PUBLIC.node_message_retry {changeSet=migration/node-core.changelog-v5.xml::remove_unused_node_message_retry::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,057Z [main] changelog.ChangeSet. - Table node_message_retry dropped {changeSet=migration/node-core.changelog-v5.xml::remove_unused_node_message_retry::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,057Z [main] changelog.ChangeSet. - ChangeSet migration/node-core.changelog-v5.xml::remove_unused_node_message_retry::R3.Corda ran successfully in 5ms {changeSet=migration/node-core.changelog-v5.xml::remove_unused_node_message_retry::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,058Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('remove_unused_node_message_retry', 'R3.Corda', 'migration/node-core.changelog-v5.xml', NOW(), 70, '8:7f43b1a30ed49119520e7d14de6b57bd', 'dropTable tableName=node_message_retry', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-core.changelog-v5.xml::remove_unused_node_message_retry::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,061Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('non-clustered_pk-1', 'R3.Corda', 'migration/node-core.changelog-pkey.xml', NOW(), 71, '8:fc341b0d5ff080f0093d8a528299de25', 'dropPrimaryKey constraintName=node_checkpoints_pkey, tableName=node_checkpoints; addPrimaryKey constraintName=node_checkpoints_pkey, tableName=node_checkpoints', '', 'MARK_RAN', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-core.changelog-pkey.xml::non-clustered_pk-1::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,064Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('non-clustered_pk-2', 'R3.Corda', 'migration/node-core.changelog-pkey.xml', NOW(), 72, '8:438db96910ca09a1e8910e74fe31d943', 'dropPrimaryKey constraintName=node_identities_pkey, tableName=node_identities; addPrimaryKey constraintName=node_identities_pkey, tableName=node_identities', '', 'MARK_RAN', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-core.changelog-pkey.xml::non-clustered_pk-2::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,069Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('non-clustered_pk-3', 'R3.Corda', 'migration/node-core.changelog-pkey.xml', NOW(), 73, '8:b02515ba3eb419e880a62ad581d57d9a', 'dropPrimaryKey constraintName=node_message_ids_pkey, tableName=node_message_ids; addPrimaryKey constraintName=node_message_ids_pkey, tableName=node_message_ids', '', 'MARK_RAN', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-core.changelog-pkey.xml::non-clustered_pk-3::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,072Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('non-clustered_pk-4', 'R3.Corda', 'migration/node-core.changelog-pkey.xml', NOW(), 74, '8:9a733c73c5a8ca979384c41d59473644', 'dropPrimaryKey constraintName=node_named_identities_pkey, tableName=node_named_identities; addPrimaryKey constraintName=node_named_identities_pkey, tableName=node_named_identities', '', 'MARK_RAN', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-core.changelog-pkey.xml::non-clustered_pk-4::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,209Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('non-clustered_pk-5', 'R3.Corda', 'migration/node-core.changelog-pkey.xml', NOW(), 75, '8:48cf4a4dad77b6a8f7c3c73c09cc3959', 'dropPrimaryKey constraintName=node_our_key_pairs_pkey, tableName=node_our_key_pairs; addPrimaryKey constraintName=node_our_key_pairs_pkey, tableName=node_our_key_pairs', '', 'MARK_RAN', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-core.changelog-pkey.xml::non-clustered_pk-5::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,232Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('non-clustered_pk-6', 'R3.Corda', 'migration/node-core.changelog-pkey.xml', NOW(), 76, '8:25c5581ce04f688ea83704ffa44bab8e', 'dropPrimaryKey constraintName=node_transaction_mappings_pkey, tableName=node_transaction_mappings; addPrimaryKey constraintName=node_transaction_mappings_pkey, tableName=node_transaction_mappings', '', 'MARK_RAN', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-core.changelog-pkey.xml::non-clustered_pk-6::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,236Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('non-clustered_pk-7', 'R3.Corda', 'migration/node-core.changelog-pkey.xml', NOW(), 77, '8:64773359f27e2f85fe6df6097823ce69', 'dropPrimaryKey constraintName=node_transactions_pkey, tableName=node_transactions; addPrimaryKey constraintName=node_transactions_pkey, tableName=node_transactions', '', 'MARK_RAN', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-core.changelog-pkey.xml::non-clustered_pk-7::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,255Z [main] changelog.ChangeSet. - Marking ChangeSet: migration/node-core.changelog-v8.xml::conditional_attchments_rename::R3.Corda ran despite precondition failure due to onFail='MARK_RAN': 
          master.changelog.json : Table PUBLIC.NODE_ATTCHMENTS_CONTRACTS does not exist
 {changeSet=migration/node-core.changelog-v8.xml::conditional_attchments_rename::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,256Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('conditional_attchments_rename', 'R3.Corda', 'migration/node-core.changelog-v8.xml', NOW(), 78, '8:114fc6d1775676ecf274989170741a5b', 'renameTable newTableName=NODE_ATTACHMENTS_CONTRACTS, oldTableName=NODE_ATTCHMENTS_CONTRACTS', '', 'MARK_RAN', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-core.changelog-v8.xml::conditional_attchments_rename::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,389Z [main] changelog.ChangeSet. - Marking ChangeSet: migration/node-core.changelog-v8.xml::conditional_attchments_contracts::R3.Corda ran despite precondition failure due to onFail='MARK_RAN': 
          master.changelog.json : Table PUBLIC.NODE_ATTACHMENTS_CONTRACT_CLASS_NAME does not exist
 {changeSet=migration/node-core.changelog-v8.xml::conditional_attchments_contracts::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,390Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('conditional_attchments_contracts', 'R3.Corda', 'migration/node-core.changelog-v8.xml', NOW(), 79, '8:c26d868db33a85bdd25570b094635db5', 'renameTable newTableName=NODE_ATTACHMENTS_CONTRACTS, oldTableName=NODE_ATTACHMENTS_CONTRACT_CLASS_NAME', '', 'MARK_RAN', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-core.changelog-v8.xml::conditional_attchments_contracts::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,393Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.node_attachments_signers (att_id NVARCHAR(255) NOT NULL, signer NVARCHAR(1024)) {changeSet=migration/node-core.changelog-v8.xml::add_signers::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,394Z [main] changelog.ChangeSet. - Table node_attachments_signers created {changeSet=migration/node-core.changelog-v8.xml::add_signers::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,395Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_attachments_signers ADD CONSTRAINT FK__signers__attachments FOREIGN KEY (att_id) REFERENCES PUBLIC.node_attachments (att_id) {changeSet=migration/node-core.changelog-v8.xml::add_signers::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,397Z [main] changelog.ChangeSet. - Foreign key constraint added to node_attachments_signers (att_id) {changeSet=migration/node-core.changelog-v8.xml::add_signers::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,397Z [main] changelog.ChangeSet. - ChangeSet migration/node-core.changelog-v8.xml::add_signers::R3.Corda ran successfully in 5ms {changeSet=migration/node-core.changelog-v8.xml::add_signers::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,398Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_signers', 'R3.Corda', 'migration/node-core.changelog-v8.xml', NOW(), 80, '8:6a033a579a3a8e11a35846d455833835', 'createTable tableName=node_attachments_signers; addForeignKeyConstraint baseTableName=node_attachments_signers, constraintName=FK__signers__attachments, referencedTableName=node_attachments', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-core.changelog-v8.xml::add_signers::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,403Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_transactions ADD state_machine_run_id NVARCHAR(36) {changeSet=migration/node-core.changelog-tx-mapping.xml::add_tx_mapping_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,408Z [main] changelog.ChangeSet. - Columns state_machine_run_id(NVARCHAR(36)) added to node_transactions {changeSet=migration/node-core.changelog-tx-mapping.xml::add_tx_mapping_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,411Z [main] jvm.JdbcExecutor. - update node_transactions set state_machine_run_id=(select state_machine_run_id from
            node_transaction_mappings where node_transactions.tx_id = node_transaction_mappings.tx_id) {changeSet=migration/node-core.changelog-tx-mapping.xml::add_tx_mapping_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,411Z [main] changelog.ChangeSet. - Custom SQL executed {changeSet=migration/node-core.changelog-tx-mapping.xml::add_tx_mapping_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,412Z [main] jvm.JdbcExecutor. - DROP TABLE PUBLIC.node_transaction_mappings {changeSet=migration/node-core.changelog-tx-mapping.xml::add_tx_mapping_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,413Z [main] changelog.ChangeSet. - Table node_transaction_mappings dropped {changeSet=migration/node-core.changelog-tx-mapping.xml::add_tx_mapping_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,413Z [main] changelog.ChangeSet. - ChangeSet migration/node-core.changelog-tx-mapping.xml::add_tx_mapping_column::R3.Corda ran successfully in 13ms {changeSet=migration/node-core.changelog-tx-mapping.xml::add_tx_mapping_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,414Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_tx_mapping_column', 'R3.Corda', 'migration/node-core.changelog-tx-mapping.xml', NOW(), 81, '8:6d9d8484a635e932dd8e8f45db1b3d7e', 'addColumn tableName=node_transactions; sql; dropTable tableName=node_transaction_mappings', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-core.changelog-tx-mapping.xml::add_tx_mapping_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,417Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.node_network_parameters (hash NVARCHAR(130) NOT NULL, epoch INT NOT NULL, parameters_bytes BLOB NOT NULL, signature_bytes BLOB NOT NULL, cert BLOB NOT NULL, parent_cert_path BLOB NOT NULL) {changeSet=migration/node-services.changelog-init.xml::add_network_parameters_storage::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,418Z [main] changelog.ChangeSet. - Table node_network_parameters created {changeSet=migration/node-services.changelog-init.xml::add_network_parameters_storage::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,418Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_network_parameters_storage::R3.Corda ran successfully in 2ms {changeSet=migration/node-services.changelog-init.xml::add_network_parameters_storage::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,606Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_network_parameters_storage', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 82, '8:b448755ba392674254c59e2b9489140f', 'createTable tableName=node_network_parameters', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::add_network_parameters_storage::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,608Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_network_parameters ADD CONSTRAINT node_network_parameters_pkey PRIMARY KEY (hash) {changeSet=migration/node-services.changelog-init.xml::network_parameters_pk::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,609Z [main] changelog.ChangeSet. - Primary key added to node_network_parameters (hash) {changeSet=migration/node-services.changelog-init.xml::network_parameters_pk::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,609Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::network_parameters_pk::R3.Corda ran successfully in 2ms {changeSet=migration/node-services.changelog-init.xml::network_parameters_pk::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,610Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('network_parameters_pk', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 83, '8:fc0358b8cab487b52558cd68d6feaf9e', 'addPrimaryKey constraintName=node_network_parameters_pkey, tableName=node_network_parameters', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::network_parameters_pk::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,611Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_attachments ADD version INT {changeSet=migration/node-services.changelog-init.xml::add_version_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,631Z [main] changelog.ChangeSet. - Columns version(INT) added to node_attachments {changeSet=migration/node-services.changelog-init.xml::add_version_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,632Z [main] jvm.JdbcExecutor. - update node_attachments set version = 1 {changeSet=migration/node-services.changelog-init.xml::add_version_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,632Z [main] changelog.ChangeSet. - Custom SQL executed {changeSet=migration/node-services.changelog-init.xml::add_version_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,632Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_attachments ALTER COLUMN version SET NOT NULL {changeSet=migration/node-services.changelog-init.xml::add_version_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,633Z [main] changelog.ChangeSet. - NOT NULL constraint has been added to node_attachments.version {changeSet=migration/node-services.changelog-init.xml::add_version_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,633Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_version_column::R3.Corda ran successfully in 22ms {changeSet=migration/node-services.changelog-init.xml::add_version_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,635Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_version_column', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 84, '8:ab6a3101d1da88b0f174ccc06a62feef', 'addColumn tableName=node_attachments; sql; addNotNullConstraint columnName=version, tableName=node_attachments', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::add_version_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,636Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,637Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, network parameters not found in C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\Dealer2\network-parameters, but there are no available attachments to migrate. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,637Z [main] changelog.ChangeSet. - null {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,637Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda ran successfully in 1ms {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,639Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('update-version-of-whitelisted-jars', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 85, '8:1d4174a12a4902070f6bf2ba624b0e97', 'customChange', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,641Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.node_identities_no_cert (pk_hash NVARCHAR(130) NOT NULL, name NVARCHAR(128) NOT NULL) {changeSet=migration/node-services.changelog-init.xml::add-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,642Z [main] changelog.ChangeSet. - Table node_identities_no_cert created {changeSet=migration/node-services.changelog-init.xml::add-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,642Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_identities_no_cert ADD CONSTRAINT node_identities_no_cert_pkey PRIMARY KEY (pk_hash) {changeSet=migration/node-services.changelog-init.xml::add-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,643Z [main] changelog.ChangeSet. - Primary key added to node_identities_no_cert (pk_hash) {changeSet=migration/node-services.changelog-init.xml::add-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,643Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add-new-persistence-table::R3.Corda ran successfully in 3ms {changeSet=migration/node-services.changelog-init.xml::add-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,644Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add-new-persistence-table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 86, '8:cb3302a80bf346270e0d8f3509c64a9b', 'createTable tableName=node_identities_no_cert; addPrimaryKey constraintName=node_identities_no_cert_pkey, tableName=node_identities_no_cert', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::add-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,646Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.pk_hash_to_ext_id_map DROP COLUMN id {changeSet=migration/node-services.changelog-init.xml::migrate_pk_hash_to_ext_id::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,772Z [main] changelog.ChangeSet. - Column pk_hash_to_ext_id_map.id dropped {changeSet=migration/node-services.changelog-init.xml::migrate_pk_hash_to_ext_id::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,773Z [main] jvm.JdbcExecutor. - DROP INDEX PUBLIC.pk_hash_to_xid_idx {changeSet=migration/node-services.changelog-init.xml::migrate_pk_hash_to_ext_id::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,774Z [main] changelog.ChangeSet. - Index pk_hash_to_xid_idx dropped from table pk_hash_to_ext_id_map {changeSet=migration/node-services.changelog-init.xml::migrate_pk_hash_to_ext_id::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,775Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.pk_hash_to_ext_id_map ADD CONSTRAINT pubkey_hash_to_external_id_pk PRIMARY KEY (public_key_hash) {changeSet=migration/node-services.changelog-init.xml::migrate_pk_hash_to_ext_id::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,777Z [main] changelog.ChangeSet. - Primary key added to pk_hash_to_ext_id_map (public_key_hash) {changeSet=migration/node-services.changelog-init.xml::migrate_pk_hash_to_ext_id::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,778Z [main] jvm.JdbcExecutor. - CREATE INDEX PUBLIC.ext_id_idx ON PUBLIC.pk_hash_to_ext_id_map(external_id) {changeSet=migration/node-services.changelog-init.xml::migrate_pk_hash_to_ext_id::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,778Z [main] changelog.ChangeSet. - Index ext_id_idx created {changeSet=migration/node-services.changelog-init.xml::migrate_pk_hash_to_ext_id::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,779Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::migrate_pk_hash_to_ext_id::R3.Corda ran successfully in 134ms {changeSet=migration/node-services.changelog-init.xml::migrate_pk_hash_to_ext_id::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,780Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('migrate_pk_hash_to_ext_id', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 87, '8:daf9ba8b9522b5ed5e0c474f220a5ef9', 'dropColumn columnName=id, tableName=pk_hash_to_ext_id_map; dropIndex indexName=pk_hash_to_xid_idx, tableName=pk_hash_to_ext_id_map; addPrimaryKey constraintName=pubkey_hash_to_external_id_pk, tableName=pk_hash_to_ext_id_map; createIndex indexName=...', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::migrate_pk_hash_to_ext_id::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,812Z [main] changelog.ChangeSet. - null {changeSet=migration/node-services.changelog-init.xml::migrate_identity_service_to_use_publicKey.toShortString()::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,814Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::migrate_identity_service_to_use_publicKey.toShortString()::R3.Corda ran successfully in 32ms {changeSet=migration/node-services.changelog-init.xml::migrate_identity_service_to_use_publicKey.toShortString()::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,816Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('migrate_identity_service_to_use_publicKey.toShortString()', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 88, '8:51a17ecff2c7f17e1502992fdda4356d', 'customChange', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::migrate_identity_service_to_use_publicKey.toShortString()::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,819Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_transactions ADD status NVARCHAR(1) DEFAULT 'V' NOT NULL {changeSet=migration/node-services.changelog-init.xml::add_status_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,830Z [main] changelog.ChangeSet. - Columns status(NVARCHAR(1)) added to node_transactions {changeSet=migration/node-services.changelog-init.xml::add_status_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,830Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_status_column::R3.Corda ran successfully in 13ms {changeSet=migration/node-services.changelog-init.xml::add_status_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,831Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_status_column', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 89, '8:163dc66ab97910470ce080cd4c4d33ef', 'addColumn tableName=node_transactions', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::add_status_column::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,833Z [main] jvm.JdbcExecutor. - CREATE TABLE PUBLIC.node_hash_to_key (pk_hash NVARCHAR(130) NOT NULL, public_key BLOB NOT NULL) {changeSet=migration/node-services.changelog-init.xml::add-new-pk-hash-to-pk-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,835Z [main] changelog.ChangeSet. - Table node_hash_to_key created {changeSet=migration/node-services.changelog-init.xml::add-new-pk-hash-to-pk-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,835Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_hash_to_key ADD CONSTRAINT node_hash_to_key_pk_hash PRIMARY KEY (pk_hash) {changeSet=migration/node-services.changelog-init.xml::add-new-pk-hash-to-pk-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,836Z [main] changelog.ChangeSet. - Primary key added to node_hash_to_key (pk_hash) {changeSet=migration/node-services.changelog-init.xml::add-new-pk-hash-to-pk-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,836Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add-new-pk-hash-to-pk-table::R3.Corda ran successfully in 3ms {changeSet=migration/node-services.changelog-init.xml::add-new-pk-hash-to-pk-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:05,837Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add-new-pk-hash-to-pk-table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 90, '8:90ed8145a19f497b5c95a5c9542917f0', 'createTable tableName=node_hash_to_key; addPrimaryKey constraintName=node_hash_to_key_pk_hash, tableName=node_hash_to_key', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::add-new-pk-hash-to-pk-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:06,244Z [main] jvm.JdbcExecutor. - ALTER TABLE PUBLIC.node_transactions ADD timestamp TIMESTAMP DEFAULT '2000-01-01 12:00:00' NOT NULL {changeSet=migration/node-services.changelog-init.xml::add_timestamp_column_to_node_transactions::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:06,258Z [main] changelog.ChangeSet. - Columns timestamp(TIMESTAMP) added to node_transactions {changeSet=migration/node-services.changelog-init.xml::add_timestamp_column_to_node_transactions::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:06,258Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::add_timestamp_column_to_node_transactions::R3.Corda ran successfully in 15ms {changeSet=migration/node-services.changelog-init.xml::add_timestamp_column_to_node_transactions::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:06,260Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('add_timestamp_column_to_node_transactions', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 91, '8:bc308c6c38c83b58a03f11f0943a944f', 'addColumn tableName=node_transactions', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::add_timestamp_column_to_node_transactions::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:06,261Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:06,482Z [main] migration.MigrationServicesForResolution. - Couldn't find network parameters file: C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\Dealer2\network-parameters. This is expected if the node is starting for the first time. {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:06,530Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:06,580Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:10,677Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:11,602Z [main] migration.MigrationServicesForResolution. - Couldn't find network parameters file: C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\Dealer2\network-parameters. This is expected if the node is starting for the first time. {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[WARN ] 2020-06-26T09:39:11,602Z [main] migration.MigrationServicesForResolution. - Using a dummy set of network parameters for migration. {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:11,681Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:11,681Z [main] changelog.ChangeSet. - null {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:11,681Z [main] changelog.ChangeSet. - ChangeSet migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda ran successfully in 5420ms {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:11,683Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('update-vault-states', 'R3.Corda', 'migration/vault-schema.changelog-v9.xml', NOW(), 92, '8:f8f4c73846280164daf6855e1ecf3cc6', 'customChange', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:11,686Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:11,693Z [main] migration.MigrationServicesForResolution. - Couldn't find network parameters file: C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\Dealer2\network-parameters. This is expected if the node is starting for the first time. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:11,693Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:11,693Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:12,993Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:13,094Z [main] migration.MigrationServicesForResolution. - Couldn't find network parameters file: C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\Dealer2\network-parameters. This is expected if the node is starting for the first time. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[WARN ] 2020-06-26T09:39:13,094Z [main] migration.MigrationServicesForResolution. - Using a dummy set of network parameters for migration. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:13,095Z [main] changelog.ChangeSet. - null {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:13,095Z [main] changelog.ChangeSet. - ChangeSet migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda ran successfully in 1409ms {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:13,099Z [main] jvm.JdbcExecutor. - INSERT INTO PUBLIC.DATABASECHANGELOG (ID, AUTHOR, FILENAME, DATEEXECUTED, ORDEREXECUTED, MD5SUM, DESCRIPTION, COMMENTS, EXECTYPE, CONTEXTS, LABELS, LIQUIBASE, DEPLOYMENT_ID) VALUES ('transfer-to-new-persistence-table', 'R3.Corda', 'migration/node-services.changelog-init.xml', NOW(), 93, '8:dc5c1913b593f4a2b95ddca810da11ba', 'customChange', '', 'EXECUTED', NULL, NULL, '3.6.3', '3164341930') {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-06-26T09:39:13,101Z [main] lockservice.StandardLockService. - Successfully released change log lock
[INFO ] 2020-06-26T09:39:13,106Z [main] internal.Node. - Connected to H2 database.
[INFO ] 2020-06-26T09:39:13,111Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)]
[INFO ] 2020-06-26T09:39:13,111Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)]
[INFO ] 2020-06-26T09:39:14,624Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1)]
[INFO ] 2020-06-26T09:39:14,644Z [main] internal.Node. - identity-private-key not found in key store, generating fresh key!
[INFO ] 2020-06-26T09:39:14,862Z [main] internal.Node. - Node-info has changed so submitting update. Old node-info was null
[INFO ] 2020-06-26T09:39:14,862Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10090], legalIdentitiesAndCerts=[O=Dealer2, L=Delhi, C=IN], platformVersion=6, serial=1593164354862)
[INFO ] 2020-06-26T09:39:15,031Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Dealer2, L=Delhi, C=IN
[INFO ] 2020-06-26T09:39:17,271Z [main] internal.Node. - New node-info: NodeInfo(addresses=[localhost:10090], legalIdentitiesAndCerts=[O=Dealer2, L=Delhi, C=IN], platformVersion=6, serial=1593164354862)
[INFO ] 2020-06-26T09:39:17,517Z [main] hikari.HikariDataSource. - HikariPool-1 - Shutdown initiated...
[INFO ] 2020-06-26T09:39:17,557Z [main] hikari.HikariDataSource. - HikariPool-1 - Shutdown completed.
[INFO ] 2020-06-26T09:41:02,635Z [main] subcommands.ValidateConfigurationCli. - Actual configuration:
{
    "additionalNodeInfoPollingFrequencyMsec" : 5000,
    "additionalP2PAddresses" : [],
    "attachmentCacheBound" : 1024,
    "baseDirectory" : "C:\\Users\\is96869\\Desktop\\corda\\samples-kotlin\\Accounts\\worldcupticketbooking\\build\\nodes\\Dealer2",
    "blacklistedAttachmentSigningKeys" : [],
    "certificateChainCheckPolicies" : [],
    "cordappSignerKeyFingerprintBlacklist" : [
        "56CA54E803CB87C8472EBD3FBC6A2F1876E814CEEBF74860BD46997F40729367",
        "83088052AF16700457AE2C978A7D8AC38DD6A7C713539D00B897CD03A5E5D31D",
        "6F6696296C3F58B55FB6CA865A025A3A6CC27AD17C4AFABA1E8EF062E0A82739"
    ],
    "crlCheckSoftFail" : true,
    "dataSourceProperties" : "*****",
    "database" : {
        "exportHibernateJMXStatistics" : false,
        "initialiseAppSchema" : "UPDATE",
        "initialiseSchema" : true,
        "mappedSchemaCacheSize" : 100,
        "transactionIsolationLevel" : "REPEATABLE_READ"
    },
    "detectPublicIp" : false,
    "devMode" : true,
    "emailAddress" : "admin@company.com",
    "extraNetworkMapKeys" : [],
    "flowExternalOperationThreadPoolSize" : 8,
    "flowMonitorPeriodMillis" : {
        "nanos" : 0,
        "seconds" : 60
    },
    "flowMonitorSuspensionLoggingThresholdMillis" : {
        "nanos" : 0,
        "seconds" : 60
    },
    "flowTimeout" : {
        "backoffBase" : 1.8,
        "maxRestartCount" : 6,
        "timeout" : {
            "nanos" : 0,
            "seconds" : 30
        }
    },
    "h2Settings" : {
        "address" : "localhost:20093"
    },
    "jarDirs" : [],
    "jmxReporterType" : "JOLOKIA",
    "keyStorePassword" : "*****",
    "lazyBridgeStart" : true,
    "localShellAllowExitInSafeMode" : true,
    "localShellUnsafe" : false,
    "myLegalName" : "O=Dealer2,L=Delhi,C=IN",
    "networkParameterAcceptanceSettings" : {
        "autoAcceptEnabled" : true,
        "excludedAutoAcceptableParameters" : []
    },
    "noLocalShell" : false,
    "p2pAddress" : "localhost:10090",
    "rpcSettings" : {
        "address" : "localhost:10091",
        "adminAddress" : "localhost:10092",
        "standAloneBroker" : false,
        "useSsl" : false
    },
    "rpcUsers" : [],
    "security" : {
        "authService" : {
            "dataSource" : {
                "passwordEncryption" : "NONE",
                "type" : "INMEMORY",
                "users" : [
                    {
                        "ignoresFallbacks" : false,
                        "resolved" : true,
                        "value" : {
                            "loadFactor" : 0.75,
                            "modCount" : 3,
                            "size" : 3,
                            "table" : {},
                            "threshold" : 3
                        }
                    }
                ]
            }
        }
    },
    "trustStorePassword" : "*****",
    "useTestClock" : false,
    "verifierType" : "InMemory"
}

[INFO ] 2020-06-26T09:41:02,829Z [main] internal.Node. - Vendor: Corda Open Source
[INFO ] 2020-06-26T09:41:02,829Z [main] internal.Node. - Release: 4.4
[INFO ] 2020-06-26T09:41:02,830Z [main] internal.Node. - Platform Version: 6
[INFO ] 2020-06-26T09:41:02,830Z [main] internal.Node. - Revision: 21e8c4ffb11ef68433e5087b1c2982bdcf3f37f0
[INFO ] 2020-06-26T09:41:02,831Z [main] internal.Node. - PID: 36116
[INFO ] 2020-06-26T09:41:02,831Z [main] internal.Node. - Main class: /C:/Users/is96869/AppData/Local/capsule/apps/net.corda.node.Corda_4.4/corda-node-4.4.jar
[INFO ] 2020-06-26T09:41:02,831Z [main] internal.Node. - CommandLine Args: -Xmx512m -XX:+UseG1GC -XX:+HeapDumpOnOutOfMemoryError -XX:+CrashOnOutOfMemoryError -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5008 -javaagent:drivers/jolokia-jvm-1.6.0-agent.jar=port=7008,logHandlerClass=net.corda.node.JolokiaSlf4jAdapter -javaagent:C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\quasar-core-0.7.12_r3-jdk8.jar=x(antlr**;bftsmart**;co.paralleluniverse**;com.codahale**;com.esotericsoftware**;com.fasterxml**;com.google**;com.ibm**;com.intellij**;com.jcabi**;com.nhaarman**;com.opengamma**;com.typesafe**;com.zaxxer**;de.javakaffee**;groovy**;groovyjarjarantlr**;groovyjarjarasm**;io.atomix**;io.github**;io.netty**;jdk**;kotlin**;net.corda.djvm**;djvm**;net.bytebuddy**;net.i2p**;org.apache**;org.bouncycastle**;org.codehaus**;org.crsh**;org.dom4j**;org.fusesource**;org.h2**;org.hibernate**;org.jboss**;org.jcp**;org.joda**;org.objectweb**;org.objenesis**;org.slf4j**;org.w3c**;org.xml**;org.yaml**;reflectasm**;rx**;org.jolokia**;com.lmax**;picocli**;liquibase**;com.github.benmanes**;org.json**;org.postgresql**;nonapi.io.github.classgraph**)l(net.corda.djvm.**) -javaagent:C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\Dealer2\corda.jar -Dcapsule.address=0.0.0.0 -Dvisualvm.display.name=Corda -Djava.library.path=C:\Program Files\Java\jre1.8.0_251\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\IBM\RationalSDLC\common;C:\Oracle\product\12.2.0\client_1\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0;C:\Windows\System32\OpenSSH;C:\Program Files (x86)\Sennheiser\SoftphoneSDK;C:\PROGRA~2\IBM\SQLLIB\BIN;C:\PROGRA~2\IBM\SQLLIB\FUNCTION;C:\PROGRA~2\IBM\SQLLIB\SAMPLES\REPL;C:\Program Files (x86)\IBM\Personal Communications;C:\Program Files (x86)\IBM\Trace Facility;C:\Program Files (x86)\IBM\gsk8\lib;C:\Program Files (x86)\IBM\gsk8\bin;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn;C:\Program Files\Git\cmd;C:\Users\is96869\AppData\Local\Microsoft\WindowsApps;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4 -Dcapsule.log=1 -Dcapsule.app=net.corda.node.Corda_4.4 -Dcapsule.port=53860 -Dcapsule.jvm.args=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5008 -javaagent:drivers/jolokia-jvm-1.6.0-agent.jar=port=7008,logHandlerClass=net.corda.node.JolokiaSlf4jAdapter -Dname=Dealer2 -Dcapsule.dir=C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4 -Dcapsule.jar=C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\Dealer2\corda.jar
[INFO ] 2020-06-26T09:41:02,831Z [main] internal.Node. - bootclasspath: C:\Program Files\Java\jre1.8.0_251\lib\resources.jar;C:\Program Files\Java\jre1.8.0_251\lib\rt.jar;C:\Program Files\Java\jre1.8.0_251\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_251\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_251\lib\jce.jar;C:\Program Files\Java\jre1.8.0_251\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_251\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_251\classes
[INFO ] 2020-06-26T09:41:02,831Z [main] internal.Node. - classpath: C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\Dealer2\corda.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\tools.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\corda-shell-4.4.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\corda-rpc-4.4.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\corda-node-api-4.4.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\corda-tools-cliutils-4.4.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\corda-common-configuration-parsing-4.4.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\corda-common-validation-4.4.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\corda-common-logging-4.4.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\corda-confidential-identities-4.4.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\log4j-slf4j-impl-2.11.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\log4j-web-2.11.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\jul-to-slf4j-1.7.26.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\corda-serialization-djvm-4.4.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\corda-djvm-1.0.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\corda-jackson-4.4.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\corda-serialization-4.4.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\corda-core-4.4.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\kotlin-stdlib-jdk8-1.2.71.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\jackson-module-kotlin-2.9.7.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\kotlin-reflect-1.2.71.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\quasar-core-0.7.12_r3-jdk8.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\kryo-serializers-0.43.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\kryo-4.0.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\metrics-new-relic-1.1.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\guava-28.0-jre.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\caffeine-2.7.0.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\disruptor-3.4.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\commons-collections4-4.3.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\artemis-amqp-protocol-2.6.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\artemis-server-2.6.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\artemis-jdbc-store-2.6.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\artemis-journal-2.6.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\artemis-jms-client-2.6.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\artemis-core-client-2.6.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\artemis-commons-2.6.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\shiro-core-1.4.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\shiro-config-ogdl-1.4.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\commons-beanutils-1.9.3.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\jcabi-manifests-1.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\metrics-jmx-4.1.0.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\config-1.3.4.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\corda-node-djvm-4.4.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\h2-1.4.199.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\HikariCP-3.3.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\hibernate-java8-5.4.3.Final.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\hibernate-core-5.4.3.Final.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\okhttp-3.14.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\picocli-3.9.6.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\library-master-v1.1-beta-g6215ec8-87.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\commons-codec-1.13.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\copycat-client-1.2.3.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\copycat-server-1.2.3.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\catalyst-netty-1.1.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\jolokia-jvm-1.6.1-agent.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\netty-tcnative-boringssl-static-2.0.14.Final.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\kotlin-stdlib-jre8-1.2.71.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\proton-j-0.33.0.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\classgraph-4.8.58.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\liquibase-core-3.6.3.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\jackson-datatype-jsr310-2.9.7.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\jackson-databind-2.9.7.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\liquibase-slf4j-2.0.0.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\crash.connectors.ssh-1.7.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\crash.shell-1.7.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\jansi-1.18.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\log4j-core-2.11.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\commons-io-2.6.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\jcabi-log-0.14.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\metrics-core-4.1.0.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\shiro-cache-1.4.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\shiro-crypto-hash-1.4.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\shiro-crypto-cipher-1.4.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\shiro-config-core-1.4.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\shiro-event-1.4.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\shiro-crypto-core-1.4.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\shiro-lang-1.4.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\copycat-protocol-1.2.3.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\catalyst-transport-1.1.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\jcl-over-slf4j-1.7.26.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\mina-core-2.0.16.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\catalyst-concurrent-1.1.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\sshd-pam-0.11.0.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\sshd-core-2.3.0.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\sshd-common-2.3.0.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\catalyst-serializer-1.1.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\catalyst-buffer-1.1.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\catalyst-common-1.1.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\slf4j-api-1.7.26.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\log4j-api-2.11.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\kotlin-stdlib-jdk7-1.2.71.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\kotlin-stdlib-jre7-1.2.71.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\kotlin-stdlib-1.2.71.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\reflectasm-1.11.3.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\minlog-1.3.0.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\objenesis-2.5.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\failureaccess-1.0.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\jsr305-3.0.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\checker-qual-2.8.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\error_prone_annotations-2.3.3.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\j2objc-annotations-1.3.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\animal-sniffer-annotations-1.17.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\commons-collections-3.2.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\artemis-native-2.6.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\jboss-logging-3.3.2.Final.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\artemis-selector-2.6.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\netty-handler-4.1.29.Final.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\netty-codec-http-4.1.29.Final.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\netty-codec-4.1.29.Final.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\netty-transport-native-kqueue-4.1.29.Final-osx-x86_64.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\netty-transport-native-epoll-4.1.29.Final-linux-x86_64.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\netty-transport-native-unix-common-4.1.29.Final.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\netty-transport-4.1.29.Final.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\netty-buffer-4.1.29.Final.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\netty-resolver-4.1.29.Final.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\netty-common-4.1.29.Final.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\geronimo-json_1.0_spec-1.0-alpha-1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\jgroups-3.6.13.Final.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\johnzon-core-0.9.5.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\corda-deserializers-djvm-4.4.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\javax.persistence-api-2.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\javassist-3.24.0-GA.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\byte-buddy-1.9.10.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\antlr-2.7.7.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\jandex-2.0.5.Final.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\classmate-1.3.4.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\jaxb-runtime-2.3.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\jaxb-api-2.3.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\javax.activation-api-1.2.0.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\dom4j-2.1.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\okio-1.17.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\jolokia-core-1.6.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\json-simple-1.1.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\newrelic-api-3.10.0.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\LatencyUtils-2.0.3.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\HdrHistogram-2.1.9.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\asm-analysis-5.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\asm-commons-5.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\asm-util-5.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\asm-tree-5.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\asm-7.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\rxjava-1.3.8.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\commons-lang3-3.9.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\eddsa-0.3.0.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\bcpkix-jdk15on-1.60.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\bcprov-jdk15on-1.60.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\snappy-0.4.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\jackson-dataformat-yaml-2.9.7.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\snakeyaml-1.23.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\jackson-annotations-2.9.0.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\jackson-core-2.9.7.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\crash.cli-1.7.2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\groovy-all-1.8.9.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\kotlin-stdlib-common-1.2.71.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\annotations-13.0.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\txw2-2.3.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\istack-commons-runtime-3.0.7.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\stax-ex-1.8.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\FastInfoset-1.2.15.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\geronimo-jms_2.0_spec-1.0-alpha-2.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\jpam-1.1.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\corda-node-4.4.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\Dealer2\drivers\jolokia-jvm-1.6.0-agent.jar;drivers/jolokia-jvm-1.6.0-agent.jar;C:\Users\is96869\AppData\Local\capsule\apps\net.corda.node.Corda_4.4\quasar-core-0.7.12_r3-jdk8.jar;C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\Dealer2\corda.jar
[INFO ] 2020-06-26T09:41:02,831Z [main] internal.Node. - VM Java HotSpot(TM) 64-Bit Server VM Oracle Corporation 25.251-b08
[INFO ] 2020-06-26T09:41:02,832Z [main] internal.Node. - Machine: T1LPRVT3917
[INFO ] 2020-06-26T09:41:02,832Z [main] internal.Node. - Working Directory: C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\Dealer2
[WARN ] 2020-06-26T09:41:03,247Z [main] internal.Node. - Unable to determine whether agent is running: no attach in java.library.path.
You may need to pass in -Djdk.attach.allowAttachSelf=true if running on a Java 9 or later VM
[INFO ] 2020-06-26T09:41:03,248Z [main] internal.Node. - Starting as node on localhost:10090
[INFO ] 2020-06-26T09:41:03,738Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\Dealer2\cordapps]
[INFO ] 2020-06-26T09:41:03,850Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/is96869/Desktop/corda/samples-kotlin/Accounts/worldcupticketbooking/build/nodes/Dealer2/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/is96869/Desktop/corda/samples-kotlin/Accounts/worldcupticketbooking/build/nodes/Dealer2/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/is96869/Desktop/corda/samples-kotlin/Accounts/worldcupticketbooking/build/nodes/Dealer2/cordapps/ci-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/is96869/Desktop/corda/samples-kotlin/Accounts/worldcupticketbooking/build/nodes/Dealer2/cordapps/contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/is96869/Desktop/corda/samples-kotlin/Accounts/worldcupticketbooking/build/nodes/Dealer2/cordapps/tokens-contracts-1.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/is96869/Desktop/corda/samples-kotlin/Accounts/worldcupticketbooking/build/nodes/Dealer2/cordapps/tokens-money-1.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/is96869/Desktop/corda/samples-kotlin/Accounts/worldcupticketbooking/build/nodes/Dealer2/cordapps/tokens-selection-1.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/is96869/Desktop/corda/samples-kotlin/Accounts/worldcupticketbooking/build/nodes/Dealer2/cordapps/tokens-workflows-1.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/is96869/Desktop/corda/samples-kotlin/Accounts/worldcupticketbooking/build/nodes/Dealer2/cordapps/workflows-0.1.jar, rootPackageName=null)
[INFO ] 2020-06-26T09:41:03,941Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/is96869/Desktop/corda/samples-kotlin/Accounts/worldcupticketbooking/build/nodes/Dealer2/cordapps/accounts-contracts-1.0.jar
[INFO ] 2020-06-26T09:41:07,992Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/is96869/Desktop/corda/samples-kotlin/Accounts/worldcupticketbooking/build/nodes/Dealer2/cordapps/accounts-workflows-1.0.jar
[INFO ] 2020-06-26T09:41:08,995Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/is96869/Desktop/corda/samples-kotlin/Accounts/worldcupticketbooking/build/nodes/Dealer2/cordapps/ci-workflows-1.0.jar
[INFO ] 2020-06-26T09:41:09,543Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/is96869/Desktop/corda/samples-kotlin/Accounts/worldcupticketbooking/build/nodes/Dealer2/cordapps/contracts-0.1.jar
[INFO ] 2020-06-26T09:41:09,815Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/is96869/Desktop/corda/samples-kotlin/Accounts/worldcupticketbooking/build/nodes/Dealer2/cordapps/tokens-contracts-1.1.jar
[INFO ] 2020-06-26T09:41:10,086Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/is96869/Desktop/corda/samples-kotlin/Accounts/worldcupticketbooking/build/nodes/Dealer2/cordapps/tokens-money-1.1.jar
[INFO ] 2020-06-26T09:41:10,215Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/is96869/Desktop/corda/samples-kotlin/Accounts/worldcupticketbooking/build/nodes/Dealer2/cordapps/tokens-selection-1.1.jar
[INFO ] 2020-06-26T09:41:10,449Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/is96869/Desktop/corda/samples-kotlin/Accounts/worldcupticketbooking/build/nodes/Dealer2/cordapps/tokens-workflows-1.1.jar
[INFO ] 2020-06-26T09:41:12,106Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/is96869/Desktop/corda/samples-kotlin/Accounts/worldcupticketbooking/build/nodes/Dealer2/cordapps/workflows-0.1.jar
[INFO ] 2020-06-26T09:41:14,439Z [main] internal.Node. - Flow external operation executor has a max of 8 threads
[WARN ] 2020-06-26T09:41:14,612Z [main] internal.Node. - This node is running in development mode!  This is not safe for production deployment.
[INFO ] 2020-06-26T09:41:15,033Z [main] internal.Node. - Node starting up ...
[INFO ] 2020-06-26T09:41:15,379Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1)
[INFO ] 2020-06-26T09:41:15,381Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1)
[INFO ] 2020-06-26T09:41:15,381Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1)
[INFO ] 2020-06-26T09:41:15,382Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1)
[INFO ] 2020-06-26T09:41:15,383Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1)
[INFO ] 2020-06-26T09:41:15,384Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.RequestKeyForUUIDInitiator to initiate com.r3.corda.lib.ci.workflows.RequestKeyForUUIDResponder (version 1)
[INFO ] 2020-06-26T09:41:15,385Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.RequestKey to initiate com.r3.corda.lib.ci.workflows.RequestKeyResponder (version 1)
[INFO ] 2020-06-26T09:41:15,386Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.SyncKeyMappingInitiator to initiate com.r3.corda.lib.ci.workflows.SyncKeyMappingResponder (version 1)
[INFO ] 2020-06-26T09:41:15,387Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.ci.workflows.VerifyAndAddKey to initiate com.r3.corda.lib.ci.workflows.VerifyAndAddKeyResponder (version 1)
[INFO ] 2020-06-26T09:41:15,390Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialIssueTokensHandler (version 1)
[INFO ] 2020-06-26T09:41:15,391Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveFungibleTokensHandler (version 1)
[INFO ] 2020-06-26T09:41:15,392Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialMoveNonFungibleTokensHandler (version 1)
[INFO ] 2020-06-26T09:41:15,399Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.ConfidentialRedeemFungibleTokensHandler (version 1)
[INFO ] 2020-06-26T09:41:15,400Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.CreateEvolvableTokensHandler (version 1)
[INFO ] 2020-06-26T09:41:15,401Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.IssueTokensHandler (version 1)
[INFO ] 2020-06-26T09:41:15,402Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveFungibleTokensHandler (version 1)
[INFO ] 2020-06-26T09:41:15,403Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.MoveNonFungibleTokensHandler (version 1)
[INFO ] 2020-06-26T09:41:15,403Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemFungibleTokensHandler (version 1)
[INFO ] 2020-06-26T09:41:15,405Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokens to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.RedeemNonFungibleTokensHandler (version 1)
[INFO ] 2020-06-26T09:41:15,406Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableToken to initiate com.r3.corda.lib.tokens.workflows.flows.rpc.UpdateEvolvableTokenHandler (version 1)
[INFO ] 2020-06-26T09:41:15,407Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Initiator to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.RequestAdditionToDistributionList$Responder (version 1)
[INFO ] 2020-06-26T09:41:15,488Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlow to initiate com.r3.corda.lib.tokens.workflows.internal.flows.distribution.UpdateDistributionListFlowHandler (version 1)
[INFO ] 2020-06-26T09:41:15,570Z [main] internal.NodeFlowManager. - Registered com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlow to initiate com.r3.corda.lib.tokens.workflows.internal.testflows.DvPFlowHandler (version 1)
[INFO ] 2020-06-26T09:41:15,593Z [main] internal.NodeFlowManager. - Registered com.t20worldcup.flows.DVPAccountsHostedOnDifferentNodes to initiate com.t20worldcup.flows.DVPAccountsHostedOnDifferentNodesResponder (version 1)
[INFO ] 2020-06-26T09:41:15,600Z [main] internal.NodeFlowManager. - Registered com.t20worldcup.flows.DVPAccountsOnSameNode to initiate com.t20worldcup.flows.DVPAccountsOnSameNodeResponder (version 1)
[INFO ] 2020-06-26T09:41:15,608Z [main] internal.NodeFlowManager. - Registered com.t20worldcup.flows.MoveTokensBetweenAccounts to initiate com.t20worldcup.flows.MoveTokensBetweenAccountsResponder (version 1)
[INFO ] 2020-06-26T09:41:15,915Z [main] internal.Node. - Setting unsafe users as: [user1]
[INFO ] 2020-06-26T09:41:16,025Z [main] shell.InteractiveShell. - launchShell: User=internalShell perm=[]
[INFO ] 2020-06-26T09:41:16,026Z [main] shell.InteractiveShell. - Shell: PermitExit= true, UNSAFELOCAL=false
[INFO ] 2020-06-26T09:41:16,170Z [main] plugin.PluginManager. - Loaded plugin Plugin[type=SSHPlugin,interface=SSHPlugin]
[INFO ] 2020-06-26T09:41:16,171Z [main] plugin.PluginManager. - Loaded plugin Plugin[type=SSHInlinePlugin,interface=CommandPlugin]
[INFO ] 2020-06-26T09:41:16,173Z [main] plugin.PluginManager. - Loaded plugin Plugin[type=KeyAuthenticationPlugin,interface=KeyAuthenticationPlugin]
[INFO ] 2020-06-26T09:41:16,174Z [main] plugin.PluginManager. - Loaded plugin Plugin[type=CRaSHShellFactory,interface=ShellFactory]
[INFO ] 2020-06-26T09:41:16,176Z [main] plugin.PluginManager. - Loaded plugin Plugin[type=GroovyLanguageProxy,interface=Language]
[INFO ] 2020-06-26T09:41:16,181Z [main] plugin.PluginManager. - Loaded plugin Plugin[type=JavaLanguage,interface=Language]
[INFO ] 2020-06-26T09:41:16,184Z [main] plugin.PluginManager. - Loaded plugin Plugin[type=ScriptLanguage,interface=Language]
[INFO ] 2020-06-26T09:41:16,185Z [main] plugin.PluginManager. - Loaded plugin Plugin[type=JaasAuthenticationPlugin,interface=AuthenticationPlugin]
[INFO ] 2020-06-26T09:41:16,187Z [main] plugin.PluginManager. - Loaded plugin Plugin[type=SimpleAuthenticationPlugin,interface=AuthenticationPlugin]
[INFO ] 2020-06-26T09:41:16,198Z [main] ssh.SSHPlugin. - Could not boot SSHD due to missing due to missing port configuration
[INFO ] 2020-06-26T09:41:16,198Z [main] plugin.PluginManager. - Initialized plugin Plugin[type=SSHPlugin,interface=SSHPlugin]
[INFO ] 2020-06-26T09:41:16,198Z [main] plugin.PluginManager. - Initialized plugin Plugin[type=SSHInlinePlugin,interface=CommandPlugin]
[INFO ] 2020-06-26T09:41:16,198Z [main] plugin.PluginManager. - Initialized plugin Plugin[type=KeyAuthenticationPlugin,interface=KeyAuthenticationPlugin]
[INFO ] 2020-06-26T09:41:16,223Z [main] plugin.PluginManager. - Initialized plugin Plugin[type=GroovyLanguageProxy,interface=Language]
[INFO ] 2020-06-26T09:41:16,226Z [main] plugin.PluginManager. - Initialized plugin Plugin[type=ScriptLanguage,interface=Language]
[INFO ] 2020-06-26T09:41:16,246Z [main] plugin.PluginManager. - Initialized plugin Plugin[type=CRaSHShellFactory,interface=ShellFactory]
[INFO ] 2020-06-26T09:41:16,246Z [main] plugin.PluginManager. - Initialized plugin Plugin[type=JaasAuthenticationPlugin,interface=AuthenticationPlugin]
[INFO ] 2020-06-26T09:41:16,246Z [main] plugin.PluginManager. - Initialized plugin Plugin[type=SimpleAuthenticationPlugin,interface=AuthenticationPlugin]
[INFO ] 2020-06-26T09:41:16,246Z [main] plugin.PluginManager. - Initialized plugin Plugin[type=CordaAuthenticationPlugin,interface=AuthenticationPlugin]
[INFO ] 2020-06-26T09:41:16,246Z [main] plugin.PluginManager. - Initialized plugin Plugin[type=CordaDisconnectPlugin,interface=DisconnectPlugin]
[INFO ] 2020-06-26T09:41:22,490Z [main] internal.Node. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=6
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=false)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-06-26T09:39:19.632Z
      epoch=1
  }
[INFO ] 2020-06-26T09:41:23,425Z [main] BasicInfo. - Database connection url is              : jdbc:h2:tcp://localhost:20093/node
[INFO ] 2020-06-26T09:41:23,502Z [main] hikari.HikariDataSource. - HikariPool-1 - Starting...
[INFO ] 2020-06-26T09:41:23,849Z [main] hikari.HikariDataSource. - HikariPool-1 - Start completed.
[INFO ] 2020-06-26T09:41:34,163Z [main] jvm.JdbcExecutor. - SELECT MD5SUM FROM PUBLIC.DATABASECHANGELOG WHERE MD5SUM IS NOT NULL
[INFO ] 2020-06-26T09:41:34,206Z [main] jvm.JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOG
[INFO ] 2020-06-26T09:41:34,208Z [main] changelog.StandardChangeLogHistoryService. - Reading from PUBLIC.DATABASECHANGELOG
[INFO ] 2020-06-26T09:41:34,208Z [main] jvm.JdbcExecutor. - SELECT * FROM PUBLIC.DATABASECHANGELOG ORDER BY DATEEXECUTED ASC, ORDEREXECUTED ASC
[INFO ] 2020-06-26T09:41:34,229Z [main] jvm.JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 2020-06-26T09:41:34,229Z [main] jvm.JdbcExecutor. - SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK
[INFO ] 2020-06-26T09:41:34,458Z [main] jvm.JdbcExecutor. - SELECT LOCKED FROM PUBLIC.DATABASECHANGELOGLOCK WHERE ID=1
[INFO ] 2020-06-26T09:41:34,469Z [main] lockservice.StandardLockService. - Successfully acquired change log lock
[INFO ] 2020-06-26T09:41:34,557Z [main] lockservice.StandardLockService. - Successfully released change log lock
[INFO ] 2020-06-26T09:41:34,622Z [main] internal.Node. - Connected to H2 database.
[INFO ] 2020-06-26T09:41:34,758Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)]
[INFO ] 2020-06-26T09:41:34,760Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)]
[INFO ] 2020-06-26T09:41:41,553Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), FungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.FungibleTokenSchema, version=1), NonFungibleTokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.internal.schemas.NonFungibleTokenSchema, version=1), TokenSchemaV1(name=com.r3.corda.lib.tokens.contracts.schemas.TokenSchema, version=1), DistributionRecordSchemaV1(name=com.r3.corda.lib.tokens.workflows.internal.schemas.DistributionRecordSchema, version=1)]
[INFO ] 2020-06-26T09:41:42,766Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations]
[INFO ] 2020-06-26T09:41:42,848Z [main] security.RPCSecurityManagerImpl. - Constructing realm from list of users in config [User(user1, permissions=[ALL])]
[INFO ] 2020-06-26T09:41:43,071Z [RxIoScheduler-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10017], legalIdentitiesAndCerts=[O=Bank, L=Delhi, C=IN], platformVersion=6, serial=1593164355152)
[INFO ] 2020-06-26T09:41:43,106Z [RxIoScheduler-2] network.PersistentNetworkMapCache. - No previous node found for O=Bank, L=Delhi, C=IN
[INFO ] 2020-06-26T09:41:43,561Z [RxIoScheduler-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10002], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=6, serial=1593164355411)
[INFO ] 2020-06-26T09:41:43,566Z [RxIoScheduler-2] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB
[INFO ] 2020-06-26T09:41:43,609Z [RxIoScheduler-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10008], legalIdentitiesAndCerts=[O=BCCI, L=New York, C=US], platformVersion=6, serial=1593164355920)
[INFO ] 2020-06-26T09:41:43,613Z [RxIoScheduler-2] network.PersistentNetworkMapCache. - No previous node found for O=BCCI, L=New York, C=US
[INFO ] 2020-06-26T09:41:43,733Z [RxIoScheduler-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10005], legalIdentitiesAndCerts=[O=Dealer1, L=London, C=GB], platformVersion=6, serial=1593164355050)
[INFO ] 2020-06-26T09:41:43,737Z [RxIoScheduler-2] network.PersistentNetworkMapCache. - No previous node found for O=Dealer1, L=London, C=GB
[INFO ] 2020-06-26T09:41:43,848Z [RxIoScheduler-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[localhost:10090], legalIdentitiesAndCerts=[O=Dealer2, L=Delhi, C=IN], platformVersion=6, serial=1593164354862)
[INFO ] 2020-06-26T09:41:44,099Z [RxIoScheduler-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing
[INFO ] 2020-06-26T09:41:45,175Z [main] BasicInfo. - Advertised P2P messaging addresses      : localhost:10090
[INFO ] 2020-06-26T09:41:45,186Z [main] BasicInfo. - RPC connection address                  : localhost:10091
[INFO ] 2020-06-26T09:41:45,186Z [main] BasicInfo. - RPC admin connection address            : localhost:10092
[INFO ] 2020-06-26T09:41:48,658Z [main] messaging.ArtemisMessagingServer. - P2P messaging server listening on 0.0.0.0:10090
[INFO ] 2020-06-26T09:41:49,179Z [main] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10090
[INFO ] 2020-06-26T09:41:50,798Z [main] internal.ArtemisMessagingClient. - Connecting to message broker: localhost:10090
[INFO ] 2020-06-26T09:41:51,096Z [main] messaging.P2PMessagingClient. - Connecting to message broker: localhost:10090
[INFO ] 2020-06-26T09:41:51,269Z [main] messaging.P2PMessagingClient. - Create fresh queue p2p.inbound.DLGz61FUe6RctC5AswXTHgcc3U5CH45GQnbq6JPmGA9KV9 bound on same address
[INFO ] 2020-06-26T09:41:51,771Z [Thread-3 (ActiveMQ-client-global-threads)] bridging.BridgeControlListener. - Received bridge control message NodeToBridgeSnapshot(nodeIdentity=O=Dealer2, L=Delhi, C=IN, inboxQueues=[p2p.inbound.DLGz61FUe6RctC5AswXTHgcc3U5CH45GQnbq6JPmGA9KV9], sendQueues=[])
[INFO ] 2020-06-26T09:41:51,955Z [main] ClassloaderUtils. - Contracts loading for 'C:\Users\is96869\AppData\Local\Temp\attachment7553469716744923907.jar' took 244 msec
[INFO ] 2020-06-26T09:41:52,025Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts
[INFO ] 2020-06-26T09:41:52,349Z [main] ClassloaderUtils. - Contracts loading for 'C:\Users\is96869\AppData\Local\Temp\attachment7135532429175894025.jar' took 309 msec
[INFO ] 2020-06-26T09:41:52,373Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=0896D74C67E9B832ED69CCFBF19D136044D170D24290D2EF2A5DDDCA3D598AC5 uploader=app filename=CorDapp t20worldcup Contract
[INFO ] 2020-06-26T09:41:52,463Z [main] ClassloaderUtils. - Contracts loading for 'C:\Users\is96869\AppData\Local\Temp\attachment5763368314806526056.jar' took 61 msec
[INFO ] 2020-06-26T09:41:52,507Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=6D97C080848253110DB89B6E01EBDA9493955EEBD5814D6A905845238B8AB1ED uploader=app filename=Token SDK Contracts
[INFO ] 2020-06-26T09:41:52,585Z [main] ClassloaderUtils. - Contracts loading for 'C:\Users\is96869\AppData\Local\Temp\attachment7636137150976286996.jar' took 73 msec
[INFO ] 2020-06-26T09:41:52,604Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=21630CD236B5E61313730FD6EDC47607896B2EDD580EABA0F18F71EA31807614 uploader=app filename=Token SDK money definitions
[INFO ] 2020-06-26T09:41:52,635Z [main] internal.Node. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service
[INFO ] 2020-06-26T09:41:52,662Z [main] cordapp.CordappConfigFileProvider. - No config found for cordapp tokens-selection-1.1 in [C:\Users\is96869\Desktop\corda\samples-kotlin\Accounts\worldcupticketbooking\build\nodes\Dealer2\cordapps\config]
[WARN ] 2020-06-26T09:41:52,668Z [main] inMemoryConfigSelectionLogger. - Did not detect a configuration for InMemory selection - enabling memory usage for token indexing. Please set stateSelection.inMemory.enabled to "false" to disable this
[WARN ] 2020-06-26T09:41:52,670Z [main] inMemoryConfigSelectionLogger. - No indexing method specified. Indexes will be created at run-time for each invocation of selectTokens [errorCode=2bs8go, moreInformationAt=https://errors.corda.net/OS/4.4/2bs8go]
net.corda.core.cordapp.CordappConfigException: Cordapp configuration is incorrect due to exception
	at net.corda.node.internal.cordapp.TypesafeCordappConfig.get(TypesafeCordappConfig.kt:21) ~[corda-node-4.4.jar:?]
	at com.r3.corda.lib.tokens.selection.memory.config.InMemorySelectionConfig$Companion.parse(InMemorySelectionConfig.kt:29) ~[?:?]
	at com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService$Companion.getObservableFromAppServiceHub(VaultWatcherService.kt:76) ~[?:?]
	at com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService$Companion.access$getObservableFromAppServiceHub(VaultWatcherService.kt:71) ~[?:?]
	at com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService.<init>(VaultWatcherService.kt:69) ~[?:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_251]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) ~[?:1.8.0_251]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) ~[?:1.8.0_251]
	at java.lang.reflect.Constructor.newInstance(Unknown Source) ~[?:1.8.0_251]
	at net.corda.node.internal.AbstractNode.installCordaService(AbstractNode.kt:802) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.AbstractNode.installCordaServices(AbstractNode.kt:774) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.AbstractNode.access$installCordaServices(AbstractNode.kt:200) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.AbstractNode$start$8.invoke(AbstractNode.kt:514) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.AbstractNode$start$8.invoke(AbstractNode.kt:200) ~[corda-node-4.4.jar:?]
	at net.corda.nodeapi.internal.persistence.CordaPersistence.inTopLevelTransaction(CordaPersistence.kt:273) ~[corda-node-api-4.4.jar:?]
	at net.corda.nodeapi.internal.persistence.CordaPersistence.transaction(CordaPersistence.kt:249) ~[corda-node-api-4.4.jar:?]
	at net.corda.nodeapi.internal.persistence.CordaPersistence.transaction(CordaPersistence.kt:259) ~[corda-node-api-4.4.jar:?]
	at net.corda.node.internal.AbstractNode.start(AbstractNode.kt:503) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.Node.start(Node.kt:547) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.NodeStartup.startNode(NodeStartup.kt:210) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.NodeStartupCli$runProgram$2.run(NodeStartup.kt:131) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.NodeStartup$initialiseAndRun$5.invoke(NodeStartup.kt:187) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.NodeStartup$initialiseAndRun$5.invoke(NodeStartup.kt:138) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.NodeStartupLogging$DefaultImpls.attempt(NodeStartup.kt:529) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.NodeStartup.attempt(NodeStartup.kt:138) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.NodeStartup.initialiseAndRun(NodeStartup.kt:186) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.NodeStartupCli.runProgram(NodeStartup.kt:129) ~[corda-node-4.4.jar:?]
	at net.corda.cliutils.CordaCliWrapper.call(CordaCliWrapper.kt:190) ~[corda-tools-cliutils-4.4.jar:?]
	at net.corda.node.internal.NodeStartupCli.call(NodeStartup.kt:84) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.NodeStartupCli.call(NodeStartup.kt:65) ~[corda-node-4.4.jar:?]
	at picocli.CommandLine.execute(CommandLine.java:1173) ~[picocli-3.9.6.jar:3.9.6]
	at picocli.CommandLine.access$800(CommandLine.java:141) ~[picocli-3.9.6.jar:3.9.6]
	at picocli.CommandLine$RunLast.handle(CommandLine.java:1367) ~[picocli-3.9.6.jar:3.9.6]
	at picocli.CommandLine$RunLast.handle(CommandLine.java:1335) ~[picocli-3.9.6.jar:3.9.6]
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:1243) ~[picocli-3.9.6.jar:3.9.6]
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:1526) ~[picocli-3.9.6.jar:3.9.6]
	at net.corda.cliutils.CordaCliWrapperKt.start(CordaCliWrapper.kt:73) ~[corda-tools-cliutils-4.4.jar:?]
	at net.corda.node.Corda.main(Corda.kt:13) ~[corda-node-4.4.jar:?]
Caused by: com.typesafe.config.ConfigException$Missing: empty config: No configuration setting found for key 'stateSelection'
	at com.typesafe.config.impl.SimpleConfig.findKeyOrNull(SimpleConfig.java:156) ~[corda.jar:?]
	at com.typesafe.config.impl.SimpleConfig.findKey(SimpleConfig.java:149) ~[corda.jar:?]
	at com.typesafe.config.impl.SimpleConfig.findOrNull(SimpleConfig.java:176) ~[corda.jar:?]
	at com.typesafe.config.impl.SimpleConfig.find(SimpleConfig.java:188) ~[corda.jar:?]
	at com.typesafe.config.impl.SimpleConfig.find(SimpleConfig.java:193) ~[corda.jar:?]
	at com.typesafe.config.impl.SimpleConfig.getAnyRef(SimpleConfig.java:279) ~[corda.jar:?]
	at net.corda.node.internal.cordapp.TypesafeCordappConfig.get(TypesafeCordappConfig.kt:19) ~[corda-node-4.4.jar:?]
	... 37 more
[INFO ] 2020-06-26T09:41:52,670Z [main] inMemoryConfigSelectionLogger. - Found in memory token selection configuration with values indexing strategy: [], cacheSize: 1024
[WARN ] 2020-06-26T09:41:52,763Z [main] vault.NodeVaultService. - trackBy is called with an already existing, open DB transaction. As a result, there might be states missing from both the snapshot and observable, included in the returned data feed, because of race conditions.
[WARN ] 2020-06-26T09:41:53,023Z [main] inMemoryConfigSelectionLogger. - Did not detect a configuration for InMemory selection - enabling memory usage for token indexing. Please set stateSelection.inMemory.enabled to "false" to disable this
[WARN ] 2020-06-26T09:41:53,023Z [main] inMemoryConfigSelectionLogger. - No indexing method specified. Indexes will be created at run-time for each invocation of selectTokens [errorCode=m9ghng, moreInformationAt=https://errors.corda.net/OS/4.4/m9ghng]
net.corda.core.cordapp.CordappConfigException: Cordapp configuration is incorrect due to exception
	at net.corda.node.internal.cordapp.TypesafeCordappConfig.get(TypesafeCordappConfig.kt:21) ~[corda-node-4.4.jar:?]
	at com.r3.corda.lib.tokens.selection.memory.config.InMemorySelectionConfig$Companion.parse(InMemorySelectionConfig.kt:29) ~[?:?]
	at com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService.<init>(VaultWatcherService.kt:69) ~[?:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_251]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) ~[?:1.8.0_251]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) ~[?:1.8.0_251]
	at java.lang.reflect.Constructor.newInstance(Unknown Source) ~[?:1.8.0_251]
	at net.corda.node.internal.AbstractNode.installCordaService(AbstractNode.kt:802) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.AbstractNode.installCordaServices(AbstractNode.kt:774) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.AbstractNode.access$installCordaServices(AbstractNode.kt:200) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.AbstractNode$start$8.invoke(AbstractNode.kt:514) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.AbstractNode$start$8.invoke(AbstractNode.kt:200) ~[corda-node-4.4.jar:?]
	at net.corda.nodeapi.internal.persistence.CordaPersistence.inTopLevelTransaction(CordaPersistence.kt:273) ~[corda-node-api-4.4.jar:?]
	at net.corda.nodeapi.internal.persistence.CordaPersistence.transaction(CordaPersistence.kt:249) ~[corda-node-api-4.4.jar:?]
	at net.corda.nodeapi.internal.persistence.CordaPersistence.transaction(CordaPersistence.kt:259) ~[corda-node-api-4.4.jar:?]
	at net.corda.node.internal.AbstractNode.start(AbstractNode.kt:503) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.Node.start(Node.kt:547) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.NodeStartup.startNode(NodeStartup.kt:210) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.NodeStartupCli$runProgram$2.run(NodeStartup.kt:131) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.NodeStartup$initialiseAndRun$5.invoke(NodeStartup.kt:187) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.NodeStartup$initialiseAndRun$5.invoke(NodeStartup.kt:138) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.NodeStartupLogging$DefaultImpls.attempt(NodeStartup.kt:529) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.NodeStartup.attempt(NodeStartup.kt:138) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.NodeStartup.initialiseAndRun(NodeStartup.kt:186) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.NodeStartupCli.runProgram(NodeStartup.kt:129) ~[corda-node-4.4.jar:?]
	at net.corda.cliutils.CordaCliWrapper.call(CordaCliWrapper.kt:190) ~[corda-tools-cliutils-4.4.jar:?]
	at net.corda.node.internal.NodeStartupCli.call(NodeStartup.kt:84) ~[corda-node-4.4.jar:?]
	at net.corda.node.internal.NodeStartupCli.call(NodeStartup.kt:65) ~[corda-node-4.4.jar:?]
	at picocli.CommandLine.execute(CommandLine.java:1173) ~[picocli-3.9.6.jar:3.9.6]
	at picocli.CommandLine.access$800(CommandLine.java:141) ~[picocli-3.9.6.jar:3.9.6]
	at picocli.CommandLine$RunLast.handle(CommandLine.java:1367) ~[picocli-3.9.6.jar:3.9.6]
	at picocli.CommandLine$RunLast.handle(CommandLine.java:1335) ~[picocli-3.9.6.jar:3.9.6]
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:1243) ~[picocli-3.9.6.jar:3.9.6]
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:1526) ~[picocli-3.9.6.jar:3.9.6]
	at net.corda.cliutils.CordaCliWrapperKt.start(CordaCliWrapper.kt:73) ~[corda-tools-cliutils-4.4.jar:?]
	at net.corda.node.Corda.main(Corda.kt:13) ~[corda-node-4.4.jar:?]
Caused by: com.typesafe.config.ConfigException$Missing: empty config: No configuration setting found for key 'stateSelection'
	at com.typesafe.config.impl.SimpleConfig.findKeyOrNull(SimpleConfig.java:156) ~[corda.jar:?]
	at com.typesafe.config.impl.SimpleConfig.findKey(SimpleConfig.java:149) ~[corda.jar:?]
	at com.typesafe.config.impl.SimpleConfig.findOrNull(SimpleConfig.java:176) ~[corda.jar:?]
	at com.typesafe.config.impl.SimpleConfig.find(SimpleConfig.java:188) ~[corda.jar:?]
	at com.typesafe.config.impl.SimpleConfig.find(SimpleConfig.java:193) ~[corda.jar:?]
	at com.typesafe.config.impl.SimpleConfig.getAnyRef(SimpleConfig.java:279) ~[corda.jar:?]
	at net.corda.node.internal.cordapp.TypesafeCordappConfig.get(TypesafeCordappConfig.kt:19) ~[corda-node-4.4.jar:?]
	... 35 more
[INFO ] 2020-06-26T09:41:53,023Z [main] inMemoryConfigSelectionLogger. - Found in memory token selection configuration with values indexing strategy: [], cacheSize: 1024
[INFO ] 2020-06-26T09:41:53,034Z [main] services.VaultWatcherService. - Starting async token loading from vault
[INFO ] 2020-06-26T09:41:53,034Z [main] services.VaultWatcherService. - publishing 0 to async state loading callback
[INFO ] 2020-06-26T09:41:53,041Z [main] services.VaultWatcherService. - received token vault update with 0 consumed states and: 0 produced states
[INFO ] 2020-06-26T09:41:53,055Z [main] internal.Node. - Installed com.r3.corda.lib.tokens.selection.memory.services.VaultWatcherService Corda service
[INFO ] 2020-06-26T09:41:53,139Z [pool-14-thread-1] services.VaultWatcherService. - publishing 0 to async state loading callback
[INFO ] 2020-06-26T09:41:53,139Z [pool-14-thread-1] services.VaultWatcherService. - received token vault update with 0 consumed states and: 0 produced states
[INFO ] 2020-06-26T09:41:53,139Z [pool-14-thread-1] services.VaultWatcherService. - finished token loading
[INFO ] 2020-06-26T09:41:54,182Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[localhost:10090], legalIdentitiesAndCerts=[O=Dealer2, L=Delhi, C=IN], platformVersion=6, serial=1593164354862)
[INFO ] 2020-06-26T09:41:54,310Z [main] BasicInfo. - Loaded 9 CorDapp(s)                     : Contract CorDapp: Accounts SDK - States and Contracts version 1 by vendor R3 with licence Apache 2, Contract CorDapp: Accounts - Flows version 1 by vendor R3 with licence Apache 2, Workflow CorDapp: Confidential Identities Workflows version 1 by vendor Corda Open Source with licence Apache License, Version 2.0, Contract CorDapp: CorDapp t20worldcup Contract version 1 by vendor Corda Open Source with licence Apache License, Version 2.0, Contract CorDapp: Token SDK Contracts version 1 by vendor R3 with licence Apache 2, Contract CorDapp: Token SDK money definitions version 1 by vendor R3 with licence Apache 2, Contract CorDapp: Token SDK test-selection version 1 by vendor R3 with licence Apache 2, Workflow CorDapp: Token SDK Workflows version 1 by vendor R3 with licence Apache 2, Workflow CorDapp: t20worldcup Flows version 1 by vendor Corda Open Source with licence Apache License, Version 2.0
[INFO ] 2020-06-26T09:41:54,379Z [main] BasicInfo. - Node for "Dealer2" started up and registered in 65.08 sec
[INFO ] 2020-06-26T09:41:54,382Z [main] rpc.RPCServer. - Starting RPC server with configuration RPCServerConfiguration(rpcThreadPoolSize=4, reapInterval=PT1S, deduplicationCacheExpiry=PT24H)
[INFO ] 2020-06-26T09:41:54,391Z [Node thread-1] internal.Node. - Registering JMX reporter:
[INFO ] 2020-06-26T09:41:54,392Z [Node thread-1] internal.Node. - Registering Jolokia JMX reporter:
[INFO ] 2020-06-26T09:41:54,612Z [main] BasicInfo. - Running P2PMessaging loop
[INFO ] 2020-06-26T09:43:54,282Z [Node thread-1] messaging.P2PMessagingClient. - Create fresh queue internal.peers.DLGM15yPUycAkKBhg84fJrPuWFcGgJd3TY1ovwmS1oohuh bound on same address {fiber-id=10000001, flow-id=f1c847f8-4580-4150-8c43-e6d0e9993c82, invocation_id=001c1f4d-8bef-4546-aa95-c7ed262b4c42, invocation_timestamp=2020-06-26T09:43:54.132Z, origin=O=Dealer1, L=London, C=GB, session_id=001c1f4d-8bef-4546-aa95-c7ed262b4c42, session_timestamp=2020-06-26T09:43:54.132Z, thread-id=361}
[INFO ] 2020-06-26T09:43:54,307Z [Thread-6 (ActiveMQ-client-global-threads)] bridging.BridgeControlListener. - Received bridge control message Create(nodeIdentity=O=Dealer2, L=Delhi, C=IN, bridgeInfo=BridgeEntry(queueName=internal.peers.DLGM15yPUycAkKBhg84fJrPuWFcGgJd3TY1ovwmS1oohuh, targets=[localhost:10005], legalNames=[O=Dealer1, L=London, C=GB]))
[INFO ] 2020-06-26T09:43:54,330Z [Thread-6 (ActiveMQ-client-global-threads)] bridging.AMQPBridgeManager$AMQPBridge. - Create new AMQP bridge {legalNames=O=Dealer1, L=London, C=GB, maxMessageSize=10485760, queueName=internal.peers.DLGM15yPUycAkKBhg84fJrPuWFcGgJd3TY1ovwmS1oohuh, targets=localhost:10005}
[INFO ] 2020-06-26T09:43:54,331Z [Thread-6 (ActiveMQ-client-global-threads)] netty.AMQPClient. - connect to: localhost:10005
[INFO ] 2020-06-26T09:43:54,366Z [nioEventLoopGroup-2-1] netty.AMQPClient. - Connected to localhost:10005
[INFO ] 2020-06-26T09:43:54,371Z [nioEventLoopGroup-2-1] netty.AMQPChannelHandler. - New client connection b419a0e6 from localhost/127.0.0.1:10005 to /127.0.0.1:55052 {allowedRemoteLegalNames=O=Dealer1, L=London, C=GB, localCert=null, remoteAddress=localhost/127.0.0.1:10005, remoteCert=null, serverMode=false}
[INFO ] 2020-06-26T09:43:54,430Z [nioEventLoopGroup-2-1] netty.LoggingTrustManagerWrapper. - Check Server Certpath:
  C=GB,L=London,O=Dealer1[C92A1B9E4968A97B77111008A91A77FFFD4A7BDD] issued by C=GB,L=London,O=Dealer1[14AE1C7E08ECF53D8E307CA9545877BFED124361]
  C=GB,L=London,O=Dealer1[14AE1C7E08ECF53D8E307CA9545877BFED124361] issued by C=US,L=New York,OU=Corda,O=R3 HoldCo LLC,CN=Corda Doorman CA[EBEE2E30152940AE19981ED86FE37D7F07A2C213]
  C=US,L=New York,OU=Corda,O=R3 HoldCo LLC,CN=Corda Doorman CA[EBEE2E30152940AE19981ED86FE37D7F07A2C213] issued by CN=Corda Node Root CA,O=R3,OU=corda,L=London,C=UK[7CAEA9DFB948012B13890B9AE645851C39170773]
  CN=Corda Node Root CA,O=R3,OU=corda,L=London,C=UK[7CAEA9DFB948012B13890B9AE645851C39170773] issued by CN=Corda Node Root CA,O=R3,OU=corda,L=London,C=UK[null]
[INFO ] 2020-06-26T09:43:54,476Z [nioEventLoopGroup-2-1] netty.AMQPChannelHandler. - Handshake completed with subject: O=Dealer1, L=London, C=GB {allowedRemoteLegalNames=O=Dealer1, L=London, C=GB, localCert=O=Dealer2, L=Delhi, C=IN, remoteAddress=localhost/127.0.0.1:10005, remoteCert=O=Dealer1, L=London, C=GB, serverMode=false}
[INFO ] 2020-06-26T09:43:54,510Z [nioEventLoopGroup-2-1] bridging.AMQPBridgeManager$AMQPBridge. - Bridge Connected {legalNames=O=Dealer1, L=London, C=GB, maxMessageSize=10485760, queueName=internal.peers.DLGM15yPUycAkKBhg84fJrPuWFcGgJd3TY1ovwmS1oohuh, targets=localhost:10005}
[INFO ] 2020-06-26T09:43:54,527Z [nioEventLoopGroup-2-1] engine.ConnectionStateMachine. - Connection local open [id: 0xb419a0e6, L:/127.0.0.1:55052 - R:localhost/127.0.0.1:10005] {conn=[id: 0xb419a0e6, L:/127.0.0.1:55052 - R:localhost/127.0.0.1:10005], localLegalName=O=Dealer2, L=Delhi, C=IN, remoteLegalName=O=Dealer1, L=London, C=GB, serverMode=false}
[INFO ] 2020-06-26T09:43:54,694Z [Node thread-1] corda.flow. - Received transaction acknowledgement request from party O=Dealer1, L=London, C=GB. {fiber-id=10000001, flow-id=f1c847f8-4580-4150-8c43-e6d0e9993c82, invocation_id=001c1f4d-8bef-4546-aa95-c7ed262b4c42, invocation_timestamp=2020-06-26T09:43:54.132Z, origin=O=Dealer1, L=London, C=GB, session_id=001c1f4d-8bef-4546-aa95-c7ed262b4c42, session_timestamp=2020-06-26T09:43:54.132Z, thread-id=361, tx_id=A0BA90893A8FFF561788956715F14A45F10F58703F73E659FAFC65E69EEF2E0E}
[INFO ] 2020-06-26T09:43:54,769Z [Node thread-1] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000001, flow-id=f1c847f8-4580-4150-8c43-e6d0e9993c82, invocation_id=001c1f4d-8bef-4546-aa95-c7ed262b4c42, invocation_timestamp=2020-06-26T09:43:54.132Z, origin=O=Dealer1, L=London, C=GB, session_id=001c1f4d-8bef-4546-aa95-c7ed262b4c42, session_timestamp=2020-06-26T09:43:54.132Z, thread-id=361, tx_id=A0BA90893A8FFF561788956715F14A45F10F58703F73E659FAFC65E69EEF2E0E}
[INFO ] 2020-06-26T09:43:55,405Z [Node thread-1] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000001, flow-id=f1c847f8-4580-4150-8c43-e6d0e9993c82, invocation_id=001c1f4d-8bef-4546-aa95-c7ed262b4c42, invocation_timestamp=2020-06-26T09:43:54.132Z, origin=O=Dealer1, L=London, C=GB, session_id=001c1f4d-8bef-4546-aa95-c7ed262b4c42, session_timestamp=2020-06-26T09:43:54.132Z, thread-id=361, tx_id=A0BA90893A8FFF561788956715F14A45F10F58703F73E659FAFC65E69EEF2E0E}
[INFO ] 2020-06-26T09:43:55,867Z [Node thread-1] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000001, flow-id=f1c847f8-4580-4150-8c43-e6d0e9993c82, invocation_id=001c1f4d-8bef-4546-aa95-c7ed262b4c42, invocation_timestamp=2020-06-26T09:43:54.132Z, origin=O=Dealer1, L=London, C=GB, session_id=001c1f4d-8bef-4546-aa95-c7ed262b4c42, session_timestamp=2020-06-26T09:43:54.132Z, thread-id=361, tx_id=A0BA90893A8FFF561788956715F14A45F10F58703F73E659FAFC65E69EEF2E0E}
[INFO ] 2020-06-26T09:43:57,332Z [Node thread-1] corda.flow. - Received transaction acknowledgement request from party O=Dealer1, L=London, C=GB. {fiber-id=10000002, flow-id=58cf3d6c-99e4-4003-959c-fcef7753f230, invocation_id=1f492a33-ef1c-4ce5-9059-7fed1abd57a4, invocation_timestamp=2020-06-26T09:43:57.300Z, origin=O=Dealer1, L=London, C=GB, session_id=1f492a33-ef1c-4ce5-9059-7fed1abd57a4, session_timestamp=2020-06-26T09:43:57.300Z, thread-id=361, tx_id=0B54CBE3FA540ED578D67146946FDC1172560F507F595CC17C8BC7427F319B83}
[INFO ] 2020-06-26T09:43:57,360Z [Node thread-1] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=58cf3d6c-99e4-4003-959c-fcef7753f230, invocation_id=1f492a33-ef1c-4ce5-9059-7fed1abd57a4, invocation_timestamp=2020-06-26T09:43:57.300Z, origin=O=Dealer1, L=London, C=GB, session_id=1f492a33-ef1c-4ce5-9059-7fed1abd57a4, session_timestamp=2020-06-26T09:43:57.300Z, thread-id=361, tx_id=0B54CBE3FA540ED578D67146946FDC1172560F507F595CC17C8BC7427F319B83}
[INFO ] 2020-06-26T09:43:57,377Z [Node thread-1] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=58cf3d6c-99e4-4003-959c-fcef7753f230, invocation_id=1f492a33-ef1c-4ce5-9059-7fed1abd57a4, invocation_timestamp=2020-06-26T09:43:57.300Z, origin=O=Dealer1, L=London, C=GB, session_id=1f492a33-ef1c-4ce5-9059-7fed1abd57a4, session_timestamp=2020-06-26T09:43:57.300Z, thread-id=361, tx_id=0B54CBE3FA540ED578D67146946FDC1172560F507F595CC17C8BC7427F319B83}
[INFO ] 2020-06-26T09:43:57,391Z [Node thread-1] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=58cf3d6c-99e4-4003-959c-fcef7753f230, invocation_id=1f492a33-ef1c-4ce5-9059-7fed1abd57a4, invocation_timestamp=2020-06-26T09:43:57.300Z, origin=O=Dealer1, L=London, C=GB, session_id=1f492a33-ef1c-4ce5-9059-7fed1abd57a4, session_timestamp=2020-06-26T09:43:57.300Z, thread-id=361, tx_id=0B54CBE3FA540ED578D67146946FDC1172560F507F595CC17C8BC7427F319B83}
[INFO ] 2020-06-26T09:43:58,266Z [Node thread-1] corda.flow. - Received transaction acknowledgement request from party O=Dealer1, L=London, C=GB. {fiber-id=10000003, flow-id=3cdc3264-08bf-4d6e-9140-df6136eb9c1d, invocation_id=ad4fc061-2473-4c71-b74a-a7c5a0afa2a7, invocation_timestamp=2020-06-26T09:43:58.213Z, origin=O=Dealer1, L=London, C=GB, session_id=ad4fc061-2473-4c71-b74a-a7c5a0afa2a7, session_timestamp=2020-06-26T09:43:58.213Z, thread-id=361, tx_id=52A5D007027173264BF0D445821C37ED83C613926CDC33AE5997825EE0DCBCAF}
[INFO ] 2020-06-26T09:43:58,299Z [Node thread-1] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=3cdc3264-08bf-4d6e-9140-df6136eb9c1d, invocation_id=ad4fc061-2473-4c71-b74a-a7c5a0afa2a7, invocation_timestamp=2020-06-26T09:43:58.213Z, origin=O=Dealer1, L=London, C=GB, session_id=ad4fc061-2473-4c71-b74a-a7c5a0afa2a7, session_timestamp=2020-06-26T09:43:58.213Z, thread-id=361, tx_id=52A5D007027173264BF0D445821C37ED83C613926CDC33AE5997825EE0DCBCAF}
[INFO ] 2020-06-26T09:43:58,315Z [Node thread-1] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000003, flow-id=3cdc3264-08bf-4d6e-9140-df6136eb9c1d, invocation_id=ad4fc061-2473-4c71-b74a-a7c5a0afa2a7, invocation_timestamp=2020-06-26T09:43:58.213Z, origin=O=Dealer1, L=London, C=GB, session_id=ad4fc061-2473-4c71-b74a-a7c5a0afa2a7, session_timestamp=2020-06-26T09:43:58.213Z, thread-id=361, tx_id=52A5D007027173264BF0D445821C37ED83C613926CDC33AE5997825EE0DCBCAF}
[INFO ] 2020-06-26T09:43:58,324Z [Node thread-1] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000003, flow-id=3cdc3264-08bf-4d6e-9140-df6136eb9c1d, invocation_id=ad4fc061-2473-4c71-b74a-a7c5a0afa2a7, invocation_timestamp=2020-06-26T09:43:58.213Z, origin=O=Dealer1, L=London, C=GB, session_id=ad4fc061-2473-4c71-b74a-a7c5a0afa2a7, session_timestamp=2020-06-26T09:43:58.213Z, thread-id=361, tx_id=52A5D007027173264BF0D445821C37ED83C613926CDC33AE5997825EE0DCBCAF}
[INFO ] 2020-06-26T09:44:06,054Z [pool-10-thread-1] shell.FlowShellCommand. - Executing command "flow start CreateAndShareAccountFlow accountName: buyer3, partyToShareAccountInfoTo: [Bank, Dealer1]",
[INFO ] 2020-06-26T09:44:06,198Z [pool-10-thread-1] internal.RPCClient. - Startup took 116 msec
[INFO ] 2020-06-26T09:44:06,501Z [Node thread-1] corda.flow. - No need to notarise this transaction. {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000004, flow-id=496373d6-f602-425e-9432-f8e6c786dcf5, invocation_id=59e56a53-1cc9-463d-ba80-29907f802840, invocation_timestamp=2020-06-26T09:44:06.368Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361, tx_id=3B549CD1A82A0CB947B5662CCDFE485F8D18791297A514CB9C9BD026E4D5CF9D}
[INFO ] 2020-06-26T09:44:06,501Z [Node thread-1] corda.flow. - Recording transaction locally. {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000004, flow-id=496373d6-f602-425e-9432-f8e6c786dcf5, invocation_id=59e56a53-1cc9-463d-ba80-29907f802840, invocation_timestamp=2020-06-26T09:44:06.368Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361, tx_id=3B549CD1A82A0CB947B5662CCDFE485F8D18791297A514CB9C9BD026E4D5CF9D}
[INFO ] 2020-06-26T09:44:06,512Z [Node thread-1] corda.flow. - Recorded transaction locally successfully. {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000004, flow-id=496373d6-f602-425e-9432-f8e6c786dcf5, invocation_id=59e56a53-1cc9-463d-ba80-29907f802840, invocation_timestamp=2020-06-26T09:44:06.368Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361, tx_id=3B549CD1A82A0CB947B5662CCDFE485F8D18791297A514CB9C9BD026E4D5CF9D}
[INFO ] 2020-06-26T09:44:06,512Z [Node thread-1] corda.flow. - All parties received the transaction successfully. {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000004, flow-id=496373d6-f602-425e-9432-f8e6c786dcf5, invocation_id=59e56a53-1cc9-463d-ba80-29907f802840, invocation_timestamp=2020-06-26T09:44:06.368Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361, tx_id=3B549CD1A82A0CB947B5662CCDFE485F8D18791297A514CB9C9BD026E4D5CF9D}
[INFO ] 2020-06-26T09:44:06,871Z [Node thread-1] messaging.P2PMessagingClient. - Create fresh queue internal.peers.DLEUPx7rNA5Fjh3L1NZXRFSjukkc1fc2nSTKSf1YU6KGyS bound on same address {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000004, flow-id=496373d6-f602-425e-9432-f8e6c786dcf5, invocation_id=59e56a53-1cc9-463d-ba80-29907f802840, invocation_timestamp=2020-06-26T09:44:06.368Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361, tx_id=3B549CD1A82A0CB947B5662CCDFE485F8D18791297A514CB9C9BD026E4D5CF9D}
[INFO ] 2020-06-26T09:44:06,892Z [Thread-34 (ActiveMQ-client-global-threads)] bridging.BridgeControlListener. - Received bridge control message Create(nodeIdentity=O=Dealer2, L=Delhi, C=IN, bridgeInfo=BridgeEntry(queueName=internal.peers.DLEUPx7rNA5Fjh3L1NZXRFSjukkc1fc2nSTKSf1YU6KGyS, targets=[localhost:10017], legalNames=[O=Bank, L=Delhi, C=IN]))
[INFO ] 2020-06-26T09:44:06,895Z [Thread-34 (ActiveMQ-client-global-threads)] bridging.AMQPBridgeManager$AMQPBridge. - Create new AMQP bridge {legalNames=O=Bank, L=Delhi, C=IN, maxMessageSize=10485760, queueName=internal.peers.DLEUPx7rNA5Fjh3L1NZXRFSjukkc1fc2nSTKSf1YU6KGyS, targets=localhost:10017}
[INFO ] 2020-06-26T09:44:06,895Z [Thread-34 (ActiveMQ-client-global-threads)] netty.AMQPClient. - connect to: localhost:10017
[INFO ] 2020-06-26T09:44:06,901Z [nioEventLoopGroup-2-2] netty.AMQPClient. - Connected to localhost:10017
[INFO ] 2020-06-26T09:44:06,902Z [nioEventLoopGroup-2-2] netty.AMQPChannelHandler. - New client connection 9b36f8ff from localhost/127.0.0.1:10017 to /127.0.0.1:55056 {allowedRemoteLegalNames=O=Bank, L=Delhi, C=IN, localCert=null, remoteAddress=localhost/127.0.0.1:10017, remoteCert=null, serverMode=false}
[INFO ] 2020-06-26T09:44:06,913Z [nioEventLoopGroup-2-2] netty.LoggingTrustManagerWrapper. - Check Server Certpath:
  C=IN,L=Delhi,O=Bank[8FCF7D057D181E135E11317848A850CE47894940] issued by C=IN,L=Delhi,O=Bank[E6C56C7C2C569762A3347D2385C59E47C7F537B4]
  C=IN,L=Delhi,O=Bank[E6C56C7C2C569762A3347D2385C59E47C7F537B4] issued by C=US,L=New York,OU=Corda,O=R3 HoldCo LLC,CN=Corda Doorman CA[EBEE2E30152940AE19981ED86FE37D7F07A2C213]
  C=US,L=New York,OU=Corda,O=R3 HoldCo LLC,CN=Corda Doorman CA[EBEE2E30152940AE19981ED86FE37D7F07A2C213] issued by CN=Corda Node Root CA,O=R3,OU=corda,L=London,C=UK[7CAEA9DFB948012B13890B9AE645851C39170773]
  CN=Corda Node Root CA,O=R3,OU=corda,L=London,C=UK[7CAEA9DFB948012B13890B9AE645851C39170773] issued by CN=Corda Node Root CA,O=R3,OU=corda,L=London,C=UK[null]
[INFO ] 2020-06-26T09:44:06,944Z [nioEventLoopGroup-2-2] netty.AMQPChannelHandler. - Handshake completed with subject: O=Bank, L=Delhi, C=IN {allowedRemoteLegalNames=O=Bank, L=Delhi, C=IN, localCert=O=Dealer2, L=Delhi, C=IN, remoteAddress=localhost/127.0.0.1:10017, remoteCert=O=Bank, L=Delhi, C=IN, serverMode=false}
[INFO ] 2020-06-26T09:44:06,945Z [nioEventLoopGroup-2-2] bridging.AMQPBridgeManager$AMQPBridge. - Bridge Connected {legalNames=O=Bank, L=Delhi, C=IN, maxMessageSize=10485760, queueName=internal.peers.DLEUPx7rNA5Fjh3L1NZXRFSjukkc1fc2nSTKSf1YU6KGyS, targets=localhost:10017}
[INFO ] 2020-06-26T09:44:06,948Z [nioEventLoopGroup-2-2] engine.ConnectionStateMachine. - Connection local open [id: 0x9b36f8ff, L:/127.0.0.1:55056 - R:localhost/127.0.0.1:10017] {conn=[id: 0x9b36f8ff, L:/127.0.0.1:55056 - R:localhost/127.0.0.1:10017], localLegalName=O=Dealer2, L=Delhi, C=IN, remoteLegalName=O=Bank, L=Delhi, C=IN, serverMode=false}
[INFO ] 2020-06-26T09:44:22,240Z [Node thread-1] identity.PersistentIdentityService. - Linking: 58DB5C979B9235432E305C350056E07269F16F2AECCC4EE5EB35D3294F7C9E17 to O=Dealer2, L=Delhi, C=IN {fiber-id=10000005, flow-id=f15ab323-d475-4d79-abd0-85cd5e417c7e, invocation_id=030fae92-4f9c-41c0-a066-c66f9f126c05, invocation_timestamp=2020-06-26T09:44:21.927Z, origin=O=Bank, L=Delhi, C=IN, session_id=030fae92-4f9c-41c0-a066-c66f9f126c05, session_timestamp=2020-06-26T09:44:21.927Z, thread-id=361}
[INFO ] 2020-06-26T09:44:22,669Z [Node thread-1] corda.flow. - Received transaction acknowledgement request from party O=Bank, L=Delhi, C=IN. {fiber-id=10000006, flow-id=7bd4088d-7e70-49b6-8002-4dd5d71bc016, invocation_id=ed9c89a2-45ad-46e0-90af-984dea692ae5, invocation_timestamp=2020-06-26T09:44:22.451Z, origin=O=Bank, L=Delhi, C=IN, session_id=ed9c89a2-45ad-46e0-90af-984dea692ae5, session_timestamp=2020-06-26T09:44:22.451Z, thread-id=361, tx_id=58C807B6C45B5D384A09F2D1436724225213BBE6908B221A4E26FC43096B0048}
[INFO ] 2020-06-26T09:44:22,695Z [Node thread-1] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=7bd4088d-7e70-49b6-8002-4dd5d71bc016, invocation_id=ed9c89a2-45ad-46e0-90af-984dea692ae5, invocation_timestamp=2020-06-26T09:44:22.451Z, origin=O=Bank, L=Delhi, C=IN, session_id=ed9c89a2-45ad-46e0-90af-984dea692ae5, session_timestamp=2020-06-26T09:44:22.451Z, thread-id=361, tx_id=58C807B6C45B5D384A09F2D1436724225213BBE6908B221A4E26FC43096B0048}
[INFO ] 2020-06-26T09:44:23,310Z [Node thread-1] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=7bd4088d-7e70-49b6-8002-4dd5d71bc016, invocation_id=ed9c89a2-45ad-46e0-90af-984dea692ae5, invocation_timestamp=2020-06-26T09:44:22.451Z, origin=O=Bank, L=Delhi, C=IN, session_id=ed9c89a2-45ad-46e0-90af-984dea692ae5, session_timestamp=2020-06-26T09:44:22.451Z, thread-id=361, tx_id=58C807B6C45B5D384A09F2D1436724225213BBE6908B221A4E26FC43096B0048}
[INFO ] 2020-06-26T09:44:23,363Z [Node thread-1] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=7bd4088d-7e70-49b6-8002-4dd5d71bc016, invocation_id=ed9c89a2-45ad-46e0-90af-984dea692ae5, invocation_timestamp=2020-06-26T09:44:22.451Z, origin=O=Bank, L=Delhi, C=IN, session_id=ed9c89a2-45ad-46e0-90af-984dea692ae5, session_timestamp=2020-06-26T09:44:22.451Z, thread-id=361, tx_id=58C807B6C45B5D384A09F2D1436724225213BBE6908B221A4E26FC43096B0048}
[INFO ] 2020-06-26T09:44:23,372Z [Node thread-1] services.VaultWatcherService. - received token vault update with 0 consumed states and: 1 produced states {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000006, flow-id=7bd4088d-7e70-49b6-8002-4dd5d71bc016, invocation_id=ed9c89a2-45ad-46e0-90af-984dea692ae5, invocation_timestamp=2020-06-26T09:44:22.451Z, origin=O=Bank, L=Delhi, C=IN, session_id=ed9c89a2-45ad-46e0-90af-984dea692ae5, session_timestamp=2020-06-26T09:44:22.451Z, thread-id=361}
[INFO ] 2020-06-26T09:45:44,283Z [pool-10-thread-2] shell.FlowShellCommand. - Executing command "flow start MoveTokensBetweenAccounts buyerAccountName: buyer3, sellerAccountName: buyer1, costOfTicket: 5, currency: USD",
[INFO ] 2020-06-26T09:45:44,444Z [Node thread-1] identity.PersistentIdentityService. - Linking: 60ECBD07D56F866CA5AC3DE49AA4800ECB043CD1446CA9CE36494F452B597986 to O=Dealer2, L=Delhi, C=IN {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000007, flow-id=013c7761-fea6-457f-881f-ef4f19fbcd85, invocation_id=e8517d18-578d-4ef1-b468-aa06b8bacec8, invocation_timestamp=2020-06-26T09:45:44.370Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
[INFO ] 2020-06-26T09:45:44,661Z [Node thread-1] identity.PersistentIdentityService. - Linking: 12889FDB55D36E77C6F9332C0E05F8ECC8A333F0F951D53D410288DDD23041EF to O=Dealer1, L=London, C=GB {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000007, flow-id=013c7761-fea6-457f-881f-ef4f19fbcd85, invocation_id=e8517d18-578d-4ef1-b468-aa06b8bacec8, invocation_timestamp=2020-06-26T09:45:44.370Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
[INFO ] 2020-06-26T09:45:45,322Z [Node thread-1] identity.PersistentIdentityService. - An existing entry for DL7XMWg7YCKsHzLEVSN9QGE4TzCun7Aj6SywUR8eyHAKXB already exists. {fiber-id=10000008, flow-id=706c1d79-f809-44c4-bf35-d28400819cf5, invocation_id=cdf3688b-fb65-4e31-81eb-aa73fdd5dff5, invocation_timestamp=2020-06-26T09:45:45.268Z, origin=O=Dealer1, L=London, C=GB, session_id=cdf3688b-fb65-4e31-81eb-aa73fdd5dff5, session_timestamp=2020-06-26T09:45:45.268Z, thread-id=361}
[INFO ] 2020-06-26T09:45:45,426Z [Node thread-1] identity.PersistentIdentityService. - An existing entry for DL6yrtA2G91V37a47jnCozPKzaQirrmaB4ZETuPUK5mnox already exists. {fiber-id=10000009, flow-id=658672dc-6fa7-4e9f-94c8-0f0f5ab58e12, invocation_id=02dd94ab-d6e4-4c91-80b3-d3f922b176cd, invocation_timestamp=2020-06-26T09:45:45.387Z, origin=O=Dealer1, L=London, C=GB, session_id=02dd94ab-d6e4-4c91-80b3-d3f922b176cd, session_timestamp=2020-06-26T09:45:45.387Z, thread-id=361}
[INFO ] 2020-06-26T09:45:45,648Z [Node thread-1] identity.PersistentIdentityService. - Linking: F4D2F5E8E79D7620818E6FB27BE18CF779A82DA104470414C21BACE4A24B3988 to O=Dealer2, L=Delhi, C=IN {fiber-id=10000010, flow-id=3c6ac4fe-9e3b-47a9-a4af-20311e59ad29, invocation_id=8a36bbe4-3592-46a0-9c1e-70873b488ff7, invocation_timestamp=2020-06-26T09:45:45.541Z, origin=O=Dealer1, L=London, C=GB, session_id=8a36bbe4-3592-46a0-9c1e-70873b488ff7, session_timestamp=2020-06-26T09:45:45.541Z, thread-id=361}
[INFO ] 2020-06-26T09:46:04,513Z [nioEventLoopGroup-2-1] engine.ConnectionStateMachine. - Transport Error [id: 0xb419a0e6, L:/127.0.0.1:55052 - R:localhost/127.0.0.1:10005] {conn=[id: 0xb419a0e6, L:/127.0.0.1:55052 - R:localhost/127.0.0.1:10005], localLegalName=O=Dealer2, L=Delhi, C=IN, remoteLegalName=O=Dealer1, L=London, C=GB, serverMode=false}
[INFO ] 2020-06-26T09:46:04,513Z [nioEventLoopGroup-2-1] engine.ConnectionStateMachine. - Error: connection aborted {conn=[id: 0xb419a0e6, L:/127.0.0.1:55052 - R:localhost/127.0.0.1:10005], localLegalName=O=Dealer2, L=Delhi, C=IN, remoteLegalName=O=Dealer1, L=London, C=GB, serverMode=false}
[INFO ] 2020-06-26T09:46:04,516Z [nioEventLoopGroup-2-1] engine.ConnectionStateMachine. - Connection unbound [id: 0xb419a0e6, L:/127.0.0.1:55052 - R:localhost/127.0.0.1:10005] {conn=[id: 0xb419a0e6, L:/127.0.0.1:55052 - R:localhost/127.0.0.1:10005], localLegalName=O=Dealer2, L=Delhi, C=IN, remoteLegalName=O=Dealer1, L=London, C=GB, serverMode=false}
[INFO ] 2020-06-26T09:46:04,519Z [nioEventLoopGroup-2-1] netty.AMQPClient. - Disconnected from localhost:10005
[INFO ] 2020-06-26T09:46:04,521Z [nioEventLoopGroup-2-1] netty.AMQPChannelHandler. - Closed client connection b419a0e6 from localhost/127.0.0.1:10005 to /127.0.0.1:55052 {allowedRemoteLegalNames=O=Dealer1, L=London, C=GB, localCert=O=Dealer2, L=Delhi, C=IN, remoteAddress=localhost/127.0.0.1:10005, remoteCert=O=Dealer1, L=London, C=GB, serverMode=false}
[INFO ] 2020-06-26T09:46:04,522Z [nioEventLoopGroup-2-1] bridging.AMQPBridgeManager$AMQPBridge. - Bridge Disconnected {legalNames=O=Dealer1, L=London, C=GB, maxMessageSize=10485760, queueName=internal.peers.DLGM15yPUycAkKBhg84fJrPuWFcGgJd3TY1ovwmS1oohuh, targets=localhost:10005}
[INFO ] 2020-06-26T09:46:05,521Z [nioEventLoopGroup-2-3] netty.AMQPClient. - Retry connect to localhost:10005
[INFO ] 2020-06-26T09:46:05,527Z [nioEventLoopGroup-2-4] netty.AMQPClient. - Connected to localhost:10005
[INFO ] 2020-06-26T09:46:05,528Z [nioEventLoopGroup-2-4] netty.AMQPChannelHandler. - New client connection 0dc603a8 from localhost/127.0.0.1:10005 to /127.0.0.1:55077 {allowedRemoteLegalNames=O=Dealer1, L=London, C=GB, localCert=null, remoteAddress=localhost/127.0.0.1:10005, remoteCert=null, serverMode=false}
[INFO ] 2020-06-26T09:46:24,663Z [nioEventLoopGroup-2-4] netty.LoggingTrustManagerWrapper. - Check Server Certpath:
  C=GB,L=London,O=Dealer1[C92A1B9E4968A97B77111008A91A77FFFD4A7BDD] issued by C=GB,L=London,O=Dealer1[14AE1C7E08ECF53D8E307CA9545877BFED124361]
  C=GB,L=London,O=Dealer1[14AE1C7E08ECF53D8E307CA9545877BFED124361] issued by C=US,L=New York,OU=Corda,O=R3 HoldCo LLC,CN=Corda Doorman CA[EBEE2E30152940AE19981ED86FE37D7F07A2C213]
  C=US,L=New York,OU=Corda,O=R3 HoldCo LLC,CN=Corda Doorman CA[EBEE2E30152940AE19981ED86FE37D7F07A2C213] issued by CN=Corda Node Root CA,O=R3,OU=corda,L=London,C=UK[7CAEA9DFB948012B13890B9AE645851C39170773]
  CN=Corda Node Root CA,O=R3,OU=corda,L=London,C=UK[7CAEA9DFB948012B13890B9AE645851C39170773] issued by CN=Corda Node Root CA,O=R3,OU=corda,L=London,C=UK[null]
[INFO ] 2020-06-26T09:46:24,697Z [nioEventLoopGroup-2-4] netty.AMQPChannelHandler. - Handshake completed with subject: O=Dealer1, L=London, C=GB {allowedRemoteLegalNames=O=Dealer1, L=London, C=GB, localCert=O=Dealer2, L=Delhi, C=IN, remoteAddress=localhost/127.0.0.1:10005, remoteCert=O=Dealer1, L=London, C=GB, serverMode=false}
[INFO ] 2020-06-26T09:46:24,699Z [nioEventLoopGroup-2-4] bridging.AMQPBridgeManager$AMQPBridge. - Bridge Connected {legalNames=O=Dealer1, L=London, C=GB, maxMessageSize=10485760, queueName=internal.peers.DLGM15yPUycAkKBhg84fJrPuWFcGgJd3TY1ovwmS1oohuh, targets=localhost:10005}
[INFO ] 2020-06-26T09:46:24,716Z [nioEventLoopGroup-2-4] engine.ConnectionStateMachine. - Connection local open [id: 0x0dc603a8, L:/127.0.0.1:55077 - R:localhost/127.0.0.1:10005] {conn=[id: 0x0dc603a8, L:/127.0.0.1:55077 - R:localhost/127.0.0.1:10005], localLegalName=O=Dealer2, L=Delhi, C=IN, remoteLegalName=O=Dealer1, L=London, C=GB, serverMode=false}
[INFO ] 2020-06-26T09:46:37,173Z [Node thread-1] corda.flow. - Flow raised an error: Counter-flow errored. Sending it to flow hospital to be triaged. {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000007, flow-id=013c7761-fea6-457f-881f-ef4f19fbcd85, invocation_id=e8517d18-578d-4ef1-b468-aa06b8bacec8, invocation_timestamp=2020-06-26T09:45:44.370Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
[INFO ] 2020-06-26T09:46:37,248Z [Node thread-1] statemachine.StaffedFlowHospital. - Flow [013c7761-fea6-457f-881f-ef4f19fbcd85] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=6918488845085291005)), errors=[FlowError(errorId=-6918558264203133901, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))]), frozenFiber=15E7C36E93DD96916146C0549EC172BD7F0FF839F725318A4740CF00CD6B51AC), errorState=Clean, numberOfSuspends=13), flowLogic=com.t20worldcup.flows.MoveTokensBetweenAccounts@7f6c51ce, pendingDeduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=E--6918558264203133901--6098076158309599791))], isFlowResumed=true, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a) {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000007, flow-id=013c7761-fea6-457f-881f-ef4f19fbcd85, invocation_id=e8517d18-578d-4ef1-b468-aa06b8bacec8, invocation_timestamp=2020-06-26T09:45:44.370Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
[INFO ] 2020-06-26T09:46:37,257Z [Node thread-1] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000007, flow-id=013c7761-fea6-457f-881f-ef4f19fbcd85, invocation_id=e8517d18-578d-4ef1-b468-aa06b8bacec8, invocation_timestamp=2020-06-26T09:45:44.370Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Dealer1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:176) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:164) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:449) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:331) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:338) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:331) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:338) ~[corda-core-4.4.jar:?]
	at com.t20worldcup.flows.MoveTokensBetweenAccounts.call(MoveTokensBetweenAccounts.kt:148) ~[?:?]
	at com.t20worldcup.flows.MoveTokensBetweenAccounts.call(MoveTokensBetweenAccounts.kt:50) ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.FutureTask.run(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) ~[?:1.8.0_251]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-06-26T09:46:37,265Z [Node thread-1] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000007, flow-id=013c7761-fea6-457f-881f-ef4f19fbcd85, invocation_id=e8517d18-578d-4ef1-b468-aa06b8bacec8, invocation_timestamp=2020-06-26T09:45:44.370Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Dealer1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:176) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:164) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:449) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:331) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:338) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:331) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:338) ~[corda-core-4.4.jar:?]
	at com.t20worldcup.flows.MoveTokensBetweenAccounts.call(MoveTokensBetweenAccounts.kt:148) ~[?:?]
	at com.t20worldcup.flows.MoveTokensBetweenAccounts.call(MoveTokensBetweenAccounts.kt:50) ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.FutureTask.run(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) ~[?:1.8.0_251]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-06-26T09:46:37,434Z [Node thread-1] interceptors.DumpHistoryOnErrorInterceptor. - Flow [013c7761-fea6-457f-881f-ef4f19fbcd85] errored, dumping all transitions:

 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.420Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=EB24E4CBB3DF048544970606953CE85F825A147AEAFB2006C506BEBE1C4AD7F1), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@1aab1a25])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@1aab1a25])
    SignalFlowHasStarted(flowId=[013c7761-fea6-457f-881f-ef4f19fbcd85])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@1aab1a25]
    []
isAnyCheckpointPersisted: 
    false
    true


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.431Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.416Z
    2020-06-26T09:45:44.431Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.434Z
  Event: InitiateFlow(destination=O=Dealer2, L=Delhi, C=IN, wellKnownParty=O=Dealer2, L=Delhi, C=IN)
  Actions: 
    AddSessionBinding(flowId=[013c7761-fea6-457f-881f-ef4f19fbcd85], sessionId=SessionId(toLong=-1194582803971799438))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.431Z
    2020-06-26T09:45:44.434Z
checkpoint.sessions.SessionId(toLong=-1194582803971799438): 
    null
    Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014)


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.436Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.434Z
    2020-06-26T09:45:44.436Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.445Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.436Z
    2020-06-26T09:45:44.445Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.446Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.445Z
    2020-06-26T09:45:44.446Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.453Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.446Z
    2020-06-26T09:45:44.453Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.453Z
  Event: InitiateFlow(destination=O=Dealer1, L=London, C=GB, wellKnownParty=O=Dealer1, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[013c7761-fea6-457f-881f-ef4f19fbcd85], sessionId=SessionId(toLong=-5956319184361013398))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-5956319184361013398): 
    null
    Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5956319184361013398), additionalEntropy=-7398059090681582474)


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.454Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.453Z
    2020-06-26T09:45:44.454Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.467Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=ADB45CC790F3B90D668A9F26CC23BE689CBFC04B4B8388A49714C463CD817F0D}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=1A0D3A1FD79E8A7F93B031D30CF56A1F18524802A42B4C98C5519348A1DEC2D1, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5956319184361013398), additionalEntropy=-7398059090681582474)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=ADB45CC790F3B90D668A9F26CC23BE689CBFC04B4B8388A49714C463CD817F0D}, shouldRetrySend=false), frozenFiber=1A0D3A1FD79E8A7F93B031D30CF56A1F18524802A42B4C98C5519348A1DEC2D1), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:45:44.454Z
    2020-06-26T09:45:44.463Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=EB24E4CBB3DF048544970606953CE85F825A147AEAFB2006C506BEBE1C4AD7F1)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=ADB45CC790F3B90D668A9F26CC23BE689CBFC04B4B8388A49714C463CD817F0D}, shouldRetrySend=false), frozenFiber=1A0D3A1FD79E8A7F93B031D30CF56A1F18524802A42B4C98C5519348A1DEC2D1)
checkpoint.numberOfSuspends: 
    0
    1


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.472Z
  Event: DoRemainingWork
  Actions: 
    SendInitial(destination=O=Dealer1, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-5956319184361013398), initiationEntropy=-7398059090681582474, initiatorFlowClassName=com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, appName=accounts-workflows-1.0, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--5956319184361013398--7398059090681582474-1-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.463Z
    2020-06-26T09:45:44.467Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=ADB45CC790F3B90D668A9F26CC23BE689CBFC04B4B8388A49714C463CD817F0D}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))])
checkpoint.sessions.SessionId(toLong=-5956319184361013398): 
    Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5956319184361013398), additionalEntropy=-7398059090681582474)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--5956319184361013398--7398059090681582474)


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.516Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5956319184361013398), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-8522059149993352037), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0))), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-0-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-0-0))]
checkpoint.timestamp: 
    2020-06-26T09:45:44.467Z
    2020-06-26T09:45:44.516Z
checkpoint.sessions.SessionId(toLong=-5956319184361013398): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--5956319184361013398--7398059090681582474)
    Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-8522059149993352037)), errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474)


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.516Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.543Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5956319184361013398), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-2-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-0-0))]
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-2-0))]
checkpoint.timestamp: 
    2020-06-26T09:45:44.516Z
    2020-06-26T09:45:44.543Z
checkpoint.sessions.SessionId(toLong=-5956319184361013398).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.543Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=-5956319184361013398).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.552Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.543Z
    2020-06-26T09:45:44.552Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.574Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FC072C7DF93C26E6BD533C1AD48673CD5FF1EEECFE1EF5237E77B71AC5504807}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=01C5D27EAEBF51E0425E0F47C33AC2E7B95F4601C77E7732EB730CDC7555B679, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-8522059149993352037)), errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FC072C7DF93C26E6BD533C1AD48673CD5FF1EEECFE1EF5237E77B71AC5504807}, shouldRetrySend=false), frozenFiber=01C5D27EAEBF51E0425E0F47C33AC2E7B95F4601C77E7732EB730CDC7555B679), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-2-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-2-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-2-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:45:44.552Z
    2020-06-26T09:45:44.567Z
checkpoint.flowState.frozenFiber.hash: 
    1A0D3A1FD79E8A7F93B031D30CF56A1F18524802A42B4C98C5519348A1DEC2D1
    01C5D27EAEBF51E0425E0F47C33AC2E7B95F4601C77E7732EB730CDC7555B679
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))])
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FC072C7DF93C26E6BD533C1AD48673CD5FF1EEECFE1EF5237E77B71AC5504807}, shouldRetrySend=false)
checkpoint.numberOfSuspends: 
    1
    2


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.582Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-8522059149993352037), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--5956319184361013398--7398059090681582474-2-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.567Z
    2020-06-26T09:45:44.575Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FC072C7DF93C26E6BD533C1AD48673CD5FF1EEECFE1EF5237E77B71AC5504807}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))])


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.641Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5956319184361013398), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-4-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-4-0))]
checkpoint.timestamp: 
    2020-06-26T09:45:44.575Z
    2020-06-26T09:45:44.641Z
checkpoint.sessions.SessionId(toLong=-5956319184361013398).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.642Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=-5956319184361013398).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.663Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.641Z
    2020-06-26T09:45:44.663Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.663Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.663Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.664Z
  Event: InitiateFlow(destination=O=Dealer1, L=London, C=GB, wellKnownParty=O=Dealer1, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[013c7761-fea6-457f-881f-ef4f19fbcd85], sessionId=SessionId(toLong=-6098076158309599791))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.663Z
    2020-06-26T09:45:44.664Z
checkpoint.sessions.SessionId(toLong=-6098076158309599791): 
    null
    Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-6098076158309599791), additionalEntropy=-5081445792796071432)


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.675Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=1253348F600D7AB22CEE22D622877100166DD087861BCC67C14208A278BE40F8}), maySkipCheckpoint=false, fiber=567D976DDA8C3E31FA44A4AEC9DD73C5637680A952A1F577BE17870FC2A31D08, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-8522059149993352037)), errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-6098076158309599791), additionalEntropy=-5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=1253348F600D7AB22CEE22D622877100166DD087861BCC67C14208A278BE40F8}), frozenFiber=567D976DDA8C3E31FA44A4AEC9DD73C5637680A952A1F577BE17870FC2A31D08), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-4-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-4-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-4-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:45:44.664Z
    2020-06-26T09:45:44.670Z
checkpoint.flowState.frozenFiber.hash: 
    01C5D27EAEBF51E0425E0F47C33AC2E7B95F4601C77E7732EB730CDC7555B679
    567D976DDA8C3E31FA44A4AEC9DD73C5637680A952A1F577BE17870FC2A31D08
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=1253348F600D7AB22CEE22D622877100166DD087861BCC67C14208A278BE40F8})
checkpoint.numberOfSuspends: 
    2
    3


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.683Z
  Event: DoRemainingWork
  Actions: 
    SendInitial(destination=O=Dealer1, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-6098076158309599791), initiationEntropy=-5081445792796071432, initiatorFlowClassName=com.t20worldcup.flows.MoveTokensBetweenAccounts, appName=workflows-0.1, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-3-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2020-06-26T09:45:44.670Z
    2020-06-26T09:45:44.677Z
checkpoint.sessions.SessionId(toLong=-6098076158309599791): 
    Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-6098076158309599791), additionalEntropy=-5081445792796071432)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--6098076158309599791--5081445792796071432)


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.701Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=A4D60D04914B77EDA16FD770A77B0EF1EA2B590756FBF27689E00F8F669A3141}), maySkipCheckpoint=false, fiber=35E5F496CA2BF3AE45034BFB43F770DF776D1570190133F3A8C93830E3686F8C, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-8522059149993352037)), errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=A4D60D04914B77EDA16FD770A77B0EF1EA2B590756FBF27689E00F8F669A3141}), frozenFiber=35E5F496CA2BF3AE45034BFB43F770DF776D1570190133F3A8C93830E3686F8C), errorState=Clean, numberOfSuspends=4), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:45:44.677Z
    2020-06-26T09:45:44.692Z
checkpoint.flowState.frozenFiber.hash: 
    567D976DDA8C3E31FA44A4AEC9DD73C5637680A952A1F577BE17870FC2A31D08
    35E5F496CA2BF3AE45034BFB43F770DF776D1570190133F3A8C93830E3686F8C
checkpoint.flowState.flowIORequest.sessionToMessage.FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791)).hash: 
    1253348F600D7AB22CEE22D622877100166DD087861BCC67C14208A278BE40F8
    A4D60D04914B77EDA16FD770A77B0EF1EA2B590756FBF27689E00F8F669A3141
checkpoint.numberOfSuspends: 
    3
    4


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.701Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5956319184361013398), payload=net.corda.node.services.statemachine.EndSessionMessage@6e52c2fa), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-6-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-6-0))]
checkpoint.timestamp: 
    2020-06-26T09:45:44.692Z
    2020-06-26T09:45:44.701Z
checkpoint.sessions.SessionId(toLong=-5956319184361013398).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=-8522059149993352037))
    Ended


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.702Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2020-06-26T09:45:44.701Z
    2020-06-26T09:45:44.702Z
checkpoint.sessions.SessionId(toLong=-6098076158309599791).bufferedMessages: 
    []
    [(DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-4-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes))]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.807Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendStateAndRefFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.702Z
    2020-06-26T09:45:44.807Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendStateAndRefFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.844Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=0C38E885817262EED852815950F597848493D6142CB7B93F5BDDAFAA6FF8F08E}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=9F223A7AC03C923AB4D493A1F9D16A70BE3DFB790AEDD022D0723B5F6B305A16, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiating(bufferedMessages=[(DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-4-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes))], rejectionError=null, deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendStateAndRefFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=0C38E885817262EED852815950F597848493D6142CB7B93F5BDDAFAA6FF8F08E}, shouldRetrySend=false), frozenFiber=9F223A7AC03C923AB4D493A1F9D16A70BE3DFB790AEDD022D0723B5F6B305A16), errorState=Clean, numberOfSuspends=5), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-6-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-6-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-6-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:45:44.807Z
    2020-06-26T09:45:44.841Z
checkpoint.flowState.frozenFiber.hash: 
    35E5F496CA2BF3AE45034BFB43F770DF776D1570190133F3A8C93830E3686F8C
    9F223A7AC03C923AB4D493A1F9D16A70BE3DFB790AEDD022D0723B5F6B305A16
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=A4D60D04914B77EDA16FD770A77B0EF1EA2B590756FBF27689E00F8F669A3141})
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=0C38E885817262EED852815950F597848493D6142CB7B93F5BDDAFAA6FF8F08E}, shouldRetrySend=false)
checkpoint.numberOfSuspends: 
    4
    5


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.845Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.841Z
    2020-06-26T09:45:44.845Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=0C38E885817262EED852815950F597848493D6142CB7B93F5BDDAFAA6FF8F08E}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))])
checkpoint.sessions.SessionId(toLong=-6098076158309599791).bufferedMessages: 
    [(DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-4-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes))]
    [(DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-4-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), (DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-5-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes))]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.845Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.854Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6098076158309599791), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=6918488845085291005), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1))), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-0-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6918488845085291005), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-4-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6918488845085291005), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-5-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-0-0))]
checkpoint.sessions.SessionId(toLong=-6098076158309599791): 
    Initiating(bufferedMessages=[(DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-4-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), (DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-5-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes))], rejectionError=null, deduplicationSeed=R--6098076158309599791--5081445792796071432)
    Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=6918488845085291005)), errors=[], deduplicationSeed=R--6098076158309599791--5081445792796071432)


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.855Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.927Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6098076158309599791), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-4-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-0-0))]
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-4-0))]
checkpoint.timestamp: 
    2020-06-26T09:45:44.855Z
    2020-06-26T09:45:44.927Z
checkpoint.sessions.SessionId(toLong=-6098076158309599791).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.927Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=-6098076158309599791).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.958Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=9AB29615382092BBDCDEBFFE6E1812E4760E804A4915D70867A99A019BA26D48}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=D8FECC4A4A73B5D3F5D3C5FBA81B4D161B5FAC9C6AEC7A808D44E3C5DC033F12, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=6918488845085291005)), errors=[], deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendStateAndRefFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=9AB29615382092BBDCDEBFFE6E1812E4760E804A4915D70867A99A019BA26D48}, shouldRetrySend=false), frozenFiber=D8FECC4A4A73B5D3F5D3C5FBA81B4D161B5FAC9C6AEC7A808D44E3C5DC033F12), errorState=Clean, numberOfSuspends=6), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-4-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-4-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-4-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:45:44.927Z
    2020-06-26T09:45:44.952Z
checkpoint.flowState.frozenFiber.hash: 
    9F223A7AC03C923AB4D493A1F9D16A70BE3DFB790AEDD022D0723B5F6B305A16
    D8FECC4A4A73B5D3F5D3C5FBA81B4D161B5FAC9C6AEC7A808D44E3C5DC033F12
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))])
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=9AB29615382092BBDCDEBFFE6E1812E4760E804A4915D70867A99A019BA26D48}, shouldRetrySend=false)
checkpoint.numberOfSuspends: 
    5
    6


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.964Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6918488845085291005), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-6-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.952Z
    2020-06-26T09:45:44.958Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=9AB29615382092BBDCDEBFFE6E1812E4760E804A4915D70867A99A019BA26D48}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))])


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.032Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6098076158309599791), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-6-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-6-0))]
checkpoint.timestamp: 
    2020-06-26T09:45:44.958Z
    2020-06-26T09:45:45.032Z
checkpoint.sessions.SessionId(toLong=-6098076158309599791).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.032Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=-6098076158309599791).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.033Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:45.032Z
    2020-06-26T09:45:45.033Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendStateAndRefFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.051Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=58CF5287631083AFBB858FDBA76D98CA712285BA4B94165D1961B51F02446F5D}), maySkipCheckpoint=false, fiber=8083304A13848F2BD31649CA76920DA781E9B6563126204D2DB2A43FC8B7C6DF, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=6918488845085291005)), errors=[], deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=58CF5287631083AFBB858FDBA76D98CA712285BA4B94165D1961B51F02446F5D}), frozenFiber=8083304A13848F2BD31649CA76920DA781E9B6563126204D2DB2A43FC8B7C6DF), errorState=Clean, numberOfSuspends=7), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-6-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-6-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-6-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:45:45.033Z
    2020-06-26T09:45:45.041Z
checkpoint.flowState.frozenFiber.hash: 
    D8FECC4A4A73B5D3F5D3C5FBA81B4D161B5FAC9C6AEC7A808D44E3C5DC033F12
    8083304A13848F2BD31649CA76920DA781E9B6563126204D2DB2A43FC8B7C6DF
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=58CF5287631083AFBB858FDBA76D98CA712285BA4B94165D1961B51F02446F5D})
checkpoint.numberOfSuspends: 
    6
    7


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.069Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6918488845085291005), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-7-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.074Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:45.051Z
    2020-06-26T09:45:45.074Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.094Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=BFCAEE648A2C5B1A38CCA9395541F04A4C5BC6B82C081FDB4E01B9D238CEAA1C}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=6A22F5D3EA2368C79CC0AEE6A3BA53425B67F1B8E6F6CB7B8BD691F03A4049F5, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=6918488845085291005)), errors=[], deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=BFCAEE648A2C5B1A38CCA9395541F04A4C5BC6B82C081FDB4E01B9D238CEAA1C}, shouldRetrySend=false), frozenFiber=6A22F5D3EA2368C79CC0AEE6A3BA53425B67F1B8E6F6CB7B8BD691F03A4049F5), errorState=Clean, numberOfSuspends=8), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:45:45.074Z
    2020-06-26T09:45:45.091Z
checkpoint.flowState.frozenFiber.hash: 
    8083304A13848F2BD31649CA76920DA781E9B6563126204D2DB2A43FC8B7C6DF
    6A22F5D3EA2368C79CC0AEE6A3BA53425B67F1B8E6F6CB7B8BD691F03A4049F5
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=58CF5287631083AFBB858FDBA76D98CA712285BA4B94165D1961B51F02446F5D})
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=BFCAEE648A2C5B1A38CCA9395541F04A4C5BC6B82C081FDB4E01B9D238CEAA1C}, shouldRetrySend=false)
checkpoint.numberOfSuspends: 
    7
    8


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.100Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6918488845085291005), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-8-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:45.091Z
    2020-06-26T09:45:45.095Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=BFCAEE648A2C5B1A38CCA9395541F04A4C5BC6B82C081FDB4E01B9D238CEAA1C}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))])


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.158Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6098076158309599791), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-9-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-9-0))]
checkpoint.timestamp: 
    2020-06-26T09:45:45.095Z
    2020-06-26T09:45:45.158Z
checkpoint.sessions.SessionId(toLong=-6098076158309599791).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.160Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=-6098076158309599791).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.178Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=253EF134002B0D49DBDBA0F3B6F7CA121AC7739F44236B2BE682D59BE83A215E}), maySkipCheckpoint=false, fiber=527ADD48792A39408B7D94969EC3BE36E316B6D8A5578C3CDE55D3FE27B71172, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=6918488845085291005)), errors=[], deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=253EF134002B0D49DBDBA0F3B6F7CA121AC7739F44236B2BE682D59BE83A215E}), frozenFiber=527ADD48792A39408B7D94969EC3BE36E316B6D8A5578C3CDE55D3FE27B71172), errorState=Clean, numberOfSuspends=9), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-9-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-9-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-9-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:45:45.158Z
    2020-06-26T09:45:45.173Z
checkpoint.flowState.frozenFiber.hash: 
    6A22F5D3EA2368C79CC0AEE6A3BA53425B67F1B8E6F6CB7B8BD691F03A4049F5
    527ADD48792A39408B7D94969EC3BE36E316B6D8A5578C3CDE55D3FE27B71172
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=253EF134002B0D49DBDBA0F3B6F7CA121AC7739F44236B2BE682D59BE83A215E})
checkpoint.numberOfSuspends: 
    8
    9


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.185Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6918488845085291005), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-9-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.185Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:45.178Z
    2020-06-26T09:45:45.185Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.196Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:45.185Z
    2020-06-26T09:45:45.196Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.224Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))]), maySkipCheckpoint=false, fiber=4C116AE90D3D095EBF170B510BE9BD684DB54F09C2B0DFF34678AA6128EA8653, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=6918488845085291005)), errors=[], deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))]), frozenFiber=4C116AE90D3D095EBF170B510BE9BD684DB54F09C2B0DFF34678AA6128EA8653), errorState=Clean, numberOfSuspends=10), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:45:45.196Z
    2020-06-26T09:45:45.219Z
checkpoint.flowState.frozenFiber.hash: 
    527ADD48792A39408B7D94969EC3BE36E316B6D8A5578C3CDE55D3FE27B71172
    4C116AE90D3D095EBF170B510BE9BD684DB54F09C2B0DFF34678AA6128EA8653
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=253EF134002B0D49DBDBA0F3B6F7CA121AC7739F44236B2BE682D59BE83A215E})
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))])
checkpoint.numberOfSuspends: 
    9
    10


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.224Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.811Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6098076158309599791), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-15-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-15-0))]
checkpoint.timestamp: 
    2020-06-26T09:45:45.224Z
    2020-06-26T09:46:36.811Z
checkpoint.sessions.SessionId(toLong=-6098076158309599791).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.812Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2020-06-26T09:46:36.811Z
    2020-06-26T09:46:36.812Z
checkpoint.sessions.SessionId(toLong=-6098076158309599791).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.822Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=750FC7B450DD71E964AD943444C4CDBACAA3FC0ABD6FB028263312F11B599279}), maySkipCheckpoint=false, fiber=62CD9F093FCB44459F8FC98AD4E3D4C503E367D812C9720DDB2CD5DC2C6FC53C, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=6918488845085291005)), errors=[], deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=750FC7B450DD71E964AD943444C4CDBACAA3FC0ABD6FB028263312F11B599279}), frozenFiber=62CD9F093FCB44459F8FC98AD4E3D4C503E367D812C9720DDB2CD5DC2C6FC53C), errorState=Clean, numberOfSuspends=11), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-15-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-15-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-15-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:46:36.812Z
    2020-06-26T09:46:36.818Z
checkpoint.flowState.frozenFiber.hash: 
    4C116AE90D3D095EBF170B510BE9BD684DB54F09C2B0DFF34678AA6128EA8653
    62CD9F093FCB44459F8FC98AD4E3D4C503E367D812C9720DDB2CD5DC2C6FC53C
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=750FC7B450DD71E964AD943444C4CDBACAA3FC0ABD6FB028263312F11B599279})
checkpoint.numberOfSuspends: 
    10
    11


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.829Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6918488845085291005), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-11-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.845Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))]), maySkipCheckpoint=false, fiber=7C499FE59F468A83E55FA8E247AC69E1320D2A3439D714EC2344C412A765D2A8, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=6918488845085291005)), errors=[], deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))]), frozenFiber=7C499FE59F468A83E55FA8E247AC69E1320D2A3439D714EC2344C412A765D2A8), errorState=Clean, numberOfSuspends=12), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:46:36.823Z
    2020-06-26T09:46:36.841Z
checkpoint.flowState.frozenFiber.hash: 
    62CD9F093FCB44459F8FC98AD4E3D4C503E367D812C9720DDB2CD5DC2C6FC53C
    7C499FE59F468A83E55FA8E247AC69E1320D2A3439D714EC2344C412A765D2A8
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=750FC7B450DD71E964AD943444C4CDBACAA3FC0ABD6FB028263312F11B599279})
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))])
checkpoint.numberOfSuspends: 
    11
    12


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.846Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.884Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6098076158309599791), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-16-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-16-0))]
checkpoint.timestamp: 
    2020-06-26T09:46:36.846Z
    2020-06-26T09:46:36.884Z
checkpoint.sessions.SessionId(toLong=-6098076158309599791).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.884Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=-6098076158309599791).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.885Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:36.884Z
    2020-06-26T09:46:36.885Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.899Z
  Event: EnterSubFlow(subFlowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:36.885Z
    2020-06-26T09:46:36.899Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.900Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:36.899Z
    2020-06-26T09:46:36.900Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.918Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))]), maySkipCheckpoint=false, fiber=15E7C36E93DD96916146C0549EC172BD7F0FF839F725318A4740CF00CD6B51AC, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=6918488845085291005)), errors=[], deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))]), frozenFiber=15E7C36E93DD96916146C0549EC172BD7F0FF839F725318A4740CF00CD6B51AC), errorState=Clean, numberOfSuspends=13), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-16-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-16-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-16-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:46:36.900Z
    2020-06-26T09:46:36.912Z
checkpoint.flowState.frozenFiber.hash: 
    7C499FE59F468A83E55FA8E247AC69E1320D2A3439D714EC2344C412A765D2A8
    15E7C36E93DD96916146C0549EC172BD7F0FF839F725318A4740CF00CD6B51AC
checkpoint.numberOfSuspends: 
    12
    13


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.918Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:37.172Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6098076158309599791), payload=ErrorSessionMessage(flowException=null, errorId=-6918558264203133901)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=E--6918558264203133901--6098076158309599791)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=E--6918558264203133901--6098076158309599791))]
checkpoint.timestamp: 
    2020-06-26T09:46:36.918Z
    2020-06-26T09:46:37.171Z
checkpoint.sessions.SessionId(toLong=-6098076158309599791).errors: 
    []
    [FlowError(errorId=-6918558264203133901, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:37.172Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:37.173Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:37.171Z
    2020-06-26T09:46:37.173Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:37.173Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:37.268Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:46:37.173Z
    2020-06-26T09:46:37.240Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-6918558264203133901, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:37.274Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:37.278Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:37.240Z
    2020-06-26T09:46:37.277Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000007, flow-id=013c7761-fea6-457f-881f-ef4f19fbcd85, invocation_id=e8517d18-578d-4ef1-b468-aa06b8bacec8, invocation_timestamp=2020-06-26T09:45:44.370Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
[WARN ] 2020-06-26T09:46:37,434Z [Node thread-1] interceptors.DumpHistoryOnErrorInterceptor. - Flow [013c7761-fea6-457f-881f-ef4f19fbcd85] error [errorCode=18cklat, moreInformationAt=https://errors.corda.net/OS/4.4/18cklat] {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000007, flow-id=013c7761-fea6-457f-881f-ef4f19fbcd85, invocation_id=e8517d18-578d-4ef1-b468-aa06b8bacec8, invocation_timestamp=2020-06-26T09:45:44.370Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Dealer1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:176) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:164) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:449) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:331) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:338) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:331) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:338) ~[corda-core-4.4.jar:?]
	at com.t20worldcup.flows.MoveTokensBetweenAccounts.call(MoveTokensBetweenAccounts.kt:148) ~[?:?]
	at com.t20worldcup.flows.MoveTokensBetweenAccounts.call(MoveTokensBetweenAccounts.kt:50) ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.FutureTask.run(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) ~[?:1.8.0_251]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-06-26T09:46:37,450Z [Node thread-1] statemachine.ActionExecutorImpl. - Propagating error {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000007, flow-id=013c7761-fea6-457f-881f-ef4f19fbcd85, invocation_id=e8517d18-578d-4ef1-b468-aa06b8bacec8, invocation_timestamp=2020-06-26T09:45:44.370Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
[WARN ] 2020-06-26T09:46:37,574Z [Node thread-1] interceptors.DumpHistoryOnErrorInterceptor. - Flow [013c7761-fea6-457f-881f-ef4f19fbcd85] errored, dumping all transitions:

 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.420Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=EB24E4CBB3DF048544970606953CE85F825A147AEAFB2006C506BEBE1C4AD7F1), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@1aab1a25])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@1aab1a25])
    SignalFlowHasStarted(flowId=[013c7761-fea6-457f-881f-ef4f19fbcd85])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@1aab1a25]
    []
isAnyCheckpointPersisted: 
    false
    true


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.431Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.416Z
    2020-06-26T09:45:44.431Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.434Z
  Event: InitiateFlow(destination=O=Dealer2, L=Delhi, C=IN, wellKnownParty=O=Dealer2, L=Delhi, C=IN)
  Actions: 
    AddSessionBinding(flowId=[013c7761-fea6-457f-881f-ef4f19fbcd85], sessionId=SessionId(toLong=-1194582803971799438))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.431Z
    2020-06-26T09:45:44.434Z
checkpoint.sessions.SessionId(toLong=-1194582803971799438): 
    null
    Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014)


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.436Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.434Z
    2020-06-26T09:45:44.436Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.445Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.436Z
    2020-06-26T09:45:44.445Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.446Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.445Z
    2020-06-26T09:45:44.446Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.453Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.446Z
    2020-06-26T09:45:44.453Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.453Z
  Event: InitiateFlow(destination=O=Dealer1, L=London, C=GB, wellKnownParty=O=Dealer1, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[013c7761-fea6-457f-881f-ef4f19fbcd85], sessionId=SessionId(toLong=-5956319184361013398))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=-5956319184361013398): 
    null
    Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5956319184361013398), additionalEntropy=-7398059090681582474)


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.454Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.453Z
    2020-06-26T09:45:44.454Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.467Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=ADB45CC790F3B90D668A9F26CC23BE689CBFC04B4B8388A49714C463CD817F0D}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=1A0D3A1FD79E8A7F93B031D30CF56A1F18524802A42B4C98C5519348A1DEC2D1, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5956319184361013398), additionalEntropy=-7398059090681582474)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=ADB45CC790F3B90D668A9F26CC23BE689CBFC04B4B8388A49714C463CD817F0D}, shouldRetrySend=false), frozenFiber=1A0D3A1FD79E8A7F93B031D30CF56A1F18524802A42B4C98C5519348A1DEC2D1), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:45:44.454Z
    2020-06-26T09:45:44.463Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=EB24E4CBB3DF048544970606953CE85F825A147AEAFB2006C506BEBE1C4AD7F1)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=ADB45CC790F3B90D668A9F26CC23BE689CBFC04B4B8388A49714C463CD817F0D}, shouldRetrySend=false), frozenFiber=1A0D3A1FD79E8A7F93B031D30CF56A1F18524802A42B4C98C5519348A1DEC2D1)
checkpoint.numberOfSuspends: 
    0
    1


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.472Z
  Event: DoRemainingWork
  Actions: 
    SendInitial(destination=O=Dealer1, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-5956319184361013398), initiationEntropy=-7398059090681582474, initiatorFlowClassName=com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, appName=accounts-workflows-1.0, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--5956319184361013398--7398059090681582474-1-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.463Z
    2020-06-26T09:45:44.467Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=ADB45CC790F3B90D668A9F26CC23BE689CBFC04B4B8388A49714C463CD817F0D}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))])
checkpoint.sessions.SessionId(toLong=-5956319184361013398): 
    Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5956319184361013398), additionalEntropy=-7398059090681582474)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--5956319184361013398--7398059090681582474)


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.516Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5956319184361013398), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-8522059149993352037), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0))), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-0-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-0-0))]
checkpoint.timestamp: 
    2020-06-26T09:45:44.467Z
    2020-06-26T09:45:44.516Z
checkpoint.sessions.SessionId(toLong=-5956319184361013398): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--5956319184361013398--7398059090681582474)
    Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-8522059149993352037)), errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474)


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.516Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.543Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5956319184361013398), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-2-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-0-0))]
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-2-0))]
checkpoint.timestamp: 
    2020-06-26T09:45:44.516Z
    2020-06-26T09:45:44.543Z
checkpoint.sessions.SessionId(toLong=-5956319184361013398).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.543Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=-5956319184361013398).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.552Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.543Z
    2020-06-26T09:45:44.552Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.574Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FC072C7DF93C26E6BD533C1AD48673CD5FF1EEECFE1EF5237E77B71AC5504807}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=01C5D27EAEBF51E0425E0F47C33AC2E7B95F4601C77E7732EB730CDC7555B679, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-8522059149993352037)), errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FC072C7DF93C26E6BD533C1AD48673CD5FF1EEECFE1EF5237E77B71AC5504807}, shouldRetrySend=false), frozenFiber=01C5D27EAEBF51E0425E0F47C33AC2E7B95F4601C77E7732EB730CDC7555B679), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-2-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-2-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-2-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:45:44.552Z
    2020-06-26T09:45:44.567Z
checkpoint.flowState.frozenFiber.hash: 
    1A0D3A1FD79E8A7F93B031D30CF56A1F18524802A42B4C98C5519348A1DEC2D1
    01C5D27EAEBF51E0425E0F47C33AC2E7B95F4601C77E7732EB730CDC7555B679
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))])
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FC072C7DF93C26E6BD533C1AD48673CD5FF1EEECFE1EF5237E77B71AC5504807}, shouldRetrySend=false)
checkpoint.numberOfSuspends: 
    1
    2


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.582Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-8522059149993352037), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--5956319184361013398--7398059090681582474-2-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.567Z
    2020-06-26T09:45:44.575Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))=FC072C7DF93C26E6BD533C1AD48673CD5FF1EEECFE1EF5237E77B71AC5504807}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))])


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.641Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5956319184361013398), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-4-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-4-0))]
checkpoint.timestamp: 
    2020-06-26T09:45:44.575Z
    2020-06-26T09:45:44.641Z
checkpoint.sessions.SessionId(toLong=-5956319184361013398).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.642Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=-5956319184361013398).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.663Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.641Z
    2020-06-26T09:45:44.663Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.663Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.663Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.664Z
  Event: InitiateFlow(destination=O=Dealer1, L=London, C=GB, wellKnownParty=O=Dealer1, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[013c7761-fea6-457f-881f-ef4f19fbcd85], sessionId=SessionId(toLong=-6098076158309599791))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.663Z
    2020-06-26T09:45:44.664Z
checkpoint.sessions.SessionId(toLong=-6098076158309599791): 
    null
    Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-6098076158309599791), additionalEntropy=-5081445792796071432)


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.675Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=1253348F600D7AB22CEE22D622877100166DD087861BCC67C14208A278BE40F8}), maySkipCheckpoint=false, fiber=567D976DDA8C3E31FA44A4AEC9DD73C5637680A952A1F577BE17870FC2A31D08, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-8522059149993352037)), errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-6098076158309599791), additionalEntropy=-5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=1253348F600D7AB22CEE22D622877100166DD087861BCC67C14208A278BE40F8}), frozenFiber=567D976DDA8C3E31FA44A4AEC9DD73C5637680A952A1F577BE17870FC2A31D08), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-4-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-4-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-4-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:45:44.664Z
    2020-06-26T09:45:44.670Z
checkpoint.flowState.frozenFiber.hash: 
    01C5D27EAEBF51E0425E0F47C33AC2E7B95F4601C77E7732EB730CDC7555B679
    567D976DDA8C3E31FA44A4AEC9DD73C5637680A952A1F577BE17870FC2A31D08
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-5956319184361013398))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=1253348F600D7AB22CEE22D622877100166DD087861BCC67C14208A278BE40F8})
checkpoint.numberOfSuspends: 
    2
    3


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.683Z
  Event: DoRemainingWork
  Actions: 
    SendInitial(destination=O=Dealer1, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-6098076158309599791), initiationEntropy=-5081445792796071432, initiatorFlowClassName=com.t20worldcup.flows.MoveTokensBetweenAccounts, appName=workflows-0.1, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-3-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2020-06-26T09:45:44.670Z
    2020-06-26T09:45:44.677Z
checkpoint.sessions.SessionId(toLong=-6098076158309599791): 
    Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-6098076158309599791), additionalEntropy=-5081445792796071432)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--6098076158309599791--5081445792796071432)


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.701Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=A4D60D04914B77EDA16FD770A77B0EF1EA2B590756FBF27689E00F8F669A3141}), maySkipCheckpoint=false, fiber=35E5F496CA2BF3AE45034BFB43F770DF776D1570190133F3A8C93830E3686F8C, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-8522059149993352037)), errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=A4D60D04914B77EDA16FD770A77B0EF1EA2B590756FBF27689E00F8F669A3141}), frozenFiber=35E5F496CA2BF3AE45034BFB43F770DF776D1570190133F3A8C93830E3686F8C), errorState=Clean, numberOfSuspends=4), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:45:44.677Z
    2020-06-26T09:45:44.692Z
checkpoint.flowState.frozenFiber.hash: 
    567D976DDA8C3E31FA44A4AEC9DD73C5637680A952A1F577BE17870FC2A31D08
    35E5F496CA2BF3AE45034BFB43F770DF776D1570190133F3A8C93830E3686F8C
checkpoint.flowState.flowIORequest.sessionToMessage.FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791)).hash: 
    1253348F600D7AB22CEE22D622877100166DD087861BCC67C14208A278BE40F8
    A4D60D04914B77EDA16FD770A77B0EF1EA2B590756FBF27689E00F8F669A3141
checkpoint.numberOfSuspends: 
    3
    4


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.701Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5956319184361013398), payload=net.corda.node.services.statemachine.EndSessionMessage@6e52c2fa), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-6-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-6-0))]
checkpoint.timestamp: 
    2020-06-26T09:45:44.692Z
    2020-06-26T09:45:44.701Z
checkpoint.sessions.SessionId(toLong=-5956319184361013398).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=-8522059149993352037))
    Ended


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.702Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2020-06-26T09:45:44.701Z
    2020-06-26T09:45:44.702Z
checkpoint.sessions.SessionId(toLong=-6098076158309599791).bufferedMessages: 
    []
    [(DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-4-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes))]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.807Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendStateAndRefFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.702Z
    2020-06-26T09:45:44.807Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendStateAndRefFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.844Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=0C38E885817262EED852815950F597848493D6142CB7B93F5BDDAFAA6FF8F08E}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=9F223A7AC03C923AB4D493A1F9D16A70BE3DFB790AEDD022D0723B5F6B305A16, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiating(bufferedMessages=[(DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-4-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes))], rejectionError=null, deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendStateAndRefFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=0C38E885817262EED852815950F597848493D6142CB7B93F5BDDAFAA6FF8F08E}, shouldRetrySend=false), frozenFiber=9F223A7AC03C923AB4D493A1F9D16A70BE3DFB790AEDD022D0723B5F6B305A16), errorState=Clean, numberOfSuspends=5), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-6-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-6-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--5956319184361013398--7398059090681582474-6-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:45:44.807Z
    2020-06-26T09:45:44.841Z
checkpoint.flowState.frozenFiber.hash: 
    35E5F496CA2BF3AE45034BFB43F770DF776D1570190133F3A8C93830E3686F8C
    9F223A7AC03C923AB4D493A1F9D16A70BE3DFB790AEDD022D0723B5F6B305A16
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=A4D60D04914B77EDA16FD770A77B0EF1EA2B590756FBF27689E00F8F669A3141})
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=0C38E885817262EED852815950F597848493D6142CB7B93F5BDDAFAA6FF8F08E}, shouldRetrySend=false)
checkpoint.numberOfSuspends: 
    4
    5


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.845Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.841Z
    2020-06-26T09:45:44.845Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=0C38E885817262EED852815950F597848493D6142CB7B93F5BDDAFAA6FF8F08E}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))])
checkpoint.sessions.SessionId(toLong=-6098076158309599791).bufferedMessages: 
    [(DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-4-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes))]
    [(DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-4-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), (DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-5-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes))]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.845Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.854Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6098076158309599791), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=6918488845085291005), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1))), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-0-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6918488845085291005), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-4-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6918488845085291005), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-5-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-0-0))]
checkpoint.sessions.SessionId(toLong=-6098076158309599791): 
    Initiating(bufferedMessages=[(DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-4-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), (DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-5-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes))], rejectionError=null, deduplicationSeed=R--6098076158309599791--5081445792796071432)
    Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=6918488845085291005)), errors=[], deduplicationSeed=R--6098076158309599791--5081445792796071432)


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.855Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.927Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6098076158309599791), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-4-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-0-0))]
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-4-0))]
checkpoint.timestamp: 
    2020-06-26T09:45:44.855Z
    2020-06-26T09:45:44.927Z
checkpoint.sessions.SessionId(toLong=-6098076158309599791).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.927Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=-6098076158309599791).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.958Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=9AB29615382092BBDCDEBFFE6E1812E4760E804A4915D70867A99A019BA26D48}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=D8FECC4A4A73B5D3F5D3C5FBA81B4D161B5FAC9C6AEC7A808D44E3C5DC033F12, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=6918488845085291005)), errors=[], deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendStateAndRefFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=9AB29615382092BBDCDEBFFE6E1812E4760E804A4915D70867A99A019BA26D48}, shouldRetrySend=false), frozenFiber=D8FECC4A4A73B5D3F5D3C5FBA81B4D161B5FAC9C6AEC7A808D44E3C5DC033F12), errorState=Clean, numberOfSuspends=6), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-4-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-4-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-4-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:45:44.927Z
    2020-06-26T09:45:44.952Z
checkpoint.flowState.frozenFiber.hash: 
    9F223A7AC03C923AB4D493A1F9D16A70BE3DFB790AEDD022D0723B5F6B305A16
    D8FECC4A4A73B5D3F5D3C5FBA81B4D161B5FAC9C6AEC7A808D44E3C5DC033F12
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))])
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=9AB29615382092BBDCDEBFFE6E1812E4760E804A4915D70867A99A019BA26D48}, shouldRetrySend=false)
checkpoint.numberOfSuspends: 
    5
    6


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:44.964Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6918488845085291005), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-6-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:44.952Z
    2020-06-26T09:45:44.958Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=9AB29615382092BBDCDEBFFE6E1812E4760E804A4915D70867A99A019BA26D48}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))])


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.032Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6098076158309599791), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-6-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-6-0))]
checkpoint.timestamp: 
    2020-06-26T09:45:44.958Z
    2020-06-26T09:45:45.032Z
checkpoint.sessions.SessionId(toLong=-6098076158309599791).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.032Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=-6098076158309599791).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.033Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:45.032Z
    2020-06-26T09:45:45.033Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendStateAndRefFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.051Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=58CF5287631083AFBB858FDBA76D98CA712285BA4B94165D1961B51F02446F5D}), maySkipCheckpoint=false, fiber=8083304A13848F2BD31649CA76920DA781E9B6563126204D2DB2A43FC8B7C6DF, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=6918488845085291005)), errors=[], deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=58CF5287631083AFBB858FDBA76D98CA712285BA4B94165D1961B51F02446F5D}), frozenFiber=8083304A13848F2BD31649CA76920DA781E9B6563126204D2DB2A43FC8B7C6DF), errorState=Clean, numberOfSuspends=7), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-6-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-6-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-6-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:45:45.033Z
    2020-06-26T09:45:45.041Z
checkpoint.flowState.frozenFiber.hash: 
    D8FECC4A4A73B5D3F5D3C5FBA81B4D161B5FAC9C6AEC7A808D44E3C5DC033F12
    8083304A13848F2BD31649CA76920DA781E9B6563126204D2DB2A43FC8B7C6DF
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=58CF5287631083AFBB858FDBA76D98CA712285BA4B94165D1961B51F02446F5D})
checkpoint.numberOfSuspends: 
    6
    7


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.069Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6918488845085291005), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-7-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.074Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:45.051Z
    2020-06-26T09:45:45.074Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.094Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=BFCAEE648A2C5B1A38CCA9395541F04A4C5BC6B82C081FDB4E01B9D238CEAA1C}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=6A22F5D3EA2368C79CC0AEE6A3BA53425B67F1B8E6F6CB7B8BD691F03A4049F5, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=6918488845085291005)), errors=[], deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=BFCAEE648A2C5B1A38CCA9395541F04A4C5BC6B82C081FDB4E01B9D238CEAA1C}, shouldRetrySend=false), frozenFiber=6A22F5D3EA2368C79CC0AEE6A3BA53425B67F1B8E6F6CB7B8BD691F03A4049F5), errorState=Clean, numberOfSuspends=8), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:45:45.074Z
    2020-06-26T09:45:45.091Z
checkpoint.flowState.frozenFiber.hash: 
    8083304A13848F2BD31649CA76920DA781E9B6563126204D2DB2A43FC8B7C6DF
    6A22F5D3EA2368C79CC0AEE6A3BA53425B67F1B8E6F6CB7B8BD691F03A4049F5
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=58CF5287631083AFBB858FDBA76D98CA712285BA4B94165D1961B51F02446F5D})
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=BFCAEE648A2C5B1A38CCA9395541F04A4C5BC6B82C081FDB4E01B9D238CEAA1C}, shouldRetrySend=false)
checkpoint.numberOfSuspends: 
    7
    8


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.100Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6918488845085291005), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-8-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:45.091Z
    2020-06-26T09:45:45.095Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=BFCAEE648A2C5B1A38CCA9395541F04A4C5BC6B82C081FDB4E01B9D238CEAA1C}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))])


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.158Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6098076158309599791), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-9-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-9-0))]
checkpoint.timestamp: 
    2020-06-26T09:45:45.095Z
    2020-06-26T09:45:45.158Z
checkpoint.sessions.SessionId(toLong=-6098076158309599791).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.160Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=-6098076158309599791).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.178Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=253EF134002B0D49DBDBA0F3B6F7CA121AC7739F44236B2BE682D59BE83A215E}), maySkipCheckpoint=false, fiber=527ADD48792A39408B7D94969EC3BE36E316B6D8A5578C3CDE55D3FE27B71172, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=6918488845085291005)), errors=[], deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=253EF134002B0D49DBDBA0F3B6F7CA121AC7739F44236B2BE682D59BE83A215E}), frozenFiber=527ADD48792A39408B7D94969EC3BE36E316B6D8A5578C3CDE55D3FE27B71172), errorState=Clean, numberOfSuspends=9), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-9-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-9-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-9-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:45:45.158Z
    2020-06-26T09:45:45.173Z
checkpoint.flowState.frozenFiber.hash: 
    6A22F5D3EA2368C79CC0AEE6A3BA53425B67F1B8E6F6CB7B8BD691F03A4049F5
    527ADD48792A39408B7D94969EC3BE36E316B6D8A5578C3CDE55D3FE27B71172
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=253EF134002B0D49DBDBA0F3B6F7CA121AC7739F44236B2BE682D59BE83A215E})
checkpoint.numberOfSuspends: 
    8
    9


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.185Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6918488845085291005), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-9-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.185Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:45.178Z
    2020-06-26T09:45:45.185Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.196Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:45:45.185Z
    2020-06-26T09:45:45.196Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.224Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))]), maySkipCheckpoint=false, fiber=4C116AE90D3D095EBF170B510BE9BD684DB54F09C2B0DFF34678AA6128EA8653, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=6918488845085291005)), errors=[], deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))]), frozenFiber=4C116AE90D3D095EBF170B510BE9BD684DB54F09C2B0DFF34678AA6128EA8653), errorState=Clean, numberOfSuspends=10), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:45:45.196Z
    2020-06-26T09:45:45.219Z
checkpoint.flowState.frozenFiber.hash: 
    527ADD48792A39408B7D94969EC3BE36E316B6D8A5578C3CDE55D3FE27B71172
    4C116AE90D3D095EBF170B510BE9BD684DB54F09C2B0DFF34678AA6128EA8653
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=253EF134002B0D49DBDBA0F3B6F7CA121AC7739F44236B2BE682D59BE83A215E})
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))])
checkpoint.numberOfSuspends: 
    9
    10


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:45:45.224Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.811Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6098076158309599791), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-15-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-15-0))]
checkpoint.timestamp: 
    2020-06-26T09:45:45.224Z
    2020-06-26T09:46:36.811Z
checkpoint.sessions.SessionId(toLong=-6098076158309599791).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.812Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2020-06-26T09:46:36.811Z
    2020-06-26T09:46:36.812Z
checkpoint.sessions.SessionId(toLong=-6098076158309599791).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.822Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=750FC7B450DD71E964AD943444C4CDBACAA3FC0ABD6FB028263312F11B599279}), maySkipCheckpoint=false, fiber=62CD9F093FCB44459F8FC98AD4E3D4C503E367D812C9720DDB2CD5DC2C6FC53C, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=6918488845085291005)), errors=[], deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=750FC7B450DD71E964AD943444C4CDBACAA3FC0ABD6FB028263312F11B599279}), frozenFiber=62CD9F093FCB44459F8FC98AD4E3D4C503E367D812C9720DDB2CD5DC2C6FC53C), errorState=Clean, numberOfSuspends=11), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-15-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-15-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-15-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:46:36.812Z
    2020-06-26T09:46:36.818Z
checkpoint.flowState.frozenFiber.hash: 
    4C116AE90D3D095EBF170B510BE9BD684DB54F09C2B0DFF34678AA6128EA8653
    62CD9F093FCB44459F8FC98AD4E3D4C503E367D812C9720DDB2CD5DC2C6FC53C
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=750FC7B450DD71E964AD943444C4CDBACAA3FC0ABD6FB028263312F11B599279})
checkpoint.numberOfSuspends: 
    10
    11


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.829Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6918488845085291005), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--6098076158309599791--5081445792796071432-11-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.845Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))]), maySkipCheckpoint=false, fiber=7C499FE59F468A83E55FA8E247AC69E1320D2A3439D714EC2344C412A765D2A8, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=6918488845085291005)), errors=[], deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))]), frozenFiber=7C499FE59F468A83E55FA8E247AC69E1320D2A3439D714EC2344C412A765D2A8), errorState=Clean, numberOfSuspends=12), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:46:36.823Z
    2020-06-26T09:46:36.841Z
checkpoint.flowState.frozenFiber.hash: 
    62CD9F093FCB44459F8FC98AD4E3D4C503E367D812C9720DDB2CD5DC2C6FC53C
    7C499FE59F468A83E55FA8E247AC69E1320D2A3439D714EC2344C412A765D2A8
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))=750FC7B450DD71E964AD943444C4CDBACAA3FC0ABD6FB028263312F11B599279})
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))])
checkpoint.numberOfSuspends: 
    11
    12


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.846Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.884Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6098076158309599791), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-16-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-16-0))]
checkpoint.timestamp: 
    2020-06-26T09:46:36.846Z
    2020-06-26T09:46:36.884Z
checkpoint.sessions.SessionId(toLong=-6098076158309599791).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.884Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=-6098076158309599791).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.885Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:36.884Z
    2020-06-26T09:46:36.885Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.899Z
  Event: EnterSubFlow(subFlowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:36.885Z
    2020-06-26T09:46:36.899Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.900Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:36.899Z
    2020-06-26T09:46:36.900Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.918Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))]), maySkipCheckpoint=false, fiber=15E7C36E93DD96916146C0549EC172BD7F0FF839F725318A4740CF00CD6B51AC, )
  Actions: 
    PersistCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=6918488845085291005)), errors=[], deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))]), frozenFiber=15E7C36E93DD96916146C0549EC172BD7F0FF839F725318A4740CF00CD6B51AC), errorState=Clean, numberOfSuspends=13), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-16-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-16-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D--6098076158309599791--5081445792796071432-16-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:46:36.900Z
    2020-06-26T09:46:36.912Z
checkpoint.flowState.frozenFiber.hash: 
    7C499FE59F468A83E55FA8E247AC69E1320D2A3439D714EC2344C412A765D2A8
    15E7C36E93DD96916146C0549EC172BD7F0FF839F725318A4740CF00CD6B51AC
checkpoint.numberOfSuspends: 
    12
    13


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:36.918Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:37.172Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6098076158309599791), payload=ErrorSessionMessage(flowException=null, errorId=-6918558264203133901)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=E--6918558264203133901--6098076158309599791)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=E--6918558264203133901--6098076158309599791))]
checkpoint.timestamp: 
    2020-06-26T09:46:36.918Z
    2020-06-26T09:46:37.171Z
checkpoint.sessions.SessionId(toLong=-6098076158309599791).errors: 
    []
    [FlowError(errorId=-6918558264203133901, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:37.172Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:37.173Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:37.171Z
    2020-06-26T09:46:37.173Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:37.173Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:37.268Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:46:37.173Z
    2020-06-26T09:46:37.240Z
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-6918558264203133901, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:37.274Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:37.278Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:37.240Z
    2020-06-26T09:46:37.277Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [013c7761-fea6-457f-881f-ef4f19fbcd85] ---
  Timestamp: 2020-06-26T09:46:37.524Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-6918558264203133901)], sessions=[Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474)], senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a)
    CreateTransaction
    RemoveCheckpoint(id=[013c7761-fea6-457f-881f-ef4f19fbcd85])
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=E--6918558264203133901--6098076158309599791))])
    ReleaseSoftLocks(uuid=013c7761-fea6-457f-881f-ef4f19fbcd85)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=E--6918558264203133901--6098076158309599791))])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-1194582803971799438), SessionId(toLong=-5956319184361013398), SessionId(toLong=-6098076158309599791)])
    RemoveFlow(flowId=[013c7761-fea6-457f-881f-ef4f19fbcd85], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-6918558264203133901, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=e8517d18-578d-4ef1-b468-aa06b8bacec8, timestamp: 2020-06-26T09:45:44.370Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-1194582803971799438)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-1194582803971799438), additionalEntropy=1282027817284902014), SessionId(toLong=-5956319184361013398)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R--5956319184361013398--7398059090681582474), SessionId(toLong=-6098076158309599791)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=6918488845085291005)), errors=[FlowError(errorId=-6918558264203133901, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], deduplicationSeed=R--6098076158309599791--5081445792796071432)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6098076158309599791))]), frozenFiber=15E7C36E93DD96916146C0549EC172BD7F0FF839F725318A4740CF00CD6B51AC), errorState=Errored(errors=[FlowError(errorId=-6918558264203133901, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=1, propagating=true), numberOfSuspends=13), flowLogic=com.t20worldcup.flows.MoveTokensBetweenAccounts@7f6c51ce, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
  Continuation: Abort
  Diff between previous and next state:
isRemoved: 
    false
    true
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=E--6918558264203133901--6098076158309599791))]
    []
checkpoint.timestamp: 
    2020-06-26T09:46:37.277Z
    2020-06-26T09:46:37.435Z
checkpoint.errorState.propagatedIndex: 
    0
    1
 {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000007, flow-id=013c7761-fea6-457f-881f-ef4f19fbcd85, invocation_id=e8517d18-578d-4ef1-b468-aa06b8bacec8, invocation_timestamp=2020-06-26T09:45:44.370Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
[WARN ] 2020-06-26T09:46:37,574Z [Node thread-1] interceptors.DumpHistoryOnErrorInterceptor. - Flow [013c7761-fea6-457f-881f-ef4f19fbcd85] error [errorCode=18cklat, moreInformationAt=https://errors.corda.net/OS/4.4/18cklat] {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000007, flow-id=013c7761-fea6-457f-881f-ef4f19fbcd85, invocation_id=e8517d18-578d-4ef1-b468-aa06b8bacec8, invocation_timestamp=2020-06-26T09:45:44.370Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Dealer1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:176) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:164) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:449) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:331) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:338) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:331) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:338) ~[corda-core-4.4.jar:?]
	at com.t20worldcup.flows.MoveTokensBetweenAccounts.call(MoveTokensBetweenAccounts.kt:148) ~[?:?]
	at com.t20worldcup.flows.MoveTokensBetweenAccounts.call(MoveTokensBetweenAccounts.kt:50) ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.FutureTask.run(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) ~[?:1.8.0_251]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-06-26T09:46:48,401Z [pool-10-thread-3] shell.FlowShellCommand. - Executing command "flow start MoveTokensBetweenAccounts buyerAccountName: buyer3, sellerAccountName: buyer1, costOfTicket: 5, currency: USD",
[INFO ] 2020-06-26T09:46:48,484Z [Node thread-1] identity.PersistentIdentityService. - Linking: 170409BD1A0A48B817CB845D4236C213D14200D5DE3F7C4FBBAAC06AA15CDAA0 to O=Dealer2, L=Delhi, C=IN {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000011, flow-id=4f4551fe-1078-47b8-9344-4a77fbf463fa, invocation_id=6d7fbce1-739e-4d5f-8868-90988bc301bf, invocation_timestamp=2020-06-26T09:46:48.455Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
[INFO ] 2020-06-26T09:46:48,653Z [Node thread-1] identity.PersistentIdentityService. - Linking: 9BD04C401D29462EBD42D1B00B8C3E071E8280CB99190A48C38101D419AB566C to O=Dealer1, L=London, C=GB {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000011, flow-id=4f4551fe-1078-47b8-9344-4a77fbf463fa, invocation_id=6d7fbce1-739e-4d5f-8868-90988bc301bf, invocation_timestamp=2020-06-26T09:46:48.455Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
[INFO ] 2020-06-26T09:46:49,029Z [Node thread-1] identity.PersistentIdentityService. - An existing entry for DL2Yqx18G4rh7yaVyhBdfanPXHviifKXAJseV6ivRjp2k7 already exists. {fiber-id=10000012, flow-id=20ebe366-4e19-4c4b-981f-ce2e44d16014, invocation_id=2c9d3e33-0149-4959-96bf-63111906cf40, invocation_timestamp=2020-06-26T09:46:48.995Z, origin=O=Dealer1, L=London, C=GB, session_id=2c9d3e33-0149-4959-96bf-63111906cf40, session_timestamp=2020-06-26T09:46:48.995Z, thread-id=361}
[INFO ] 2020-06-26T09:46:49,173Z [Node thread-1] identity.PersistentIdentityService. - Linking: 5824987EAD77D45124FDF272CA529D06E1CF3AC1C815DD8F36243CFA937D9DCA to O=Dealer2, L=Delhi, C=IN {fiber-id=10000013, flow-id=987fce38-f7b3-4b9e-88e7-c2d4f8af18c3, invocation_id=48d6860c-ceab-4a6d-a16c-c95ca377ba87, invocation_timestamp=2020-06-26T09:46:49.091Z, origin=O=Dealer1, L=London, C=GB, session_id=48d6860c-ceab-4a6d-a16c-c95ca377ba87, session_timestamp=2020-06-26T09:46:49.091Z, thread-id=361}
[INFO ] 2020-06-26T09:47:04,699Z [nioEventLoopGroup-2-4] engine.ConnectionStateMachine. - Transport Error [id: 0x0dc603a8, L:/127.0.0.1:55077 - R:localhost/127.0.0.1:10005] {conn=[id: 0x0dc603a8, L:/127.0.0.1:55077 - R:localhost/127.0.0.1:10005], localLegalName=O=Dealer2, L=Delhi, C=IN, remoteLegalName=O=Dealer1, L=London, C=GB, serverMode=false}
[INFO ] 2020-06-26T09:47:04,699Z [nioEventLoopGroup-2-4] engine.ConnectionStateMachine. - Error: connection aborted {conn=[id: 0x0dc603a8, L:/127.0.0.1:55077 - R:localhost/127.0.0.1:10005], localLegalName=O=Dealer2, L=Delhi, C=IN, remoteLegalName=O=Dealer1, L=London, C=GB, serverMode=false}
[INFO ] 2020-06-26T09:47:04,699Z [nioEventLoopGroup-2-4] engine.ConnectionStateMachine. - Connection unbound [id: 0x0dc603a8, L:/127.0.0.1:55077 - R:localhost/127.0.0.1:10005] {conn=[id: 0x0dc603a8, L:/127.0.0.1:55077 - R:localhost/127.0.0.1:10005], localLegalName=O=Dealer2, L=Delhi, C=IN, remoteLegalName=O=Dealer1, L=London, C=GB, serverMode=false}
[INFO ] 2020-06-26T09:47:04,700Z [nioEventLoopGroup-2-4] netty.AMQPClient. - Disconnected from localhost:10005
[INFO ] 2020-06-26T09:47:04,700Z [nioEventLoopGroup-2-4] netty.AMQPChannelHandler. - Closed client connection 0dc603a8 from localhost/127.0.0.1:10005 to /127.0.0.1:55077 {allowedRemoteLegalNames=O=Dealer1, L=London, C=GB, localCert=O=Dealer2, L=Delhi, C=IN, remoteAddress=localhost/127.0.0.1:10005, remoteCert=O=Dealer1, L=London, C=GB, serverMode=false}
[INFO ] 2020-06-26T09:47:04,700Z [nioEventLoopGroup-2-4] bridging.AMQPBridgeManager$AMQPBridge. - Bridge Disconnected {legalNames=O=Dealer1, L=London, C=GB, maxMessageSize=10485760, queueName=internal.peers.DLGM15yPUycAkKBhg84fJrPuWFcGgJd3TY1ovwmS1oohuh, targets=localhost:10005}
[INFO ] 2020-06-26T09:47:05,702Z [nioEventLoopGroup-2-5] netty.AMQPClient. - Retry connect to localhost:10005
[INFO ] 2020-06-26T09:47:05,705Z [nioEventLoopGroup-2-6] netty.AMQPClient. - Connected to localhost:10005
[INFO ] 2020-06-26T09:47:05,706Z [nioEventLoopGroup-2-6] netty.AMQPChannelHandler. - New client connection 653d4369 from localhost/127.0.0.1:10005 to /127.0.0.1:55090 {allowedRemoteLegalNames=O=Dealer1, L=London, C=GB, localCert=null, remoteAddress=localhost/127.0.0.1:10005, remoteCert=null, serverMode=false}
[WARN ] 2020-06-26T09:47:25,707Z [nioEventLoopGroup-2-6] netty.AMQPChannelHandler. - SSL Handshake timed out {allowedRemoteLegalNames=O=Dealer1, L=London, C=GB, localCert=null, remoteAddress=localhost/127.0.0.1:10005, remoteCert=null, serverMode=false}
[ERROR] 2020-06-26T09:47:25,708Z [nioEventLoopGroup-2-6] netty.AMQPChannelHandler. - Handshake failure handshake timed out {allowedRemoteLegalNames=O=Dealer1, L=London, C=GB, localCert=null, remoteAddress=localhost/127.0.0.1:10005, remoteCert=null, serverMode=false}
[INFO ] 2020-06-26T09:47:25,708Z [nioEventLoopGroup-2-6] netty.AMQPClient. - Disconnected from localhost:10005
[INFO ] 2020-06-26T09:47:25,709Z [nioEventLoopGroup-2-6] netty.AMQPChannelHandler. - Closed client connection 653d4369 from localhost/127.0.0.1:10005 to /127.0.0.1:55090 {allowedRemoteLegalNames=O=Dealer1, L=London, C=GB, localCert=null, remoteAddress=localhost/127.0.0.1:10005, remoteCert=null, serverMode=false}
[INFO ] 2020-06-26T09:47:25,709Z [nioEventLoopGroup-2-6] bridging.AMQPBridgeManager$AMQPBridge. - Bridge Disconnected {legalNames=O=Dealer1, L=London, C=GB, maxMessageSize=10485760, queueName=internal.peers.DLGM15yPUycAkKBhg84fJrPuWFcGgJd3TY1ovwmS1oohuh, targets=localhost:10005}
[INFO ] 2020-06-26T09:47:27,709Z [nioEventLoopGroup-2-7] netty.AMQPClient. - Retry connect to localhost:10005
[INFO ] 2020-06-26T09:47:27,717Z [nioEventLoopGroup-2-8] netty.AMQPClient. - Connected to localhost:10005
[INFO ] 2020-06-26T09:47:27,718Z [nioEventLoopGroup-2-8] netty.AMQPChannelHandler. - New client connection 27a0c490 from localhost/127.0.0.1:10005 to /127.0.0.1:55104 {allowedRemoteLegalNames=O=Dealer1, L=London, C=GB, localCert=null, remoteAddress=localhost/127.0.0.1:10005, remoteCert=null, serverMode=false}
[INFO ] 2020-06-26T09:47:35,207Z [nioEventLoopGroup-2-8] netty.LoggingTrustManagerWrapper. - Check Server Certpath:
  C=GB,L=London,O=Dealer1[C92A1B9E4968A97B77111008A91A77FFFD4A7BDD] issued by C=GB,L=London,O=Dealer1[14AE1C7E08ECF53D8E307CA9545877BFED124361]
  C=GB,L=London,O=Dealer1[14AE1C7E08ECF53D8E307CA9545877BFED124361] issued by C=US,L=New York,OU=Corda,O=R3 HoldCo LLC,CN=Corda Doorman CA[EBEE2E30152940AE19981ED86FE37D7F07A2C213]
  C=US,L=New York,OU=Corda,O=R3 HoldCo LLC,CN=Corda Doorman CA[EBEE2E30152940AE19981ED86FE37D7F07A2C213] issued by CN=Corda Node Root CA,O=R3,OU=corda,L=London,C=UK[7CAEA9DFB948012B13890B9AE645851C39170773]
  CN=Corda Node Root CA,O=R3,OU=corda,L=London,C=UK[7CAEA9DFB948012B13890B9AE645851C39170773] issued by CN=Corda Node Root CA,O=R3,OU=corda,L=London,C=UK[null]
[INFO ] 2020-06-26T09:47:35,236Z [nioEventLoopGroup-2-8] netty.AMQPChannelHandler. - Handshake completed with subject: O=Dealer1, L=London, C=GB {allowedRemoteLegalNames=O=Dealer1, L=London, C=GB, localCert=O=Dealer2, L=Delhi, C=IN, remoteAddress=localhost/127.0.0.1:10005, remoteCert=O=Dealer1, L=London, C=GB, serverMode=false}
[INFO ] 2020-06-26T09:47:35,237Z [nioEventLoopGroup-2-8] bridging.AMQPBridgeManager$AMQPBridge. - Bridge Connected {legalNames=O=Dealer1, L=London, C=GB, maxMessageSize=10485760, queueName=internal.peers.DLGM15yPUycAkKBhg84fJrPuWFcGgJd3TY1ovwmS1oohuh, targets=localhost:10005}
[INFO ] 2020-06-26T09:47:35,255Z [nioEventLoopGroup-2-8] engine.ConnectionStateMachine. - Connection local open [id: 0x27a0c490, L:/127.0.0.1:55104 - R:localhost/127.0.0.1:10005] {conn=[id: 0x27a0c490, L:/127.0.0.1:55104 - R:localhost/127.0.0.1:10005], localLegalName=O=Dealer2, L=Delhi, C=IN, remoteLegalName=O=Dealer1, L=London, C=GB, serverMode=false}
[INFO ] 2020-06-26T09:47:38,482Z [Node thread-1] corda.flow. - Flow raised an error: Counter-flow errored. Sending it to flow hospital to be triaged. {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000011, flow-id=4f4551fe-1078-47b8-9344-4a77fbf463fa, invocation_id=6d7fbce1-739e-4d5f-8868-90988bc301bf, invocation_timestamp=2020-06-26T09:46:48.455Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
[INFO ] 2020-06-26T09:47:38,484Z [Node thread-1] statemachine.StaffedFlowHospital. - Flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-5134673326446754320)), errors=[FlowError(errorId=-3267875398831106038, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], deduplicationSeed=R-1968028036458822334-6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))]), frozenFiber=9562FE5D22EEEAB4F9543CD4D743A3F49A1485E6E16AD2E9646B5DCDA3055160), errorState=Clean, numberOfSuspends=12), flowLogic=com.t20worldcup.flows.MoveTokensBetweenAccounts@4a341cba, pendingDeduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=E--3267875398831106038-1968028036458822334))], isFlowResumed=true, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a) {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000011, flow-id=4f4551fe-1078-47b8-9344-4a77fbf463fa, invocation_id=6d7fbce1-739e-4d5f-8868-90988bc301bf, invocation_timestamp=2020-06-26T09:46:48.455Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
[INFO ] 2020-06-26T09:47:38,487Z [Node thread-1] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000011, flow-id=4f4551fe-1078-47b8-9344-4a77fbf463fa, invocation_id=6d7fbce1-739e-4d5f-8868-90988bc301bf, invocation_timestamp=2020-06-26T09:46:48.455Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Dealer1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:176) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:164) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:449) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:331) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:338) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:331) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:338) ~[corda-core-4.4.jar:?]
	at com.t20worldcup.flows.MoveTokensBetweenAccounts.call(MoveTokensBetweenAccounts.kt:148) ~[?:?]
	at com.t20worldcup.flows.MoveTokensBetweenAccounts.call(MoveTokensBetweenAccounts.kt:50) ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.FutureTask.run(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) ~[?:1.8.0_251]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[INFO ] 2020-06-26T09:47:38,487Z [Node thread-1] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000011, flow-id=4f4551fe-1078-47b8-9344-4a77fbf463fa, invocation_id=6d7fbce1-739e-4d5f-8868-90988bc301bf, invocation_timestamp=2020-06-26T09:46:48.455Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Dealer1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:176) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:164) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:449) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:331) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:338) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:331) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:338) ~[corda-core-4.4.jar:?]
	at com.t20worldcup.flows.MoveTokensBetweenAccounts.call(MoveTokensBetweenAccounts.kt:148) ~[?:?]
	at com.t20worldcup.flows.MoveTokensBetweenAccounts.call(MoveTokensBetweenAccounts.kt:50) ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.FutureTask.run(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) ~[?:1.8.0_251]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-06-26T09:47:38,536Z [Node thread-1] interceptors.DumpHistoryOnErrorInterceptor. - Flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] errored, dumping all transitions:

 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.471Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=2E26996BD6D3BA8321F460A58E3F0D91A8B9C286FD79E32A1DEFAAAAC4AF9974), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@a1b3751])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@a1b3751])
    SignalFlowHasStarted(flowId=[4f4551fe-1078-47b8-9344-4a77fbf463fa])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@a1b3751]
    []
isAnyCheckpointPersisted: 
    false
    true


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.481Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.459Z
    2020-06-26T09:46:48.481Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.482Z
  Event: InitiateFlow(destination=O=Dealer2, L=Delhi, C=IN, wellKnownParty=O=Dealer2, L=Delhi, C=IN)
  Actions: 
    AddSessionBinding(flowId=[4f4551fe-1078-47b8-9344-4a77fbf463fa], sessionId=SessionId(toLong=-2097286078881088472))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.481Z
    2020-06-26T09:46:48.482Z
checkpoint.sessions.SessionId(toLong=-2097286078881088472): 
    null
    Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184)


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.483Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.482Z
    2020-06-26T09:46:48.483Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.486Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.483Z
    2020-06-26T09:46:48.486Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.486Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.494Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.486Z
    2020-06-26T09:46:48.494Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.495Z
  Event: InitiateFlow(destination=O=Dealer1, L=London, C=GB, wellKnownParty=O=Dealer1, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[4f4551fe-1078-47b8-9344-4a77fbf463fa], sessionId=SessionId(toLong=6715046530186455525))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.494Z
    2020-06-26T09:46:48.495Z
checkpoint.sessions.SessionId(toLong=6715046530186455525): 
    null
    Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=6715046530186455525), additionalEntropy=-8843764790742969077)


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.495Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.508Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=ADB45CC790F3B90D668A9F26CC23BE689CBFC04B4B8388A49714C463CD817F0D}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=421FB034C7D79347B3A2A12682B519345A93922D09704DC4E2DFCEAD73A85F59, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=6715046530186455525), additionalEntropy=-8843764790742969077)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=ADB45CC790F3B90D668A9F26CC23BE689CBFC04B4B8388A49714C463CD817F0D}, shouldRetrySend=false), frozenFiber=421FB034C7D79347B3A2A12682B519345A93922D09704DC4E2DFCEAD73A85F59), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:46:48.495Z
    2020-06-26T09:46:48.504Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=2E26996BD6D3BA8321F460A58E3F0D91A8B9C286FD79E32A1DEFAAAAC4AF9974)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=ADB45CC790F3B90D668A9F26CC23BE689CBFC04B4B8388A49714C463CD817F0D}, shouldRetrySend=false), frozenFiber=421FB034C7D79347B3A2A12682B519345A93922D09704DC4E2DFCEAD73A85F59)
checkpoint.numberOfSuspends: 
    0
    1


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.514Z
  Event: DoRemainingWork
  Actions: 
    SendInitial(destination=O=Dealer1, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=6715046530186455525), initiationEntropy=-8843764790742969077, initiatorFlowClassName=com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, appName=accounts-workflows-1.0, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-6715046530186455525--8843764790742969077-1-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.504Z
    2020-06-26T09:46:48.508Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=ADB45CC790F3B90D668A9F26CC23BE689CBFC04B4B8388A49714C463CD817F0D}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))])
checkpoint.sessions.SessionId(toLong=6715046530186455525): 
    Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=6715046530186455525), additionalEntropy=-8843764790742969077)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-6715046530186455525--8843764790742969077)


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.580Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6715046530186455525), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-4620415777934936023), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0))), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-0-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-0-0))]
checkpoint.timestamp: 
    2020-06-26T09:46:48.508Z
    2020-06-26T09:46:48.580Z
checkpoint.sessions.SessionId(toLong=6715046530186455525): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-6715046530186455525--8843764790742969077)
    Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4620415777934936023)), errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077)


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.580Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.596Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6715046530186455525), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-2-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-0-0))]
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-2-0))]
checkpoint.timestamp: 
    2020-06-26T09:46:48.580Z
    2020-06-26T09:46:48.596Z
checkpoint.sessions.SessionId(toLong=6715046530186455525).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.596Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=6715046530186455525).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.597Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.596Z
    2020-06-26T09:46:48.597Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.609Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=12512AB6001B54BEF51BF7F6E007A8840A0552C25BC3FC829831655657EA4FF6}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=AF7A5E6F85F40D4D07CCB4CA0A67E805840A6C12FBE56504619D997D9D9574AF, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4620415777934936023)), errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=12512AB6001B54BEF51BF7F6E007A8840A0552C25BC3FC829831655657EA4FF6}, shouldRetrySend=false), frozenFiber=AF7A5E6F85F40D4D07CCB4CA0A67E805840A6C12FBE56504619D997D9D9574AF), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-2-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-2-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-2-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:46:48.597Z
    2020-06-26T09:46:48.604Z
checkpoint.flowState.frozenFiber.hash: 
    421FB034C7D79347B3A2A12682B519345A93922D09704DC4E2DFCEAD73A85F59
    AF7A5E6F85F40D4D07CCB4CA0A67E805840A6C12FBE56504619D997D9D9574AF
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))])
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=12512AB6001B54BEF51BF7F6E007A8840A0552C25BC3FC829831655657EA4FF6}, shouldRetrySend=false)
checkpoint.numberOfSuspends: 
    1
    2


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.615Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4620415777934936023), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-6715046530186455525--8843764790742969077-2-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.604Z
    2020-06-26T09:46:48.609Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=12512AB6001B54BEF51BF7F6E007A8840A0552C25BC3FC829831655657EA4FF6}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))])


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.647Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6715046530186455525), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-4-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-4-0))]
checkpoint.timestamp: 
    2020-06-26T09:46:48.609Z
    2020-06-26T09:46:48.647Z
checkpoint.sessions.SessionId(toLong=6715046530186455525).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.647Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=6715046530186455525).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.656Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.647Z
    2020-06-26T09:46:48.656Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.658Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.656Z
    2020-06-26T09:46:48.658Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.658Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.659Z
  Event: InitiateFlow(destination=O=Dealer1, L=London, C=GB, wellKnownParty=O=Dealer1, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[4f4551fe-1078-47b8-9344-4a77fbf463fa], sessionId=SessionId(toLong=1968028036458822334))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=1968028036458822334): 
    null
    Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1968028036458822334), additionalEntropy=6299100686098615915)


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.670Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=1253348F600D7AB22CEE22D622877100166DD087861BCC67C14208A278BE40F8}), maySkipCheckpoint=false, fiber=613889392F3D87302303AFBF8BC67A4B801609FECECF9CF02368D6DD7158CD37, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4620415777934936023)), errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1968028036458822334), additionalEntropy=6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=1253348F600D7AB22CEE22D622877100166DD087861BCC67C14208A278BE40F8}), frozenFiber=613889392F3D87302303AFBF8BC67A4B801609FECECF9CF02368D6DD7158CD37), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-4-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-4-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-4-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:46:48.658Z
    2020-06-26T09:46:48.665Z
checkpoint.flowState.frozenFiber.hash: 
    AF7A5E6F85F40D4D07CCB4CA0A67E805840A6C12FBE56504619D997D9D9574AF
    613889392F3D87302303AFBF8BC67A4B801609FECECF9CF02368D6DD7158CD37
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=1253348F600D7AB22CEE22D622877100166DD087861BCC67C14208A278BE40F8})
checkpoint.numberOfSuspends: 
    2
    3


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.674Z
  Event: DoRemainingWork
  Actions: 
    SendInitial(destination=O=Dealer1, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=1968028036458822334), initiationEntropy=6299100686098615915, initiatorFlowClassName=com.t20worldcup.flows.MoveTokensBetweenAccounts, appName=workflows-0.1, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-3-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2020-06-26T09:46:48.665Z
    2020-06-26T09:46:48.670Z
checkpoint.sessions.SessionId(toLong=1968028036458822334): 
    Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1968028036458822334), additionalEntropy=6299100686098615915)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-1968028036458822334-6299100686098615915)


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.680Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=A4D60D04914B77EDA16FD770A77B0EF1EA2B590756FBF27689E00F8F669A3141}), maySkipCheckpoint=false, fiber=613345268CE816D84AEE8234C5942E932FE2E8F7EC4A496898F6C084A7F5F851, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4620415777934936023)), errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-1968028036458822334-6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=A4D60D04914B77EDA16FD770A77B0EF1EA2B590756FBF27689E00F8F669A3141}), frozenFiber=613345268CE816D84AEE8234C5942E932FE2E8F7EC4A496898F6C084A7F5F851), errorState=Clean, numberOfSuspends=4), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:46:48.670Z
    2020-06-26T09:46:48.677Z
checkpoint.flowState.frozenFiber.hash: 
    613889392F3D87302303AFBF8BC67A4B801609FECECF9CF02368D6DD7158CD37
    613345268CE816D84AEE8234C5942E932FE2E8F7EC4A496898F6C084A7F5F851
checkpoint.flowState.flowIORequest.sessionToMessage.FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334)).hash: 
    1253348F600D7AB22CEE22D622877100166DD087861BCC67C14208A278BE40F8
    A4D60D04914B77EDA16FD770A77B0EF1EA2B590756FBF27689E00F8F669A3141
checkpoint.numberOfSuspends: 
    3
    4


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.680Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6715046530186455525), payload=net.corda.node.services.statemachine.EndSessionMessage@6e52c2fa), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-6-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-6-0))]
checkpoint.timestamp: 
    2020-06-26T09:46:48.677Z
    2020-06-26T09:46:48.680Z
checkpoint.sessions.SessionId(toLong=6715046530186455525).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=-4620415777934936023))
    Ended


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.680Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=1968028036458822334).bufferedMessages: 
    []
    [(DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-4-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes))]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.692Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendStateAndRefFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.680Z
    2020-06-26T09:46:48.692Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendStateAndRefFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.709Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=0C38E885817262EED852815950F597848493D6142CB7B93F5BDDAFAA6FF8F08E}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=E0103E547C90758D0627AC0C201167202D6A0EF6890FEFE84270816033B24DA6, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Initiating(bufferedMessages=[(DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-4-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes))], rejectionError=null, deduplicationSeed=R-1968028036458822334-6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendStateAndRefFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=0C38E885817262EED852815950F597848493D6142CB7B93F5BDDAFAA6FF8F08E}, shouldRetrySend=false), frozenFiber=E0103E547C90758D0627AC0C201167202D6A0EF6890FEFE84270816033B24DA6), errorState=Clean, numberOfSuspends=5), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-6-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-6-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-6-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:46:48.692Z
    2020-06-26T09:46:48.706Z
checkpoint.flowState.frozenFiber.hash: 
    613345268CE816D84AEE8234C5942E932FE2E8F7EC4A496898F6C084A7F5F851
    E0103E547C90758D0627AC0C201167202D6A0EF6890FEFE84270816033B24DA6
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=A4D60D04914B77EDA16FD770A77B0EF1EA2B590756FBF27689E00F8F669A3141})
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=0C38E885817262EED852815950F597848493D6142CB7B93F5BDDAFAA6FF8F08E}, shouldRetrySend=false)
checkpoint.numberOfSuspends: 
    4
    5


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.710Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.706Z
    2020-06-26T09:46:48.710Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=0C38E885817262EED852815950F597848493D6142CB7B93F5BDDAFAA6FF8F08E}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))])
checkpoint.sessions.SessionId(toLong=1968028036458822334).bufferedMessages: 
    [(DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-4-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes))]
    [(DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-4-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), (DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-5-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes))]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.710Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.719Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1968028036458822334), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-5134673326446754320), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1))), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-0-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5134673326446754320), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-4-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5134673326446754320), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-5-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-0-0))]
checkpoint.sessions.SessionId(toLong=1968028036458822334): 
    Initiating(bufferedMessages=[(DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-4-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), (DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-5-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes))], rejectionError=null, deduplicationSeed=R-1968028036458822334-6299100686098615915)
    Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-5134673326446754320)), errors=[], deduplicationSeed=R-1968028036458822334-6299100686098615915)


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.721Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.763Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1968028036458822334), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-4-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-0-0))]
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-4-0))]
checkpoint.timestamp: 
    2020-06-26T09:46:48.720Z
    2020-06-26T09:46:48.763Z
checkpoint.sessions.SessionId(toLong=1968028036458822334).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.763Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=1968028036458822334).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.764Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.763Z
    2020-06-26T09:46:48.764Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendStateAndRefFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.770Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=3E413F3C7B8692FE19DF91C67146CC421B3E951B734AC588F2942E4F02B9715B}), maySkipCheckpoint=false, fiber=CA5E02ED993EF4FB399A4D8E0292637021016C4C93E42EE43A651EE66E79A499, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-5134673326446754320)), errors=[], deduplicationSeed=R-1968028036458822334-6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=3E413F3C7B8692FE19DF91C67146CC421B3E951B734AC588F2942E4F02B9715B}), frozenFiber=CA5E02ED993EF4FB399A4D8E0292637021016C4C93E42EE43A651EE66E79A499), errorState=Clean, numberOfSuspends=6), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-4-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-4-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-4-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:46:48.764Z
    2020-06-26T09:46:48.767Z
checkpoint.flowState.frozenFiber.hash: 
    E0103E547C90758D0627AC0C201167202D6A0EF6890FEFE84270816033B24DA6
    CA5E02ED993EF4FB399A4D8E0292637021016C4C93E42EE43A651EE66E79A499
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=3E413F3C7B8692FE19DF91C67146CC421B3E951B734AC588F2942E4F02B9715B})
checkpoint.numberOfSuspends: 
    5
    6


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.776Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5134673326446754320), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-6-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.777Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.771Z
    2020-06-26T09:46:48.777Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.790Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=3421CF872C3C23799030279EFEBCBB30C0CBDC4617F47BFBA2C174F1D489C9B0}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=EF3CB78E637238EBFC754932037BF3966E053809178885906E76A280082F8E14, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-5134673326446754320)), errors=[], deduplicationSeed=R-1968028036458822334-6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=3421CF872C3C23799030279EFEBCBB30C0CBDC4617F47BFBA2C174F1D489C9B0}, shouldRetrySend=false), frozenFiber=EF3CB78E637238EBFC754932037BF3966E053809178885906E76A280082F8E14), errorState=Clean, numberOfSuspends=7), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:46:48.777Z
    2020-06-26T09:46:48.786Z
checkpoint.flowState.frozenFiber.hash: 
    CA5E02ED993EF4FB399A4D8E0292637021016C4C93E42EE43A651EE66E79A499
    EF3CB78E637238EBFC754932037BF3966E053809178885906E76A280082F8E14
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=3E413F3C7B8692FE19DF91C67146CC421B3E951B734AC588F2942E4F02B9715B})
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=3421CF872C3C23799030279EFEBCBB30C0CBDC4617F47BFBA2C174F1D489C9B0}, shouldRetrySend=false)
checkpoint.numberOfSuspends: 
    6
    7


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.794Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5134673326446754320), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-7-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.786Z
    2020-06-26T09:46:48.791Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=3421CF872C3C23799030279EFEBCBB30C0CBDC4617F47BFBA2C174F1D489C9B0}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))])


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.849Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1968028036458822334), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-7-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-7-0))]
checkpoint.timestamp: 
    2020-06-26T09:46:48.791Z
    2020-06-26T09:46:48.849Z
checkpoint.sessions.SessionId(toLong=1968028036458822334).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.849Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=1968028036458822334).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.863Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=C16CFAB44691F912045D549AC66C671A64F1F3FD1FDF87CDB0063B952124B52D}), maySkipCheckpoint=false, fiber=39E472598109A475E1290D51DFAC5D4EE302099B453B007FB6BD064B311FA3CB, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-5134673326446754320)), errors=[], deduplicationSeed=R-1968028036458822334-6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=C16CFAB44691F912045D549AC66C671A64F1F3FD1FDF87CDB0063B952124B52D}), frozenFiber=39E472598109A475E1290D51DFAC5D4EE302099B453B007FB6BD064B311FA3CB), errorState=Clean, numberOfSuspends=8), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-7-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-7-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-7-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:46:48.849Z
    2020-06-26T09:46:48.859Z
checkpoint.flowState.frozenFiber.hash: 
    EF3CB78E637238EBFC754932037BF3966E053809178885906E76A280082F8E14
    39E472598109A475E1290D51DFAC5D4EE302099B453B007FB6BD064B311FA3CB
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=C16CFAB44691F912045D549AC66C671A64F1F3FD1FDF87CDB0063B952124B52D})
checkpoint.numberOfSuspends: 
    7
    8


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.870Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5134673326446754320), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-8-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.870Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.863Z
    2020-06-26T09:46:48.870Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.874Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.870Z
    2020-06-26T09:46:48.874Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.884Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))]), maySkipCheckpoint=false, fiber=971B93224CC9FB7FA35CC9A053E6A7BE1846152877E89E980598C010B060844D, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-5134673326446754320)), errors=[], deduplicationSeed=R-1968028036458822334-6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))]), frozenFiber=971B93224CC9FB7FA35CC9A053E6A7BE1846152877E89E980598C010B060844D), errorState=Clean, numberOfSuspends=9), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:46:48.874Z
    2020-06-26T09:46:48.881Z
checkpoint.flowState.frozenFiber.hash: 
    39E472598109A475E1290D51DFAC5D4EE302099B453B007FB6BD064B311FA3CB
    971B93224CC9FB7FA35CC9A053E6A7BE1846152877E89E980598C010B060844D
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=C16CFAB44691F912045D549AC66C671A64F1F3FD1FDF87CDB0063B952124B52D})
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))])
checkpoint.numberOfSuspends: 
    8
    9


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.884Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:37.826Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1968028036458822334), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-12-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-12-0))]
checkpoint.timestamp: 
    2020-06-26T09:46:48.884Z
    2020-06-26T09:47:37.826Z
checkpoint.sessions.SessionId(toLong=1968028036458822334).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:37.826Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=1968028036458822334).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:37.847Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=750FC7B450DD71E964AD943444C4CDBACAA3FC0ABD6FB028263312F11B599279}), maySkipCheckpoint=false, fiber=CB2BD1FA7723511CFF2A67CA20DC51071270906E62864480EEC4484F506DF957, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-5134673326446754320)), errors=[], deduplicationSeed=R-1968028036458822334-6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=750FC7B450DD71E964AD943444C4CDBACAA3FC0ABD6FB028263312F11B599279}), frozenFiber=CB2BD1FA7723511CFF2A67CA20DC51071270906E62864480EEC4484F506DF957), errorState=Clean, numberOfSuspends=10), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-12-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-12-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-12-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:47:37.826Z
    2020-06-26T09:47:37.835Z
checkpoint.flowState.frozenFiber.hash: 
    971B93224CC9FB7FA35CC9A053E6A7BE1846152877E89E980598C010B060844D
    CB2BD1FA7723511CFF2A67CA20DC51071270906E62864480EEC4484F506DF957
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=750FC7B450DD71E964AD943444C4CDBACAA3FC0ABD6FB028263312F11B599279})
checkpoint.numberOfSuspends: 
    9
    10


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:37.870Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5134673326446754320), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-10-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:37.911Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))]), maySkipCheckpoint=false, fiber=58A301C83A0E6A651B858A0D9D162FD3348005B47ABC75B6FEFF4A92BF7268D6, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-5134673326446754320)), errors=[], deduplicationSeed=R-1968028036458822334-6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))]), frozenFiber=58A301C83A0E6A651B858A0D9D162FD3348005B47ABC75B6FEFF4A92BF7268D6), errorState=Clean, numberOfSuspends=11), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:47:37.848Z
    2020-06-26T09:47:37.898Z
checkpoint.flowState.frozenFiber.hash: 
    CB2BD1FA7723511CFF2A67CA20DC51071270906E62864480EEC4484F506DF957
    58A301C83A0E6A651B858A0D9D162FD3348005B47ABC75B6FEFF4A92BF7268D6
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=750FC7B450DD71E964AD943444C4CDBACAA3FC0ABD6FB028263312F11B599279})
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))])
checkpoint.numberOfSuspends: 
    10
    11


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:37.911Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.080Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1968028036458822334), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-13-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-13-0))]
checkpoint.timestamp: 
    2020-06-26T09:47:37.911Z
    2020-06-26T09:47:38.080Z
checkpoint.sessions.SessionId(toLong=1968028036458822334).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.081Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=1968028036458822334).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.082Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:47:38.080Z
    2020-06-26T09:47:38.082Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.083Z
  Event: EnterSubFlow(subFlowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.083Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:47:38.082Z
    2020-06-26T09:47:38.083Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.102Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))]), maySkipCheckpoint=false, fiber=9562FE5D22EEEAB4F9543CD4D743A3F49A1485E6E16AD2E9646B5DCDA3055160, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-5134673326446754320)), errors=[], deduplicationSeed=R-1968028036458822334-6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))]), frozenFiber=9562FE5D22EEEAB4F9543CD4D743A3F49A1485E6E16AD2E9646B5DCDA3055160), errorState=Clean, numberOfSuspends=12), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-13-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-13-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-13-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:47:38.083Z
    2020-06-26T09:47:38.095Z
checkpoint.flowState.frozenFiber.hash: 
    58A301C83A0E6A651B858A0D9D162FD3348005B47ABC75B6FEFF4A92BF7268D6
    9562FE5D22EEEAB4F9543CD4D743A3F49A1485E6E16AD2E9646B5DCDA3055160
checkpoint.numberOfSuspends: 
    11
    12


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.103Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.481Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1968028036458822334), payload=ErrorSessionMessage(flowException=null, errorId=-3267875398831106038)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=E--3267875398831106038-1968028036458822334)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=E--3267875398831106038-1968028036458822334))]
checkpoint.timestamp: 
    2020-06-26T09:47:38.103Z
    2020-06-26T09:47:38.481Z
checkpoint.sessions.SessionId(toLong=1968028036458822334).errors: 
    []
    [FlowError(errorId=-3267875398831106038, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.481Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.482Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:47:38.481Z
    2020-06-26T09:47:38.482Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.482Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.487Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-3267875398831106038, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.487Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.487Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:47:38.482Z
    2020-06-26T09:47:38.487Z
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000011, flow-id=4f4551fe-1078-47b8-9344-4a77fbf463fa, invocation_id=6d7fbce1-739e-4d5f-8868-90988bc301bf, invocation_timestamp=2020-06-26T09:46:48.455Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
[WARN ] 2020-06-26T09:47:38,536Z [Node thread-1] interceptors.DumpHistoryOnErrorInterceptor. - Flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] error [errorCode=18cklat, moreInformationAt=https://errors.corda.net/OS/4.4/18cklat] {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000011, flow-id=4f4551fe-1078-47b8-9344-4a77fbf463fa, invocation_id=6d7fbce1-739e-4d5f-8868-90988bc301bf, invocation_timestamp=2020-06-26T09:46:48.455Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Dealer1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:176) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:164) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:449) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:331) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:338) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:331) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:338) ~[corda-core-4.4.jar:?]
	at com.t20worldcup.flows.MoveTokensBetweenAccounts.call(MoveTokensBetweenAccounts.kt:148) ~[?:?]
	at com.t20worldcup.flows.MoveTokensBetweenAccounts.call(MoveTokensBetweenAccounts.kt:50) ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.FutureTask.run(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) ~[?:1.8.0_251]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-06-26T09:47:38,536Z [Node thread-1] statemachine.ActionExecutorImpl. - Propagating error {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000011, flow-id=4f4551fe-1078-47b8-9344-4a77fbf463fa, invocation_id=6d7fbce1-739e-4d5f-8868-90988bc301bf, invocation_timestamp=2020-06-26T09:46:48.455Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
[WARN ] 2020-06-26T09:47:38,750Z [Node thread-1] interceptors.DumpHistoryOnErrorInterceptor. - Flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] errored, dumping all transitions:

 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.471Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=2E26996BD6D3BA8321F460A58E3F0D91A8B9C286FD79E32A1DEFAAAAC4AF9974), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@a1b3751])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@a1b3751])
    SignalFlowHasStarted(flowId=[4f4551fe-1078-47b8-9344-4a77fbf463fa])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@a1b3751]
    []
isAnyCheckpointPersisted: 
    false
    true


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.481Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.459Z
    2020-06-26T09:46:48.481Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.482Z
  Event: InitiateFlow(destination=O=Dealer2, L=Delhi, C=IN, wellKnownParty=O=Dealer2, L=Delhi, C=IN)
  Actions: 
    AddSessionBinding(flowId=[4f4551fe-1078-47b8-9344-4a77fbf463fa], sessionId=SessionId(toLong=-2097286078881088472))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.481Z
    2020-06-26T09:46:48.482Z
checkpoint.sessions.SessionId(toLong=-2097286078881088472): 
    null
    Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184)


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.483Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.482Z
    2020-06-26T09:46:48.483Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.486Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.483Z
    2020-06-26T09:46:48.486Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.486Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.494Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.486Z
    2020-06-26T09:46:48.494Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.495Z
  Event: InitiateFlow(destination=O=Dealer1, L=London, C=GB, wellKnownParty=O=Dealer1, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[4f4551fe-1078-47b8-9344-4a77fbf463fa], sessionId=SessionId(toLong=6715046530186455525))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.494Z
    2020-06-26T09:46:48.495Z
checkpoint.sessions.SessionId(toLong=6715046530186455525): 
    null
    Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=6715046530186455525), additionalEntropy=-8843764790742969077)


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.495Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.508Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=ADB45CC790F3B90D668A9F26CC23BE689CBFC04B4B8388A49714C463CD817F0D}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=421FB034C7D79347B3A2A12682B519345A93922D09704DC4E2DFCEAD73A85F59, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=6715046530186455525), additionalEntropy=-8843764790742969077)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=ADB45CC790F3B90D668A9F26CC23BE689CBFC04B4B8388A49714C463CD817F0D}, shouldRetrySend=false), frozenFiber=421FB034C7D79347B3A2A12682B519345A93922D09704DC4E2DFCEAD73A85F59), errorState=Clean, numberOfSuspends=1), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:46:48.495Z
    2020-06-26T09:46:48.504Z
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=2E26996BD6D3BA8321F460A58E3F0D91A8B9C286FD79E32A1DEFAAAAC4AF9974)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=ADB45CC790F3B90D668A9F26CC23BE689CBFC04B4B8388A49714C463CD817F0D}, shouldRetrySend=false), frozenFiber=421FB034C7D79347B3A2A12682B519345A93922D09704DC4E2DFCEAD73A85F59)
checkpoint.numberOfSuspends: 
    0
    1


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.514Z
  Event: DoRemainingWork
  Actions: 
    SendInitial(destination=O=Dealer1, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=6715046530186455525), initiationEntropy=-8843764790742969077, initiatorFlowClassName=com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, appName=accounts-workflows-1.0, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-6715046530186455525--8843764790742969077-1-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.504Z
    2020-06-26T09:46:48.508Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=ADB45CC790F3B90D668A9F26CC23BE689CBFC04B4B8388A49714C463CD817F0D}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))])
checkpoint.sessions.SessionId(toLong=6715046530186455525): 
    Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=6715046530186455525), additionalEntropy=-8843764790742969077)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-6715046530186455525--8843764790742969077)


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.580Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6715046530186455525), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-4620415777934936023), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0))), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-0-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-0-0))]
checkpoint.timestamp: 
    2020-06-26T09:46:48.508Z
    2020-06-26T09:46:48.580Z
checkpoint.sessions.SessionId(toLong=6715046530186455525): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-6715046530186455525--8843764790742969077)
    Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4620415777934936023)), errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077)


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.580Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.596Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6715046530186455525), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-2-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-0-0))]
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-2-0))]
checkpoint.timestamp: 
    2020-06-26T09:46:48.580Z
    2020-06-26T09:46:48.596Z
checkpoint.sessions.SessionId(toLong=6715046530186455525).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.596Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=6715046530186455525).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.597Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.596Z
    2020-06-26T09:46:48.597Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.609Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=12512AB6001B54BEF51BF7F6E007A8840A0552C25BC3FC829831655657EA4FF6}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=AF7A5E6F85F40D4D07CCB4CA0A67E805840A6C12FBE56504619D997D9D9574AF, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4620415777934936023)), errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=12512AB6001B54BEF51BF7F6E007A8840A0552C25BC3FC829831655657EA4FF6}, shouldRetrySend=false), frozenFiber=AF7A5E6F85F40D4D07CCB4CA0A67E805840A6C12FBE56504619D997D9D9574AF), errorState=Clean, numberOfSuspends=2), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-2-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-2-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-2-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:46:48.597Z
    2020-06-26T09:46:48.604Z
checkpoint.flowState.frozenFiber.hash: 
    421FB034C7D79347B3A2A12682B519345A93922D09704DC4E2DFCEAD73A85F59
    AF7A5E6F85F40D4D07CCB4CA0A67E805840A6C12FBE56504619D997D9D9574AF
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))])
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=12512AB6001B54BEF51BF7F6E007A8840A0552C25BC3FC829831655657EA4FF6}, shouldRetrySend=false)
checkpoint.numberOfSuspends: 
    1
    2


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.615Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4620415777934936023), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-6715046530186455525--8843764790742969077-2-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.604Z
    2020-06-26T09:46:48.609Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))=12512AB6001B54BEF51BF7F6E007A8840A0552C25BC3FC829831655657EA4FF6}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))])


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.647Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6715046530186455525), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-4-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-4-0))]
checkpoint.timestamp: 
    2020-06-26T09:46:48.609Z
    2020-06-26T09:46:48.647Z
checkpoint.sessions.SessionId(toLong=6715046530186455525).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.647Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=6715046530186455525).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.656Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.647Z
    2020-06-26T09:46:48.656Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.658Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.656Z
    2020-06-26T09:46:48.658Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.658Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.659Z
  Event: InitiateFlow(destination=O=Dealer1, L=London, C=GB, wellKnownParty=O=Dealer1, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[4f4551fe-1078-47b8-9344-4a77fbf463fa], sessionId=SessionId(toLong=1968028036458822334))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.sessions.SessionId(toLong=1968028036458822334): 
    null
    Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1968028036458822334), additionalEntropy=6299100686098615915)


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.670Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=1253348F600D7AB22CEE22D622877100166DD087861BCC67C14208A278BE40F8}), maySkipCheckpoint=false, fiber=613889392F3D87302303AFBF8BC67A4B801609FECECF9CF02368D6DD7158CD37, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4620415777934936023)), errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1968028036458822334), additionalEntropy=6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=1253348F600D7AB22CEE22D622877100166DD087861BCC67C14208A278BE40F8}), frozenFiber=613889392F3D87302303AFBF8BC67A4B801609FECECF9CF02368D6DD7158CD37), errorState=Clean, numberOfSuspends=3), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-4-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-4-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-4-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:46:48.658Z
    2020-06-26T09:46:48.665Z
checkpoint.flowState.frozenFiber.hash: 
    AF7A5E6F85F40D4D07CCB4CA0A67E805840A6C12FBE56504619D997D9D9574AF
    613889392F3D87302303AFBF8BC67A4B801609FECECF9CF02368D6DD7158CD37
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=6715046530186455525))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=1253348F600D7AB22CEE22D622877100166DD087861BCC67C14208A278BE40F8})
checkpoint.numberOfSuspends: 
    2
    3


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.674Z
  Event: DoRemainingWork
  Actions: 
    SendInitial(destination=O=Dealer1, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=1968028036458822334), initiationEntropy=6299100686098615915, initiatorFlowClassName=com.t20worldcup.flows.MoveTokensBetweenAccounts, appName=workflows-0.1, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-3-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.timestamp: 
    2020-06-26T09:46:48.665Z
    2020-06-26T09:46:48.670Z
checkpoint.sessions.SessionId(toLong=1968028036458822334): 
    Uninitiated(destination=O=Dealer1, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1968028036458822334), additionalEntropy=6299100686098615915)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-1968028036458822334-6299100686098615915)


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.680Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=A4D60D04914B77EDA16FD770A77B0EF1EA2B590756FBF27689E00F8F669A3141}), maySkipCheckpoint=false, fiber=613345268CE816D84AEE8234C5942E932FE2E8F7EC4A496898F6C084A7F5F851, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-4620415777934936023)), errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-1968028036458822334-6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=A4D60D04914B77EDA16FD770A77B0EF1EA2B590756FBF27689E00F8F669A3141}), frozenFiber=613345268CE816D84AEE8234C5942E932FE2E8F7EC4A496898F6C084A7F5F851), errorState=Clean, numberOfSuspends=4), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:46:48.670Z
    2020-06-26T09:46:48.677Z
checkpoint.flowState.frozenFiber.hash: 
    613889392F3D87302303AFBF8BC67A4B801609FECECF9CF02368D6DD7158CD37
    613345268CE816D84AEE8234C5942E932FE2E8F7EC4A496898F6C084A7F5F851
checkpoint.flowState.flowIORequest.sessionToMessage.FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334)).hash: 
    1253348F600D7AB22CEE22D622877100166DD087861BCC67C14208A278BE40F8
    A4D60D04914B77EDA16FD770A77B0EF1EA2B590756FBF27689E00F8F669A3141
checkpoint.numberOfSuspends: 
    3
    4


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.680Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6715046530186455525), payload=net.corda.node.services.statemachine.EndSessionMessage@6e52c2fa), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-6-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-6-0))]
checkpoint.timestamp: 
    2020-06-26T09:46:48.677Z
    2020-06-26T09:46:48.680Z
checkpoint.sessions.SessionId(toLong=6715046530186455525).initiatedState: 
    Live(peerSinkSessionId=SessionId(toLong=-4620415777934936023))
    Ended


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.680Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=1968028036458822334).bufferedMessages: 
    []
    [(DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-4-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes))]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.692Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendStateAndRefFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.680Z
    2020-06-26T09:46:48.692Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendStateAndRefFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.709Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=0C38E885817262EED852815950F597848493D6142CB7B93F5BDDAFAA6FF8F08E}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=E0103E547C90758D0627AC0C201167202D6A0EF6890FEFE84270816033B24DA6, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Initiating(bufferedMessages=[(DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-4-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes))], rejectionError=null, deduplicationSeed=R-1968028036458822334-6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendStateAndRefFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=0C38E885817262EED852815950F597848493D6142CB7B93F5BDDAFAA6FF8F08E}, shouldRetrySend=false), frozenFiber=E0103E547C90758D0627AC0C201167202D6A0EF6890FEFE84270816033B24DA6), errorState=Clean, numberOfSuspends=5), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-6-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-6-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-6715046530186455525--8843764790742969077-6-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:46:48.692Z
    2020-06-26T09:46:48.706Z
checkpoint.flowState.frozenFiber.hash: 
    613345268CE816D84AEE8234C5942E932FE2E8F7EC4A496898F6C084A7F5F851
    E0103E547C90758D0627AC0C201167202D6A0EF6890FEFE84270816033B24DA6
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=A4D60D04914B77EDA16FD770A77B0EF1EA2B590756FBF27689E00F8F669A3141})
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=0C38E885817262EED852815950F597848493D6142CB7B93F5BDDAFAA6FF8F08E}, shouldRetrySend=false)
checkpoint.numberOfSuspends: 
    4
    5


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.710Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.706Z
    2020-06-26T09:46:48.710Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=0C38E885817262EED852815950F597848493D6142CB7B93F5BDDAFAA6FF8F08E}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))])
checkpoint.sessions.SessionId(toLong=1968028036458822334).bufferedMessages: 
    [(DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-4-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes))]
    [(DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-4-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), (DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-5-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes))]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.710Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.719Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1968028036458822334), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-5134673326446754320), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1))), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-0-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5134673326446754320), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-4-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5134673326446754320), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-5-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-0-0))]
checkpoint.sessions.SessionId(toLong=1968028036458822334): 
    Initiating(bufferedMessages=[(DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-4-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), (DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-5-0), DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes))], rejectionError=null, deduplicationSeed=R-1968028036458822334-6299100686098615915)
    Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-5134673326446754320)), errors=[], deduplicationSeed=R-1968028036458822334-6299100686098615915)


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.721Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.763Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1968028036458822334), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-4-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-0-0))]
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-4-0))]
checkpoint.timestamp: 
    2020-06-26T09:46:48.720Z
    2020-06-26T09:46:48.763Z
checkpoint.sessions.SessionId(toLong=1968028036458822334).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.763Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=1968028036458822334).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.764Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.763Z
    2020-06-26T09:46:48.764Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendStateAndRefFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.770Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=3E413F3C7B8692FE19DF91C67146CC421B3E951B734AC588F2942E4F02B9715B}), maySkipCheckpoint=false, fiber=CA5E02ED993EF4FB399A4D8E0292637021016C4C93E42EE43A651EE66E79A499, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-5134673326446754320)), errors=[], deduplicationSeed=R-1968028036458822334-6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=3E413F3C7B8692FE19DF91C67146CC421B3E951B734AC588F2942E4F02B9715B}), frozenFiber=CA5E02ED993EF4FB399A4D8E0292637021016C4C93E42EE43A651EE66E79A499), errorState=Clean, numberOfSuspends=6), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-4-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-4-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-0-0)), MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-4-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:46:48.764Z
    2020-06-26T09:46:48.767Z
checkpoint.flowState.frozenFiber.hash: 
    E0103E547C90758D0627AC0C201167202D6A0EF6890FEFE84270816033B24DA6
    CA5E02ED993EF4FB399A4D8E0292637021016C4C93E42EE43A651EE66E79A499
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=3E413F3C7B8692FE19DF91C67146CC421B3E951B734AC588F2942E4F02B9715B})
checkpoint.numberOfSuspends: 
    5
    6


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.776Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5134673326446754320), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-6-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.777Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.771Z
    2020-06-26T09:46:48.777Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.790Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=3421CF872C3C23799030279EFEBCBB30C0CBDC4617F47BFBA2C174F1D489C9B0}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=EF3CB78E637238EBFC754932037BF3966E053809178885906E76A280082F8E14, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-5134673326446754320)), errors=[], deduplicationSeed=R-1968028036458822334-6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=3421CF872C3C23799030279EFEBCBB30C0CBDC4617F47BFBA2C174F1D489C9B0}, shouldRetrySend=false), frozenFiber=EF3CB78E637238EBFC754932037BF3966E053809178885906E76A280082F8E14), errorState=Clean, numberOfSuspends=7), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:46:48.777Z
    2020-06-26T09:46:48.786Z
checkpoint.flowState.frozenFiber.hash: 
    CA5E02ED993EF4FB399A4D8E0292637021016C4C93E42EE43A651EE66E79A499
    EF3CB78E637238EBFC754932037BF3966E053809178885906E76A280082F8E14
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=3E413F3C7B8692FE19DF91C67146CC421B3E951B734AC588F2942E4F02B9715B})
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=3421CF872C3C23799030279EFEBCBB30C0CBDC4617F47BFBA2C174F1D489C9B0}, shouldRetrySend=false)
checkpoint.numberOfSuspends: 
    6
    7


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.794Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5134673326446754320), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-7-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.786Z
    2020-06-26T09:46:48.791Z
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=3421CF872C3C23799030279EFEBCBB30C0CBDC4617F47BFBA2C174F1D489C9B0}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))])


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.849Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1968028036458822334), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-7-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-7-0))]
checkpoint.timestamp: 
    2020-06-26T09:46:48.791Z
    2020-06-26T09:46:48.849Z
checkpoint.sessions.SessionId(toLong=1968028036458822334).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.849Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=1968028036458822334).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.863Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=C16CFAB44691F912045D549AC66C671A64F1F3FD1FDF87CDB0063B952124B52D}), maySkipCheckpoint=false, fiber=39E472598109A475E1290D51DFAC5D4EE302099B453B007FB6BD064B311FA3CB, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-5134673326446754320)), errors=[], deduplicationSeed=R-1968028036458822334-6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=C16CFAB44691F912045D549AC66C671A64F1F3FD1FDF87CDB0063B952124B52D}), frozenFiber=39E472598109A475E1290D51DFAC5D4EE302099B453B007FB6BD064B311FA3CB), errorState=Clean, numberOfSuspends=8), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-7-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-7-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-7-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:46:48.849Z
    2020-06-26T09:46:48.859Z
checkpoint.flowState.frozenFiber.hash: 
    EF3CB78E637238EBFC754932037BF3966E053809178885906E76A280082F8E14
    39E472598109A475E1290D51DFAC5D4EE302099B453B007FB6BD064B311FA3CB
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=C16CFAB44691F912045D549AC66C671A64F1F3FD1FDF87CDB0063B952124B52D})
checkpoint.numberOfSuspends: 
    7
    8


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.870Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5134673326446754320), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-8-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.870Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.863Z
    2020-06-26T09:46:48.870Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlow, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.874Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:46:48.870Z
    2020-06-26T09:46:48.874Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.884Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))]), maySkipCheckpoint=false, fiber=971B93224CC9FB7FA35CC9A053E6A7BE1846152877E89E980598C010B060844D, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-5134673326446754320)), errors=[], deduplicationSeed=R-1968028036458822334-6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))]), frozenFiber=971B93224CC9FB7FA35CC9A053E6A7BE1846152877E89E980598C010B060844D), errorState=Clean, numberOfSuspends=9), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:46:48.874Z
    2020-06-26T09:46:48.881Z
checkpoint.flowState.frozenFiber.hash: 
    39E472598109A475E1290D51DFAC5D4EE302099B453B007FB6BD064B311FA3CB
    971B93224CC9FB7FA35CC9A053E6A7BE1846152877E89E980598C010B060844D
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=C16CFAB44691F912045D549AC66C671A64F1F3FD1FDF87CDB0063B952124B52D})
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))])
checkpoint.numberOfSuspends: 
    8
    9


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:46:48.884Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:37.826Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1968028036458822334), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-12-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-12-0))]
checkpoint.timestamp: 
    2020-06-26T09:46:48.884Z
    2020-06-26T09:47:37.826Z
checkpoint.sessions.SessionId(toLong=1968028036458822334).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:37.826Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=1968028036458822334).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:37.847Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=750FC7B450DD71E964AD943444C4CDBACAA3FC0ABD6FB028263312F11B599279}), maySkipCheckpoint=false, fiber=CB2BD1FA7723511CFF2A67CA20DC51071270906E62864480EEC4484F506DF957, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-5134673326446754320)), errors=[], deduplicationSeed=R-1968028036458822334-6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=750FC7B450DD71E964AD943444C4CDBACAA3FC0ABD6FB028263312F11B599279}), frozenFiber=CB2BD1FA7723511CFF2A67CA20DC51071270906E62864480EEC4484F506DF957), errorState=Clean, numberOfSuspends=10), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-12-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-12-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-12-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:47:37.826Z
    2020-06-26T09:47:37.835Z
checkpoint.flowState.frozenFiber.hash: 
    971B93224CC9FB7FA35CC9A053E6A7BE1846152877E89E980598C010B060844D
    CB2BD1FA7723511CFF2A67CA20DC51071270906E62864480EEC4484F506DF957
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=750FC7B450DD71E964AD943444C4CDBACAA3FC0ABD6FB028263312F11B599279})
checkpoint.numberOfSuspends: 
    9
    10


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:37.870Z
  Event: DoRemainingWork
  Actions: 
    SendExisting(peerParty=O=Dealer1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5134673326446754320), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1968028036458822334-6299100686098615915-10-0), senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:37.911Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))]), maySkipCheckpoint=false, fiber=58A301C83A0E6A651B858A0D9D162FD3348005B47ABC75B6FEFF4A92BF7268D6, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-5134673326446754320)), errors=[], deduplicationSeed=R-1968028036458822334-6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))]), frozenFiber=58A301C83A0E6A651B858A0D9D162FD3348005B47ABC75B6FEFF4A92BF7268D6), errorState=Clean, numberOfSuspends=11), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.timestamp: 
    2020-06-26T09:47:37.848Z
    2020-06-26T09:47:37.898Z
checkpoint.flowState.frozenFiber.hash: 
    CB2BD1FA7723511CFF2A67CA20DC51071270906E62864480EEC4484F506DF957
    58A301C83A0E6A651B858A0D9D162FD3348005B47ABC75B6FEFF4A92BF7268D6
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))=750FC7B450DD71E964AD943444C4CDBACAA3FC0ABD6FB028263312F11B599279})
    Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))])
checkpoint.numberOfSuspends: 
    10
    11


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:37.911Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.080Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1968028036458822334), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-13-0)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-13-0))]
checkpoint.timestamp: 
    2020-06-26T09:47:37.911Z
    2020-06-26T09:47:38.080Z
checkpoint.sessions.SessionId(toLong=1968028036458822334).receivedMessages: 
    []
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.081Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.sessions.SessionId(toLong=1968028036458822334).receivedMessages: 
    [DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)]
    []


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.082Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:47:38.080Z
    2020-06-26T09:47:38.082Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.SyncKeyMappingFlowHandler, subFlowVersion=CorDappFlow(platformVersion=6, corDappName=ci-workflows-1.0, corDappHash=57B1191E52054D6D6E81A8F2C46583AE2E928A2A6EB82AE08B2C068BCB49ED5C), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.083Z
  Event: EnterSubFlow(subFlowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.083Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:47:38.082Z
    2020-06-26T09:47:38.083Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.102Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))]), maySkipCheckpoint=false, fiber=9562FE5D22EEEAB4F9543CD4D743A3F49A1485E6E16AD2E9646B5DCDA3055160, )
  Actions: 
    PersistCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-5134673326446754320)), errors=[], deduplicationSeed=R-1968028036458822334-6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))]), frozenFiber=9562FE5D22EEEAB4F9543CD4D743A3F49A1485E6E16AD2E9646B5DCDA3055160), errorState=Clean, numberOfSuspends=12), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-13-0))])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-13-0))])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=N-D-1968028036458822334-6299100686098615915-13-0))]
    []
checkpoint.timestamp: 
    2020-06-26T09:47:38.083Z
    2020-06-26T09:47:38.095Z
checkpoint.flowState.frozenFiber.hash: 
    58A301C83A0E6A651B858A0D9D162FD3348005B47ABC75B6FEFF4A92BF7268D6
    9562FE5D22EEEAB4F9543CD4D743A3F49A1485E6E16AD2E9646B5DCDA3055160
checkpoint.numberOfSuspends: 
    11
    12


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.103Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.481Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1968028036458822334), payload=ErrorSessionMessage(flowException=null, errorId=-3267875398831106038)), deduplicationHandler=MessageDeduplicationHandler(DeduplicationId(toString=E--3267875398831106038-1968028036458822334)), sender=O=Dealer1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [MessageDeduplicationHandler(DeduplicationId(toString=E--3267875398831106038-1968028036458822334))]
checkpoint.timestamp: 
    2020-06-26T09:47:38.103Z
    2020-06-26T09:47:38.481Z
checkpoint.sessions.SessionId(toLong=1968028036458822334).errors: 
    []
    [FlowError(errorId=-3267875398831106038, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.481Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.482Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:47:38.481Z
    2020-06-26T09:47:38.482Z
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.482Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.subFlowStack: 
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false), Inlined(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts$call$1, subFlowVersion=CoreFlow(platformVersion=6), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)]


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.487Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-3267875398831106038, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.487Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.487Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.timestamp: 
    2020-06-26T09:47:38.482Z
    2020-06-26T09:47:38.487Z
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] ---
  Timestamp: 2020-06-26T09:47:38.684Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-3267875398831106038)], sessions=[Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077)], senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a)
    CreateTransaction
    RemoveCheckpoint(id=[4f4551fe-1078-47b8-9344-4a77fbf463fa])
    PersistDeduplicationFacts(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=E--3267875398831106038-1968028036458822334))])
    ReleaseSoftLocks(uuid=4f4551fe-1078-47b8-9344-4a77fbf463fa)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[MessageDeduplicationHandler(DeduplicationId(toString=E--3267875398831106038-1968028036458822334))])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-2097286078881088472), SessionId(toLong=6715046530186455525), SessionId(toLong=1968028036458822334)])
    RemoveFlow(flowId=[4f4551fe-1078-47b8-9344-4a77fbf463fa], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-3267875398831106038, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN)), trace=Trace(invocationId=6d7fbce1-739e-4d5f-8868-90988bc301bf, timestamp: 2020-06-26T09:46:48.455Z, entityType: Invocation, sessionId=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, timestamp: 2020-06-26T09:44:06.082Z, entityType: Session), actor=Actor(id=Id(value=internalShell), serviceId=AuthServiceId(value=NODE_CONFIG), owningLegalIdentity=O=Dealer2, L=Delhi, C=IN), externalTrace=null, impersonatedActor=null), ourIdentity=O=Dealer2, L=Delhi, C=IN, sessions={SessionId(toLong=-2097286078881088472)=Uninitiated(destination=O=Dealer2, L=Delhi, C=IN, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-2097286078881088472), additionalEntropy=771921722616800184), SessionId(toLong=6715046530186455525)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], initiatedState=Ended, errors=[], deduplicationSeed=R-6715046530186455525--8843764790742969077), SessionId(toLong=1968028036458822334)=Initiated(peerParty=O=Dealer1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), receivedMessages=[], initiatedState=Live(peerSinkSessionId=SessionId(toLong=-5134673326446754320)), errors=[FlowError(errorId=-3267875398831106038, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], deduplicationSeed=R-1968028036458822334-6299100686098615915)}, subFlowStack=[Initiating(flowClass=class com.t20worldcup.flows.MoveTokensBetweenAccounts, classToInitiateWith=class com.t20worldcup.flows.MoveTokensBetweenAccounts, flowInfo=FlowInfo(flowVersion=1, appName=workflows-0.1), subFlowVersion=CorDappFlow(platformVersion=6, corDappName=workflows-0.1, corDappHash=B102F3B7DC985111C2D2466476B3CBF49C95285B80A834AB664FDD7C1D45E267), isEnabledTimedFlow=false)], flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Dealer1, L=London, C=GB, sourceSessionId=SessionId(toLong=1968028036458822334))]), frozenFiber=9562FE5D22EEEAB4F9543CD4D743A3F49A1485E6E16AD2E9646B5DCDA3055160), errorState=Errored(errors=[FlowError(errorId=-3267875398831106038, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=1, propagating=true), numberOfSuspends=12), flowLogic=com.t20worldcup.flows.MoveTokensBetweenAccounts@4a341cba, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=d5a9932a-11ac-4585-8e2c-ff27686cdd0a))
  Continuation: Abort
  Diff between previous and next state:
isRemoved: 
    false
    true
pendingDeduplicationHandlers: 
    [MessageDeduplicationHandler(DeduplicationId(toString=E--3267875398831106038-1968028036458822334))]
    []
checkpoint.timestamp: 
    2020-06-26T09:47:38.487Z
    2020-06-26T09:47:38.536Z
checkpoint.errorState.propagatedIndex: 
    0
    1
 {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000011, flow-id=4f4551fe-1078-47b8-9344-4a77fbf463fa, invocation_id=6d7fbce1-739e-4d5f-8868-90988bc301bf, invocation_timestamp=2020-06-26T09:46:48.455Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
[WARN ] 2020-06-26T09:47:38,750Z [Node thread-1] interceptors.DumpHistoryOnErrorInterceptor. - Flow [4f4551fe-1078-47b8-9344-4a77fbf463fa] error [errorCode=18cklat, moreInformationAt=https://errors.corda.net/OS/4.4/18cklat] {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000011, flow-id=4f4551fe-1078-47b8-9344-4a77fbf463fa, invocation_id=6d7fbce1-739e-4d5f-8868-90988bc301bf, invocation_timestamp=2020-06-26T09:46:48.455Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Dealer1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:176) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:164) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:449) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:331) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:338) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:277) ~[corda-core-4.4.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:331) ~[corda-node-4.4.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:338) ~[corda-core-4.4.jar:?]
	at com.t20worldcup.flows.MoveTokensBetweenAccounts.call(MoveTokensBetweenAccounts.kt:148) ~[?:?]
	at com.t20worldcup.flows.MoveTokensBetweenAccounts.call(MoveTokensBetweenAccounts.kt:50) ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:271) ~[corda-node-4.4.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.4.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.12_r3-jdk8.jar:0.7.12_r3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.FutureTask.run(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) ~[?:1.8.0_251]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) ~[?:1.8.0_251]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.4.jar:?]
[WARN ] 2020-06-26T09:47:45,624Z [nioEventLoopGroup-2-8] netty.AMQPChannelHandler. - Closing channel due to nonrecoverable exception An existing connection was forcibly closed by the remote host {allowedRemoteLegalNames=O=Dealer1, L=London, C=GB, localCert=O=Dealer2, L=Delhi, C=IN, remoteAddress=localhost/127.0.0.1:10005, remoteCert=O=Dealer1, L=London, C=GB, serverMode=false}
[INFO ] 2020-06-26T09:47:45,625Z [nioEventLoopGroup-2-8] netty.AMQPClient. - Disconnected from localhost:10005
[INFO ] 2020-06-26T09:47:45,627Z [nioEventLoopGroup-2-8] netty.AMQPChannelHandler. - Closed client connection 27a0c490 from localhost/127.0.0.1:10005 to /127.0.0.1:55104 {allowedRemoteLegalNames=O=Dealer1, L=London, C=GB, localCert=O=Dealer2, L=Delhi, C=IN, remoteAddress=localhost/127.0.0.1:10005, remoteCert=O=Dealer1, L=London, C=GB, serverMode=false}
[INFO ] 2020-06-26T09:47:45,627Z [nioEventLoopGroup-2-8] bridging.AMQPBridgeManager$AMQPBridge. - Bridge Disconnected {legalNames=O=Dealer1, L=London, C=GB, maxMessageSize=10485760, queueName=internal.peers.DLGM15yPUycAkKBhg84fJrPuWFcGgJd3TY1ovwmS1oohuh, targets=localhost:10005}
[INFO ] 2020-06-26T09:47:45,637Z [nioEventLoopGroup-2-8] engine.ConnectionStateMachine. - Connection local close [id: 0x27a0c490, L:/127.0.0.1:55104 ! R:localhost/127.0.0.1:10005] {conn=[id: 0x27a0c490, L:/127.0.0.1:55104 ! R:localhost/127.0.0.1:10005], localLegalName=O=Dealer2, L=Delhi, C=IN, remoteLegalName=O=Dealer1, L=London, C=GB, serverMode=false}
[INFO ] 2020-06-26T09:47:45,637Z [nioEventLoopGroup-2-8] engine.ConnectionStateMachine. - Transport Error [id: 0x27a0c490, L:/127.0.0.1:55104 ! R:localhost/127.0.0.1:10005] {conn=[id: 0x27a0c490, L:/127.0.0.1:55104 ! R:localhost/127.0.0.1:10005], localLegalName=O=Dealer2, L=Delhi, C=IN, remoteLegalName=O=Dealer1, L=London, C=GB, serverMode=false}
[INFO ] 2020-06-26T09:47:45,637Z [nioEventLoopGroup-2-8] engine.ConnectionStateMachine. - Error: connection aborted {conn=[id: 0x27a0c490, L:/127.0.0.1:55104 ! R:localhost/127.0.0.1:10005], localLegalName=O=Dealer2, L=Delhi, C=IN, remoteLegalName=O=Dealer1, L=London, C=GB, serverMode=false}
[INFO ] 2020-06-26T09:47:45,637Z [nioEventLoopGroup-2-8] engine.ConnectionStateMachine. - Connection unbound [id: 0x27a0c490, L:/127.0.0.1:55104 ! R:localhost/127.0.0.1:10005] {conn=[id: 0x27a0c490, L:/127.0.0.1:55104 ! R:localhost/127.0.0.1:10005], localLegalName=O=Dealer2, L=Delhi, C=IN, remoteLegalName=O=Dealer1, L=London, C=GB, serverMode=false}
[INFO ] 2020-06-26T09:47:46,625Z [nioEventLoopGroup-2-9] netty.AMQPClient. - Retry connect to localhost:10005
[INFO ] 2020-06-26T09:47:48,646Z [nioEventLoopGroup-2-10] netty.AMQPClient. - Failed to connect to localhost:10005
[INFO ] 2020-06-26T09:47:50,647Z [nioEventLoopGroup-2-11] netty.AMQPClient. - Retry connect to localhost:10005
[INFO ] 2020-06-26T09:47:52,655Z [nioEventLoopGroup-2-12] netty.AMQPClient. - Failed to connect to localhost:10005
[INFO ] 2020-06-26T09:47:56,656Z [nioEventLoopGroup-2-13] netty.AMQPClient. - Retry connect to localhost:10005
[INFO ] 2020-06-26T09:47:58,666Z [nioEventLoopGroup-2-14] netty.AMQPClient. - Failed to connect to localhost:10005
[INFO ] 2020-06-26T09:48:04,230Z [pool-10-thread-4] shell.FlowShellCommand. - Executing command "flow start MoveTokensBetweenAccounts buyerAccountName: buyer3, sellerAccountName: buyer1, costOfTicket: 5, currency: USD",
[INFO ] 2020-06-26T09:48:04,267Z [Node thread-1] identity.PersistentIdentityService. - Linking: D48591248678072E5F13AA5674FFF91483ACDF59F1B1680DAB1238E5DFB4D4E4 to O=Dealer2, L=Delhi, C=IN {actor_id=internalShell, actor_owning_identity=O=Dealer2, L=Delhi, C=IN, actor_store_id=NODE_CONFIG, fiber-id=10000014, flow-id=b461706e-c24c-4ee4-94f2-b4b45b19cf25, invocation_id=55f72f6e-4415-4162-bbfc-f1cb3adb6cf7, invocation_timestamp=2020-06-26T09:48:04.244Z, origin=internalShell, session_id=2fd74a5d-244f-4d28-8fe7-9e9e682e6731, session_timestamp=2020-06-26T09:44:06.082Z, thread-id=361}
[INFO ] 2020-06-26T09:48:06,666Z [nioEventLoopGroup-2-15] netty.AMQPClient. - Retry connect to localhost:10005
[INFO ] 2020-06-26T09:48:08,683Z [nioEventLoopGroup-2-16] netty.AMQPClient. - Failed to connect to localhost:10005
[WARN ] 2020-06-26T09:48:11,700Z [nioEventLoopGroup-2-2] netty.AMQPChannelHandler. - Closing channel due to nonrecoverable exception An existing connection was forcibly closed by the remote host {allowedRemoteLegalNames=O=Bank, L=Delhi, C=IN, localCert=O=Dealer2, L=Delhi, C=IN, remoteAddress=localhost/127.0.0.1:10017, remoteCert=O=Bank, L=Delhi, C=IN, serverMode=false}
[INFO ] 2020-06-26T09:48:11,701Z [nioEventLoopGroup-2-2] netty.AMQPClient. - Disconnected from localhost:10017
[INFO ] 2020-06-26T09:48:11,701Z [nioEventLoopGroup-2-2] netty.AMQPChannelHandler. - Closed client connection 9b36f8ff from localhost/127.0.0.1:10017 to /127.0.0.1:55056 {allowedRemoteLegalNames=O=Bank, L=Delhi, C=IN, localCert=O=Dealer2, L=Delhi, C=IN, remoteAddress=localhost/127.0.0.1:10017, remoteCert=O=Bank, L=Delhi, C=IN, serverMode=false}
[INFO ] 2020-06-26T09:48:11,701Z [nioEventLoopGroup-2-2] bridging.AMQPBridgeManager$AMQPBridge. - Bridge Disconnected {legalNames=O=Bank, L=Delhi, C=IN, maxMessageSize=10485760, queueName=internal.peers.DLEUPx7rNA5Fjh3L1NZXRFSjukkc1fc2nSTKSf1YU6KGyS, targets=localhost:10017}
[INFO ] 2020-06-26T09:48:11,703Z [nioEventLoopGroup-2-2] engine.ConnectionStateMachine. - Connection local close [id: 0x9b36f8ff, L:/127.0.0.1:55056 ! R:localhost/127.0.0.1:10017] {conn=[id: 0x9b36f8ff, L:/127.0.0.1:55056 ! R:localhost/127.0.0.1:10017], localLegalName=O=Dealer2, L=Delhi, C=IN, remoteLegalName=O=Bank, L=Delhi, C=IN, serverMode=false}
[INFO ] 2020-06-26T09:48:11,704Z [nioEventLoopGroup-2-2] engine.ConnectionStateMachine. - Transport Error [id: 0x9b36f8ff, L:/127.0.0.1:55056 ! R:localhost/127.0.0.1:10017] {conn=[id: 0x9b36f8ff, L:/127.0.0.1:55056 ! R:localhost/127.0.0.1:10017], localLegalName=O=Dealer2, L=Delhi, C=IN, remoteLegalName=O=Bank, L=Delhi, C=IN, serverMode=false}
[INFO ] 2020-06-26T09:48:11,704Z [nioEventLoopGroup-2-2] engine.ConnectionStateMachine. - Error: connection aborted {conn=[id: 0x9b36f8ff, L:/127.0.0.1:55056 ! R:localhost/127.0.0.1:10017], localLegalName=O=Dealer2, L=Delhi, C=IN, remoteLegalName=O=Bank, L=Delhi, C=IN, serverMode=false}
[INFO ] 2020-06-26T09:48:11,704Z [nioEventLoopGroup-2-2] engine.ConnectionStateMachine. - Connection unbound [id: 0x9b36f8ff, L:/127.0.0.1:55056 ! R:localhost/127.0.0.1:10017] {conn=[id: 0x9b36f8ff, L:/127.0.0.1:55056 ! R:localhost/127.0.0.1:10017], localLegalName=O=Dealer2, L=Delhi, C=IN, remoteLegalName=O=Bank, L=Delhi, C=IN, serverMode=false}
[INFO ] 2020-06-26T09:48:12,701Z [nioEventLoopGroup-2-2] netty.AMQPClient. - Retry connect to localhost:10017
[INFO ] 2020-06-26T09:48:14,706Z [nioEventLoopGroup-2-3] netty.AMQPClient. - Failed to connect to localhost:10017
